{"version":3,"file":"file_form.min.js","sources":["../../../frontend/src/auto_init_file_forms.ts","../../../frontend/node_modules/@babel/runtime/helpers/esm/typeof.js","../../../frontend/node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../../../frontend/node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../../../frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../frontend/src/util.ts","../../../frontend/node_modules/escape-html/index.js","../../../frontend/src/render_upload_file.ts","../../../frontend/node_modules/mime/dist/types/standard.js","../../../frontend/node_modules/mime/dist/src/Mime.js","../../../frontend/node_modules/mime/dist/src/index_lite.js","../../../frontend/node_modules/picomatch/lib/constants.js","../../../frontend/node_modules/picomatch/lib/utils.js","../../../frontend/node_modules/picomatch/lib/scan.js","../../../frontend/node_modules/picomatch/lib/parse.js","../../../frontend/node_modules/picomatch/lib/picomatch.js","../../../frontend/src/accepted_file_types.ts","../../../frontend/src/drop_area.ts","../../../frontend/src/uploads/base_upload.ts","../../../frontend/node_modules/url-join/lib/url-join.js","../../../frontend/src/uploads/s3_utils.ts","../../../frontend/src/uploads/s3_upload.ts","../../../frontend/src/uploads/tus_utils.ts","../../../frontend/src/uploads/uploaded_file.ts","../../../frontend/node_modules/js-base64/base64.mjs","../../../frontend/node_modules/requires-port/index.js","../../../frontend/node_modules/querystringify/index.js","../../../frontend/node_modules/url-parse/index.js","../../../frontend/node_modules/tus-js-client/lib/error.js","../../../frontend/node_modules/tus-js-client/lib/upload.js","../../../frontend/node_modules/tus-js-client/lib/uuid.js","../../../frontend/node_modules/tus-js-client/lib/browser/urlStorage.js","../../../frontend/node_modules/tus-js-client/lib/browser/httpStack.js","../../../frontend/node_modules/tus-js-client/lib/browser/isReactNative.js","../../../frontend/node_modules/tus-js-client/lib/browser/sources/FileSource.js","../../../frontend/node_modules/tus-js-client/lib/browser/sources/isCordova.js","../../../frontend/node_modules/tus-js-client/lib/browser/sources/readAsByteArray.js","../../../frontend/node_modules/tus-js-client/lib/browser/sources/StreamSource.js","../../../frontend/node_modules/tus-js-client/lib/browser/index.js","../../../frontend/node_modules/tus-js-client/lib/browser/fileReader.js","../../../frontend/node_modules/tus-js-client/lib/browser/uriToBlob.js","../../../frontend/node_modules/tus-js-client/lib/noopUrlStorage.js","../../../frontend/node_modules/tus-js-client/lib/browser/fileSignature.js","../../../frontend/src/uploads/tus_upload.ts","../../../frontend/src/file_field.ts","../../../frontend/src/init_upload_fields.ts","../../../frontend/src/file_form.ts","../../../frontend/src/init_form_set.ts"],"sourcesContent":["const findForm = (element: Element): HTMLElement | null => {\n  const parent = element.parentElement;\n\n  if (!parent) {\n    return null;\n  }\n\n  if (parent.tagName === \"FORM\") {\n    return parent;\n  }\n\n  return findForm(parent);\n};\n\nconst unique = (values: unknown[]): unknown[] =>\n  Array.from(new Set(values).values());\n\ndeclare const window: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n\nconst autoInitFileForms = (): void => {\n  const initUploadFields = window.initUploadFields as () => void; // eslint-disable-line  @typescript-eslint/no-unsafe-member-access\n\n  const forms = unique(\n    Array.from(document.querySelectorAll(\".dff-uploader\")).map(findForm)\n  );\n  forms.forEach(initUploadFields);\n};\n\nexport default autoInitFileForms;\n","export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : String(i);\n}","import _typeof from \"./typeof.js\";\nexport default function toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","export const formatBytes = (bytes: number, decimals: number): string => {\n  if (bytes === 0) {\n    return \"0 Bytes\";\n  }\n\n  const k = 1024;\n  const dm = decimals <= 0 ? 0 : decimals || 2;\n  const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\"];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  const n = parseFloat((bytes / k ** i).toFixed(dm));\n  const size = sizes[i];\n\n  return `${n} ${size}`;\n};\n\nexport const getInputNameWithPrefix = (\n  fieldName: string,\n  prefix: string | null\n): string => (prefix ? `${prefix}-${fieldName}` : fieldName);\n\nconst getInputNameWithoutPrefix = (\n  fieldName: string,\n  prefix: string | null\n): string => (prefix ? fieldName.slice(prefix.length + 1) : fieldName);\n\nexport const findInput = (\n  form: Element,\n  fieldName: string,\n  prefix: string | null\n): HTMLInputElement | null => {\n  const inputNameWithPrefix = getInputNameWithPrefix(fieldName, prefix);\n  const input = form.querySelector(`[name=\"${inputNameWithPrefix}\"]`);\n\n  if (!input) {\n    return null;\n  }\n\n  return input as HTMLInputElement;\n};\n\nexport const getUploadsFieldName = (\n  fieldName: string,\n  prefix: string | null\n): string => `${getInputNameWithoutPrefix(fieldName, prefix)}-uploads`;\n\nexport const getInputValueForFormAndPrefix = (\n  form: Element,\n  fieldName: string,\n  prefix: string | null\n): string | undefined => findInput(form, fieldName, prefix)?.value;\n\nexport const getMetadataFieldName = (\n  fieldName: string,\n  prefix: string | null\n): string => `${getInputNameWithoutPrefix(fieldName, prefix)}-metadata`;\n","/*!\n * escape-html\n * Copyright(c) 2012-2013 TJ Holowaychuk\n * Copyright(c) 2015 Andreas Lubbe\n * Copyright(c) 2015 Tiancheng \"Timothy\" Gu\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = escapeHtml;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#39;';\n        break;\n      case 60: // <\n        escape = '&lt;';\n        break;\n      case 62: // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex, index)\n    : html;\n}\n","import escape from \"escape-html\";\nimport { formatBytes } from \"./util\";\n\nclass RenderUploadFile {\n  container: Element;\n  input: HTMLInputElement;\n  translations: { [key: string]: string };\n  errors: Element;\n\n  constructor({\n    parent,\n    input,\n    skipRequired,\n    translations\n  }: {\n    parent: Element;\n    input: HTMLInputElement;\n    skipRequired: boolean;\n    translations: { [key: string]: string };\n  }) {\n    this.container = this.createFilesContainer(parent);\n    this.errors = this.createErrorContainer(parent);\n    this.input = input;\n    this.translations = translations;\n\n    if (skipRequired) {\n      this.input.required = false;\n    }\n  }\n\n  public addNewUpload(filename: string, uploadIndex: number): HTMLElement {\n    const div = this.addFile(filename, uploadIndex);\n\n    const progressSpan = document.createElement(\"span\");\n    progressSpan.className = \"dff-progress\";\n\n    const innerSpan = document.createElement(\"span\");\n    innerSpan.className = \"dff-progress-inner\";\n\n    progressSpan.appendChild(innerSpan);\n    div.appendChild(progressSpan);\n\n    const cancelLink = document.createElement(\"a\");\n    cancelLink.className = \"dff-cancel\";\n    cancelLink.innerHTML = this.translations.Cancel || \"\";\n    cancelLink.setAttribute(\"data-index\", `${uploadIndex}`);\n    cancelLink.href = \"#\";\n    div.appendChild(cancelLink);\n\n    return div;\n  }\n\n  public addUploadedFile(\n    filename: string,\n    uploadIndex: number,\n    filesize?: number\n  ): HTMLElement {\n    const element = this.addFile(filename, uploadIndex);\n    this.setSuccess(uploadIndex, filesize);\n    return element;\n  }\n\n  public clearInput(): void {\n    const { input } = this;\n\n    input.value = \"\";\n  }\n\n  public deleteFile(index: number): void {\n    const div = this.findFileDiv(index);\n\n    if (div) {\n      div.remove();\n    }\n  }\n\n  public disableCancel(index: number): void {\n    const cancelSpan = this.findCancelSpan(index);\n\n    if (cancelSpan) {\n      cancelSpan.classList.add(\"dff-disabled\");\n    }\n  }\n\n  public disableDelete(index: number): void {\n    const deleteLink = this.findDeleteLink(index);\n\n    if (deleteLink) {\n      deleteLink.classList.add(\"dff-disabled\");\n    }\n  }\n\n  public findFileDiv(index: number): HTMLElement | null {\n    return this.container.querySelector(`.dff-file-id-${index}`);\n  }\n\n  public removeDropHint(): void {\n    const dropHint = this.container.querySelector(\".dff-drop-hint\");\n\n    if (dropHint) {\n      dropHint.remove();\n    }\n  }\n\n  public renderDropHint(): void {\n    if (this.container.querySelector(\".dff-drop-hint\")) {\n      return;\n    }\n\n    const dropHint = document.createElement(\"div\");\n    dropHint.className = \"dff-drop-hint\";\n    dropHint.innerHTML = this.translations[\"Drop your files here\"] || \"\";\n\n    this.container.appendChild(dropHint);\n  }\n\n  public setDeleteFailed(index: number): void {\n    this.setErrorMessage(index, this.translations[\"Delete failed\"] || \"\");\n\n    this.enableDelete(index);\n  }\n\n  public setError(index: number): void {\n    this.setErrorMessage(index, this.translations[\"Upload failed\"] || \"\");\n\n    const el = this.findFileDiv(index);\n    if (el) {\n      el.classList.add(\"dff-upload-fail\");\n    }\n\n    this.removeProgress(index);\n    this.removeCancel(index);\n  }\n\n  public setErrorInvalidFiles(files: File[]): void {\n    const errorsMessages = document.createElement(\"ul\");\n\n    for (const file of files) {\n      const msg = document.createElement(\"li\");\n      msg.innerText = `${file.name}: ${this.translations[\"Invalid file type\"]}`;\n      msg.className = \"dff-error\";\n      errorsMessages.appendChild(msg);\n    }\n\n    this.errors.replaceChildren(errorsMessages);\n    this.clearInput();\n  }\n\n  public setSuccess(index: number, size?: number): void {\n    const { translations } = this;\n\n    const el = this.findFileDiv(index);\n    if (el) {\n      el.classList.add(\"dff-upload-success\");\n\n      if (size != null) {\n        const fileSizeInfo = document.createElement(\"span\");\n        fileSizeInfo.innerHTML = formatBytes(size, 2);\n        fileSizeInfo.className = \"dff-filesize\";\n\n        el.appendChild(fileSizeInfo);\n      }\n\n      const deleteLink = document.createElement(\"a\");\n      deleteLink.innerHTML = translations.Delete || \"\";\n      deleteLink.className = \"dff-delete\";\n      deleteLink.setAttribute(\"data-index\", `${index}`);\n      deleteLink.href = \"#\";\n\n      el.appendChild(deleteLink);\n    }\n\n    this.removeProgress(index);\n    this.removeCancel(index);\n  }\n\n  public updateProgress(index: number, percentage: string): void {\n    const el = this.container.querySelector(`.dff-file-id-${index}`);\n    if (el) {\n      const innerProgressSpan = el.querySelector(\".dff-progress-inner\");\n\n      if (innerProgressSpan) {\n        (innerProgressSpan as HTMLElement).style.width = `${percentage}%`;\n      }\n    }\n  }\n\n  private createErrorContainer = (parent: Element): Element => {\n    const div = document.createElement(\"div\");\n    div.className = \"dff-invalid-files\";\n    parent.appendChild(div);\n    return div;\n  };\n\n  private createFilesContainer = (parent: Element): Element => {\n    const div = document.createElement(\"div\");\n    div.className = \"dff-files\";\n    parent.appendChild(div);\n\n    return div;\n  };\n\n  private addFile(filename: string, uploadIndex: number): HTMLElement {\n    const div = document.createElement(\"div\");\n    div.className = `dff-file dff-file-id-${uploadIndex}`;\n\n    const nameSpan = document.createElement(\"span\");\n    nameSpan.innerHTML = escape(filename);\n    nameSpan.className = \"dff-filename\";\n    nameSpan.setAttribute(\"data-index\", `${uploadIndex}`);\n\n    div.appendChild(nameSpan);\n    this.container.appendChild(div);\n\n    this.input.required = false;\n    return div;\n  }\n\n  private removeProgress(index: number): void {\n    const el = this.findFileDiv(index);\n\n    if (el) {\n      const progressSpan = el.querySelector(\".dff-progress\");\n\n      if (progressSpan) {\n        progressSpan.remove();\n      }\n    }\n  }\n\n  private removeCancel(index: number): void {\n    const cancelSpan = this.findCancelSpan(index);\n\n    if (cancelSpan) {\n      cancelSpan.remove();\n    }\n  }\n\n  private findCancelSpan(index: number): HTMLElement | null {\n    const el = this.findFileDiv(index);\n\n    if (!el) {\n      return null;\n    }\n\n    return el.querySelector<HTMLElement>(\".dff-cancel\");\n  }\n\n  private enableDelete(index: number): void {\n    const deleteLink = this.findDeleteLink(index);\n\n    if (deleteLink) {\n      deleteLink.classList.remove(\"dff-disabled\");\n    }\n  }\n\n  private findDeleteLink(index: number): HTMLElement | null {\n    const div = this.findFileDiv(index);\n    if (!div) {\n      return div;\n    }\n\n    return div.querySelector(\".dff-delete\");\n  }\n\n  private setErrorMessage(index: number, message: string): void {\n    const el = this.findFileDiv(index);\n    if (!el) {\n      return;\n    }\n\n    const originalMessageSpan = el.querySelector(\".dff-error\");\n    if (originalMessageSpan) {\n      originalMessageSpan.remove();\n    }\n\n    const span = document.createElement(\"span\");\n    span.classList.add(\"dff-error\");\n    span.innerHTML = message;\n\n    el.appendChild(span);\n  }\n}\n\nexport default RenderUploadFile;\n","const types = { \"application/andrew-inset\": [\"ez\"], \"application/appinstaller\": [\"appinstaller\"], \"application/applixware\": [\"aw\"], \"application/appx\": [\"appx\"], \"application/appxbundle\": [\"appxbundle\"], \"application/atom+xml\": [\"atom\"], \"application/atomcat+xml\": [\"atomcat\"], \"application/atomdeleted+xml\": [\"atomdeleted\"], \"application/atomsvc+xml\": [\"atomsvc\"], \"application/atsc-dwd+xml\": [\"dwd\"], \"application/atsc-held+xml\": [\"held\"], \"application/atsc-rsat+xml\": [\"rsat\"], \"application/automationml-aml+xml\": [\"aml\"], \"application/automationml-amlx+zip\": [\"amlx\"], \"application/bdoc\": [\"bdoc\"], \"application/calendar+xml\": [\"xcs\"], \"application/ccxml+xml\": [\"ccxml\"], \"application/cdfx+xml\": [\"cdfx\"], \"application/cdmi-capability\": [\"cdmia\"], \"application/cdmi-container\": [\"cdmic\"], \"application/cdmi-domain\": [\"cdmid\"], \"application/cdmi-object\": [\"cdmio\"], \"application/cdmi-queue\": [\"cdmiq\"], \"application/cpl+xml\": [\"cpl\"], \"application/cu-seeme\": [\"cu\"], \"application/cwl\": [\"cwl\"], \"application/dash+xml\": [\"mpd\"], \"application/dash-patch+xml\": [\"mpp\"], \"application/davmount+xml\": [\"davmount\"], \"application/docbook+xml\": [\"dbk\"], \"application/dssc+der\": [\"dssc\"], \"application/dssc+xml\": [\"xdssc\"], \"application/ecmascript\": [\"ecma\"], \"application/emma+xml\": [\"emma\"], \"application/emotionml+xml\": [\"emotionml\"], \"application/epub+zip\": [\"epub\"], \"application/exi\": [\"exi\"], \"application/express\": [\"exp\"], \"application/fdf\": [\"fdf\"], \"application/fdt+xml\": [\"fdt\"], \"application/font-tdpfr\": [\"pfr\"], \"application/geo+json\": [\"geojson\"], \"application/gml+xml\": [\"gml\"], \"application/gpx+xml\": [\"gpx\"], \"application/gxf\": [\"gxf\"], \"application/gzip\": [\"gz\"], \"application/hjson\": [\"hjson\"], \"application/hyperstudio\": [\"stk\"], \"application/inkml+xml\": [\"ink\", \"inkml\"], \"application/ipfix\": [\"ipfix\"], \"application/its+xml\": [\"its\"], \"application/java-archive\": [\"jar\", \"war\", \"ear\"], \"application/java-serialized-object\": [\"ser\"], \"application/java-vm\": [\"class\"], \"application/javascript\": [\"*js\"], \"application/json\": [\"json\", \"map\"], \"application/json5\": [\"json5\"], \"application/jsonml+json\": [\"jsonml\"], \"application/ld+json\": [\"jsonld\"], \"application/lgr+xml\": [\"lgr\"], \"application/lost+xml\": [\"lostxml\"], \"application/mac-binhex40\": [\"hqx\"], \"application/mac-compactpro\": [\"cpt\"], \"application/mads+xml\": [\"mads\"], \"application/manifest+json\": [\"webmanifest\"], \"application/marc\": [\"mrc\"], \"application/marcxml+xml\": [\"mrcx\"], \"application/mathematica\": [\"ma\", \"nb\", \"mb\"], \"application/mathml+xml\": [\"mathml\"], \"application/mbox\": [\"mbox\"], \"application/media-policy-dataset+xml\": [\"mpf\"], \"application/mediaservercontrol+xml\": [\"mscml\"], \"application/metalink+xml\": [\"metalink\"], \"application/metalink4+xml\": [\"meta4\"], \"application/mets+xml\": [\"mets\"], \"application/mmt-aei+xml\": [\"maei\"], \"application/mmt-usd+xml\": [\"musd\"], \"application/mods+xml\": [\"mods\"], \"application/mp21\": [\"m21\", \"mp21\"], \"application/mp4\": [\"*mp4\", \"*mpg4\", \"mp4s\", \"m4p\"], \"application/msix\": [\"msix\"], \"application/msixbundle\": [\"msixbundle\"], \"application/msword\": [\"doc\", \"dot\"], \"application/mxf\": [\"mxf\"], \"application/n-quads\": [\"nq\"], \"application/n-triples\": [\"nt\"], \"application/node\": [\"cjs\"], \"application/octet-stream\": [\"bin\", \"dms\", \"lrf\", \"mar\", \"so\", \"dist\", \"distz\", \"pkg\", \"bpk\", \"dump\", \"elc\", \"deploy\", \"exe\", \"dll\", \"deb\", \"dmg\", \"iso\", \"img\", \"msi\", \"msp\", \"msm\", \"buffer\"], \"application/oda\": [\"oda\"], \"application/oebps-package+xml\": [\"opf\"], \"application/ogg\": [\"ogx\"], \"application/omdoc+xml\": [\"omdoc\"], \"application/onenote\": [\"onetoc\", \"onetoc2\", \"onetmp\", \"onepkg\"], \"application/oxps\": [\"oxps\"], \"application/p2p-overlay+xml\": [\"relo\"], \"application/patch-ops-error+xml\": [\"xer\"], \"application/pdf\": [\"pdf\"], \"application/pgp-encrypted\": [\"pgp\"], \"application/pgp-keys\": [\"asc\"], \"application/pgp-signature\": [\"sig\", \"*asc\"], \"application/pics-rules\": [\"prf\"], \"application/pkcs10\": [\"p10\"], \"application/pkcs7-mime\": [\"p7m\", \"p7c\"], \"application/pkcs7-signature\": [\"p7s\"], \"application/pkcs8\": [\"p8\"], \"application/pkix-attr-cert\": [\"ac\"], \"application/pkix-cert\": [\"cer\"], \"application/pkix-crl\": [\"crl\"], \"application/pkix-pkipath\": [\"pkipath\"], \"application/pkixcmp\": [\"pki\"], \"application/pls+xml\": [\"pls\"], \"application/postscript\": [\"ai\", \"eps\", \"ps\"], \"application/provenance+xml\": [\"provx\"], \"application/pskc+xml\": [\"pskcxml\"], \"application/raml+yaml\": [\"raml\"], \"application/rdf+xml\": [\"rdf\", \"owl\"], \"application/reginfo+xml\": [\"rif\"], \"application/relax-ng-compact-syntax\": [\"rnc\"], \"application/resource-lists+xml\": [\"rl\"], \"application/resource-lists-diff+xml\": [\"rld\"], \"application/rls-services+xml\": [\"rs\"], \"application/route-apd+xml\": [\"rapd\"], \"application/route-s-tsid+xml\": [\"sls\"], \"application/route-usd+xml\": [\"rusd\"], \"application/rpki-ghostbusters\": [\"gbr\"], \"application/rpki-manifest\": [\"mft\"], \"application/rpki-roa\": [\"roa\"], \"application/rsd+xml\": [\"rsd\"], \"application/rss+xml\": [\"rss\"], \"application/rtf\": [\"rtf\"], \"application/sbml+xml\": [\"sbml\"], \"application/scvp-cv-request\": [\"scq\"], \"application/scvp-cv-response\": [\"scs\"], \"application/scvp-vp-request\": [\"spq\"], \"application/scvp-vp-response\": [\"spp\"], \"application/sdp\": [\"sdp\"], \"application/senml+xml\": [\"senmlx\"], \"application/sensml+xml\": [\"sensmlx\"], \"application/set-payment-initiation\": [\"setpay\"], \"application/set-registration-initiation\": [\"setreg\"], \"application/shf+xml\": [\"shf\"], \"application/sieve\": [\"siv\", \"sieve\"], \"application/smil+xml\": [\"smi\", \"smil\"], \"application/sparql-query\": [\"rq\"], \"application/sparql-results+xml\": [\"srx\"], \"application/sql\": [\"sql\"], \"application/srgs\": [\"gram\"], \"application/srgs+xml\": [\"grxml\"], \"application/sru+xml\": [\"sru\"], \"application/ssdl+xml\": [\"ssdl\"], \"application/ssml+xml\": [\"ssml\"], \"application/swid+xml\": [\"swidtag\"], \"application/tei+xml\": [\"tei\", \"teicorpus\"], \"application/thraud+xml\": [\"tfi\"], \"application/timestamped-data\": [\"tsd\"], \"application/toml\": [\"toml\"], \"application/trig\": [\"trig\"], \"application/ttml+xml\": [\"ttml\"], \"application/ubjson\": [\"ubj\"], \"application/urc-ressheet+xml\": [\"rsheet\"], \"application/urc-targetdesc+xml\": [\"td\"], \"application/voicexml+xml\": [\"vxml\"], \"application/wasm\": [\"wasm\"], \"application/watcherinfo+xml\": [\"wif\"], \"application/widget\": [\"wgt\"], \"application/winhlp\": [\"hlp\"], \"application/wsdl+xml\": [\"wsdl\"], \"application/wspolicy+xml\": [\"wspolicy\"], \"application/xaml+xml\": [\"xaml\"], \"application/xcap-att+xml\": [\"xav\"], \"application/xcap-caps+xml\": [\"xca\"], \"application/xcap-diff+xml\": [\"xdf\"], \"application/xcap-el+xml\": [\"xel\"], \"application/xcap-ns+xml\": [\"xns\"], \"application/xenc+xml\": [\"xenc\"], \"application/xfdf\": [\"xfdf\"], \"application/xhtml+xml\": [\"xhtml\", \"xht\"], \"application/xliff+xml\": [\"xlf\"], \"application/xml\": [\"xml\", \"xsl\", \"xsd\", \"rng\"], \"application/xml-dtd\": [\"dtd\"], \"application/xop+xml\": [\"xop\"], \"application/xproc+xml\": [\"xpl\"], \"application/xslt+xml\": [\"*xsl\", \"xslt\"], \"application/xspf+xml\": [\"xspf\"], \"application/xv+xml\": [\"mxml\", \"xhvml\", \"xvml\", \"xvm\"], \"application/yang\": [\"yang\"], \"application/yin+xml\": [\"yin\"], \"application/zip\": [\"zip\"], \"audio/3gpp\": [\"*3gpp\"], \"audio/aac\": [\"adts\", \"aac\"], \"audio/adpcm\": [\"adp\"], \"audio/amr\": [\"amr\"], \"audio/basic\": [\"au\", \"snd\"], \"audio/midi\": [\"mid\", \"midi\", \"kar\", \"rmi\"], \"audio/mobile-xmf\": [\"mxmf\"], \"audio/mp3\": [\"*mp3\"], \"audio/mp4\": [\"m4a\", \"mp4a\"], \"audio/mpeg\": [\"mpga\", \"mp2\", \"mp2a\", \"mp3\", \"m2a\", \"m3a\"], \"audio/ogg\": [\"oga\", \"ogg\", \"spx\", \"opus\"], \"audio/s3m\": [\"s3m\"], \"audio/silk\": [\"sil\"], \"audio/wav\": [\"wav\"], \"audio/wave\": [\"*wav\"], \"audio/webm\": [\"weba\"], \"audio/xm\": [\"xm\"], \"font/collection\": [\"ttc\"], \"font/otf\": [\"otf\"], \"font/ttf\": [\"ttf\"], \"font/woff\": [\"woff\"], \"font/woff2\": [\"woff2\"], \"image/aces\": [\"exr\"], \"image/apng\": [\"apng\"], \"image/avci\": [\"avci\"], \"image/avcs\": [\"avcs\"], \"image/avif\": [\"avif\"], \"image/bmp\": [\"bmp\", \"dib\"], \"image/cgm\": [\"cgm\"], \"image/dicom-rle\": [\"drle\"], \"image/dpx\": [\"dpx\"], \"image/emf\": [\"emf\"], \"image/fits\": [\"fits\"], \"image/g3fax\": [\"g3\"], \"image/gif\": [\"gif\"], \"image/heic\": [\"heic\"], \"image/heic-sequence\": [\"heics\"], \"image/heif\": [\"heif\"], \"image/heif-sequence\": [\"heifs\"], \"image/hej2k\": [\"hej2\"], \"image/hsj2\": [\"hsj2\"], \"image/ief\": [\"ief\"], \"image/jls\": [\"jls\"], \"image/jp2\": [\"jp2\", \"jpg2\"], \"image/jpeg\": [\"jpeg\", \"jpg\", \"jpe\"], \"image/jph\": [\"jph\"], \"image/jphc\": [\"jhc\"], \"image/jpm\": [\"jpm\", \"jpgm\"], \"image/jpx\": [\"jpx\", \"jpf\"], \"image/jxr\": [\"jxr\"], \"image/jxra\": [\"jxra\"], \"image/jxrs\": [\"jxrs\"], \"image/jxs\": [\"jxs\"], \"image/jxsc\": [\"jxsc\"], \"image/jxsi\": [\"jxsi\"], \"image/jxss\": [\"jxss\"], \"image/ktx\": [\"ktx\"], \"image/ktx2\": [\"ktx2\"], \"image/png\": [\"png\"], \"image/sgi\": [\"sgi\"], \"image/svg+xml\": [\"svg\", \"svgz\"], \"image/t38\": [\"t38\"], \"image/tiff\": [\"tif\", \"tiff\"], \"image/tiff-fx\": [\"tfx\"], \"image/webp\": [\"webp\"], \"image/wmf\": [\"wmf\"], \"message/disposition-notification\": [\"disposition-notification\"], \"message/global\": [\"u8msg\"], \"message/global-delivery-status\": [\"u8dsn\"], \"message/global-disposition-notification\": [\"u8mdn\"], \"message/global-headers\": [\"u8hdr\"], \"message/rfc822\": [\"eml\", \"mime\"], \"model/3mf\": [\"3mf\"], \"model/gltf+json\": [\"gltf\"], \"model/gltf-binary\": [\"glb\"], \"model/iges\": [\"igs\", \"iges\"], \"model/jt\": [\"jt\"], \"model/mesh\": [\"msh\", \"mesh\", \"silo\"], \"model/mtl\": [\"mtl\"], \"model/obj\": [\"obj\"], \"model/prc\": [\"prc\"], \"model/step+xml\": [\"stpx\"], \"model/step+zip\": [\"stpz\"], \"model/step-xml+zip\": [\"stpxz\"], \"model/stl\": [\"stl\"], \"model/u3d\": [\"u3d\"], \"model/vrml\": [\"wrl\", \"vrml\"], \"model/x3d+binary\": [\"*x3db\", \"x3dbz\"], \"model/x3d+fastinfoset\": [\"x3db\"], \"model/x3d+vrml\": [\"*x3dv\", \"x3dvz\"], \"model/x3d+xml\": [\"x3d\", \"x3dz\"], \"model/x3d-vrml\": [\"x3dv\"], \"text/cache-manifest\": [\"appcache\", \"manifest\"], \"text/calendar\": [\"ics\", \"ifb\"], \"text/coffeescript\": [\"coffee\", \"litcoffee\"], \"text/css\": [\"css\"], \"text/csv\": [\"csv\"], \"text/html\": [\"html\", \"htm\", \"shtml\"], \"text/jade\": [\"jade\"], \"text/javascript\": [\"js\", \"mjs\"], \"text/jsx\": [\"jsx\"], \"text/less\": [\"less\"], \"text/markdown\": [\"md\", \"markdown\"], \"text/mathml\": [\"mml\"], \"text/mdx\": [\"mdx\"], \"text/n3\": [\"n3\"], \"text/plain\": [\"txt\", \"text\", \"conf\", \"def\", \"list\", \"log\", \"in\", \"ini\"], \"text/richtext\": [\"rtx\"], \"text/rtf\": [\"*rtf\"], \"text/sgml\": [\"sgml\", \"sgm\"], \"text/shex\": [\"shex\"], \"text/slim\": [\"slim\", \"slm\"], \"text/spdx\": [\"spdx\"], \"text/stylus\": [\"stylus\", \"styl\"], \"text/tab-separated-values\": [\"tsv\"], \"text/troff\": [\"t\", \"tr\", \"roff\", \"man\", \"me\", \"ms\"], \"text/turtle\": [\"ttl\"], \"text/uri-list\": [\"uri\", \"uris\", \"urls\"], \"text/vcard\": [\"vcard\"], \"text/vtt\": [\"vtt\"], \"text/wgsl\": [\"wgsl\"], \"text/xml\": [\"*xml\"], \"text/yaml\": [\"yaml\", \"yml\"], \"video/3gpp\": [\"3gp\", \"3gpp\"], \"video/3gpp2\": [\"3g2\"], \"video/h261\": [\"h261\"], \"video/h263\": [\"h263\"], \"video/h264\": [\"h264\"], \"video/iso.segment\": [\"m4s\"], \"video/jpeg\": [\"jpgv\"], \"video/jpm\": [\"*jpm\", \"*jpgm\"], \"video/mj2\": [\"mj2\", \"mjp2\"], \"video/mp2t\": [\"ts\"], \"video/mp4\": [\"mp4\", \"mp4v\", \"mpg4\"], \"video/mpeg\": [\"mpeg\", \"mpg\", \"mpe\", \"m1v\", \"m2v\"], \"video/ogg\": [\"ogv\"], \"video/quicktime\": [\"qt\", \"mov\"], \"video/webm\": [\"webm\"] };\nObject.freeze(types);\nexport default types;\n//# sourceMappingURL=standard.js.map","var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Mime_extensionToType, _Mime_typeToExtension, _Mime_typeToExtensions;\nclass Mime {\n    constructor(...args) {\n        _Mime_extensionToType.set(this, new Map());\n        _Mime_typeToExtension.set(this, new Map());\n        _Mime_typeToExtensions.set(this, new Map());\n        for (const arg of args) {\n            this.define(arg);\n        }\n    }\n    define(typeMap, force = false) {\n        for (let [type, extensions] of Object.entries(typeMap)) {\n            type = type.toLowerCase();\n            extensions = extensions.map((ext) => ext.toLowerCase());\n            if (!__classPrivateFieldGet(this, _Mime_typeToExtensions, \"f\").has(type)) {\n                __classPrivateFieldGet(this, _Mime_typeToExtensions, \"f\").set(type, new Set());\n            }\n            const allExtensions = __classPrivateFieldGet(this, _Mime_typeToExtensions, \"f\").get(type);\n            let first = true;\n            for (let extension of extensions) {\n                const starred = extension.startsWith('*');\n                extension = starred ? extension.slice(1) : extension;\n                allExtensions?.add(extension);\n                if (first) {\n                    __classPrivateFieldGet(this, _Mime_typeToExtension, \"f\").set(type, extension);\n                }\n                first = false;\n                if (starred)\n                    continue;\n                const currentType = __classPrivateFieldGet(this, _Mime_extensionToType, \"f\").get(extension);\n                if (currentType && currentType != type && !force) {\n                    throw new Error(`\"${type} -> ${extension}\" conflicts with \"${currentType} -> ${extension}\". Pass \\`force=true\\` to override this definition.`);\n                }\n                __classPrivateFieldGet(this, _Mime_extensionToType, \"f\").set(extension, type);\n            }\n        }\n        return this;\n    }\n    getType(path) {\n        if (typeof path !== 'string')\n            return null;\n        const last = path.replace(/^.*[/\\\\]/, '').toLowerCase();\n        const ext = last.replace(/^.*\\./, '').toLowerCase();\n        const hasPath = last.length < path.length;\n        const hasDot = ext.length < last.length - 1;\n        if (!hasDot && hasPath)\n            return null;\n        return __classPrivateFieldGet(this, _Mime_extensionToType, \"f\").get(ext) ?? null;\n    }\n    getExtension(type) {\n        if (typeof type !== 'string')\n            return null;\n        type = type?.split?.(';')[0];\n        return ((type && __classPrivateFieldGet(this, _Mime_typeToExtension, \"f\").get(type.trim().toLowerCase())) ?? null);\n    }\n    getAllExtensions(type) {\n        if (typeof type !== 'string')\n            return null;\n        return __classPrivateFieldGet(this, _Mime_typeToExtensions, \"f\").get(type.toLowerCase()) ?? null;\n    }\n    _freeze() {\n        this.define = () => {\n            throw new Error('define() not allowed for built-in Mime objects. See https://github.com/broofa/mime/blob/main/README.md#custom-mime-instances');\n        };\n        Object.freeze(this);\n        for (const extensions of __classPrivateFieldGet(this, _Mime_typeToExtensions, \"f\").values()) {\n            Object.freeze(extensions);\n        }\n        return this;\n    }\n    _getTestState() {\n        return {\n            types: __classPrivateFieldGet(this, _Mime_extensionToType, \"f\"),\n            extensions: __classPrivateFieldGet(this, _Mime_typeToExtension, \"f\"),\n        };\n    }\n}\n_Mime_extensionToType = new WeakMap(), _Mime_typeToExtension = new WeakMap(), _Mime_typeToExtensions = new WeakMap();\nexport default Mime;\n//# sourceMappingURL=Mime.js.map","import standardTypes from '../types/standard.js';\nimport Mime from './Mime.js';\nexport { default as Mime } from './Mime.js';\nexport default new Mime(standardTypes)._freeze();\n//# sourceMappingURL=index_lite.js.map","'use strict';\n\nconst WIN_SLASH = '\\\\\\\\/';\nconst WIN_NO_SLASH = `[^${WIN_SLASH}]`;\n\n/**\n * Posix glob regex\n */\n\nconst DOT_LITERAL = '\\\\.';\nconst PLUS_LITERAL = '\\\\+';\nconst QMARK_LITERAL = '\\\\?';\nconst SLASH_LITERAL = '\\\\/';\nconst ONE_CHAR = '(?=.)';\nconst QMARK = '[^/]';\nconst END_ANCHOR = `(?:${SLASH_LITERAL}|$)`;\nconst START_ANCHOR = `(?:^|${SLASH_LITERAL})`;\nconst DOTS_SLASH = `${DOT_LITERAL}{1,2}${END_ANCHOR}`;\nconst NO_DOT = `(?!${DOT_LITERAL})`;\nconst NO_DOTS = `(?!${START_ANCHOR}${DOTS_SLASH})`;\nconst NO_DOT_SLASH = `(?!${DOT_LITERAL}{0,1}${END_ANCHOR})`;\nconst NO_DOTS_SLASH = `(?!${DOTS_SLASH})`;\nconst QMARK_NO_DOT = `[^.${SLASH_LITERAL}]`;\nconst STAR = `${QMARK}*?`;\nconst SEP = '/';\n\nconst POSIX_CHARS = {\n  DOT_LITERAL,\n  PLUS_LITERAL,\n  QMARK_LITERAL,\n  SLASH_LITERAL,\n  ONE_CHAR,\n  QMARK,\n  END_ANCHOR,\n  DOTS_SLASH,\n  NO_DOT,\n  NO_DOTS,\n  NO_DOT_SLASH,\n  NO_DOTS_SLASH,\n  QMARK_NO_DOT,\n  STAR,\n  START_ANCHOR,\n  SEP\n};\n\n/**\n * Windows glob regex\n */\n\nconst WINDOWS_CHARS = {\n  ...POSIX_CHARS,\n\n  SLASH_LITERAL: `[${WIN_SLASH}]`,\n  QMARK: WIN_NO_SLASH,\n  STAR: `${WIN_NO_SLASH}*?`,\n  DOTS_SLASH: `${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$)`,\n  NO_DOT: `(?!${DOT_LITERAL})`,\n  NO_DOTS: `(?!(?:^|[${WIN_SLASH}])${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  NO_DOT_SLASH: `(?!${DOT_LITERAL}{0,1}(?:[${WIN_SLASH}]|$))`,\n  NO_DOTS_SLASH: `(?!${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  QMARK_NO_DOT: `[^.${WIN_SLASH}]`,\n  START_ANCHOR: `(?:^|[${WIN_SLASH}])`,\n  END_ANCHOR: `(?:[${WIN_SLASH}]|$)`,\n  SEP: '\\\\'\n};\n\n/**\n * POSIX Bracket Regex\n */\n\nconst POSIX_REGEX_SOURCE = {\n  alnum: 'a-zA-Z0-9',\n  alpha: 'a-zA-Z',\n  ascii: '\\\\x00-\\\\x7F',\n  blank: ' \\\\t',\n  cntrl: '\\\\x00-\\\\x1F\\\\x7F',\n  digit: '0-9',\n  graph: '\\\\x21-\\\\x7E',\n  lower: 'a-z',\n  print: '\\\\x20-\\\\x7E ',\n  punct: '\\\\-!\"#$%&\\'()\\\\*+,./:;<=>?@[\\\\]^_`{|}~',\n  space: ' \\\\t\\\\r\\\\n\\\\v\\\\f',\n  upper: 'A-Z',\n  word: 'A-Za-z0-9_',\n  xdigit: 'A-Fa-f0-9'\n};\n\nmodule.exports = {\n  MAX_LENGTH: 1024 * 64,\n  POSIX_REGEX_SOURCE,\n\n  // regular expressions\n  REGEX_BACKSLASH: /\\\\(?![*+?^${}(|)[\\]])/g,\n  REGEX_NON_SPECIAL_CHARS: /^[^@![\\].,$*+?^{}()|\\\\/]+/,\n  REGEX_SPECIAL_CHARS: /[-*+?.^${}(|)[\\]]/,\n  REGEX_SPECIAL_CHARS_BACKREF: /(\\\\?)((\\W)(\\3*))/g,\n  REGEX_SPECIAL_CHARS_GLOBAL: /([-*+?.^${}(|)[\\]])/g,\n  REGEX_REMOVE_BACKSLASH: /(?:\\[.*?[^\\\\]\\]|\\\\(?=.))/g,\n\n  // Replace globs with equivalent patterns to reduce parsing time.\n  REPLACEMENTS: {\n    '***': '*',\n    '**/**': '**',\n    '**/**/**': '**'\n  },\n\n  // Digits\n  CHAR_0: 48, /* 0 */\n  CHAR_9: 57, /* 9 */\n\n  // Alphabet chars.\n  CHAR_UPPERCASE_A: 65, /* A */\n  CHAR_LOWERCASE_A: 97, /* a */\n  CHAR_UPPERCASE_Z: 90, /* Z */\n  CHAR_LOWERCASE_Z: 122, /* z */\n\n  CHAR_LEFT_PARENTHESES: 40, /* ( */\n  CHAR_RIGHT_PARENTHESES: 41, /* ) */\n\n  CHAR_ASTERISK: 42, /* * */\n\n  // Non-alphabetic chars.\n  CHAR_AMPERSAND: 38, /* & */\n  CHAR_AT: 64, /* @ */\n  CHAR_BACKWARD_SLASH: 92, /* \\ */\n  CHAR_CARRIAGE_RETURN: 13, /* \\r */\n  CHAR_CIRCUMFLEX_ACCENT: 94, /* ^ */\n  CHAR_COLON: 58, /* : */\n  CHAR_COMMA: 44, /* , */\n  CHAR_DOT: 46, /* . */\n  CHAR_DOUBLE_QUOTE: 34, /* \" */\n  CHAR_EQUAL: 61, /* = */\n  CHAR_EXCLAMATION_MARK: 33, /* ! */\n  CHAR_FORM_FEED: 12, /* \\f */\n  CHAR_FORWARD_SLASH: 47, /* / */\n  CHAR_GRAVE_ACCENT: 96, /* ` */\n  CHAR_HASH: 35, /* # */\n  CHAR_HYPHEN_MINUS: 45, /* - */\n  CHAR_LEFT_ANGLE_BRACKET: 60, /* < */\n  CHAR_LEFT_CURLY_BRACE: 123, /* { */\n  CHAR_LEFT_SQUARE_BRACKET: 91, /* [ */\n  CHAR_LINE_FEED: 10, /* \\n */\n  CHAR_NO_BREAK_SPACE: 160, /* \\u00A0 */\n  CHAR_PERCENT: 37, /* % */\n  CHAR_PLUS: 43, /* + */\n  CHAR_QUESTION_MARK: 63, /* ? */\n  CHAR_RIGHT_ANGLE_BRACKET: 62, /* > */\n  CHAR_RIGHT_CURLY_BRACE: 125, /* } */\n  CHAR_RIGHT_SQUARE_BRACKET: 93, /* ] */\n  CHAR_SEMICOLON: 59, /* ; */\n  CHAR_SINGLE_QUOTE: 39, /* ' */\n  CHAR_SPACE: 32, /*   */\n  CHAR_TAB: 9, /* \\t */\n  CHAR_UNDERSCORE: 95, /* _ */\n  CHAR_VERTICAL_LINE: 124, /* | */\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279, /* \\uFEFF */\n\n  /**\n   * Create EXTGLOB_CHARS\n   */\n\n  extglobChars(chars) {\n    return {\n      '!': { type: 'negate', open: '(?:(?!(?:', close: `))${chars.STAR})` },\n      '?': { type: 'qmark', open: '(?:', close: ')?' },\n      '+': { type: 'plus', open: '(?:', close: ')+' },\n      '*': { type: 'star', open: '(?:', close: ')*' },\n      '@': { type: 'at', open: '(?:', close: ')' }\n    };\n  },\n\n  /**\n   * Create GLOB_CHARS\n   */\n\n  globChars(win32) {\n    return win32 === true ? WINDOWS_CHARS : POSIX_CHARS;\n  }\n};\n","'use strict';\n\nconst {\n  REGEX_BACKSLASH,\n  REGEX_REMOVE_BACKSLASH,\n  REGEX_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_GLOBAL\n} = require('./constants');\n\nexports.isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\nexports.hasRegexChars = str => REGEX_SPECIAL_CHARS.test(str);\nexports.isRegexChar = str => str.length === 1 && exports.hasRegexChars(str);\nexports.escapeRegex = str => str.replace(REGEX_SPECIAL_CHARS_GLOBAL, '\\\\$1');\nexports.toPosixSlashes = str => str.replace(REGEX_BACKSLASH, '/');\n\nexports.removeBackslashes = str => {\n  return str.replace(REGEX_REMOVE_BACKSLASH, match => {\n    return match === '\\\\' ? '' : match;\n  });\n};\n\nexports.supportsLookbehinds = () => {\n  if (typeof process !== 'undefined') {\n    const segs = process.version.slice(1).split('.').map(Number);\n    if (segs.length === 3 && segs[0] >= 9 || (segs[0] === 8 && segs[1] >= 10)) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexports.escapeLast = (input, char, lastIdx) => {\n  const idx = input.lastIndexOf(char, lastIdx);\n  if (idx === -1) return input;\n  if (input[idx - 1] === '\\\\') return exports.escapeLast(input, char, idx - 1);\n  return `${input.slice(0, idx)}\\\\${input.slice(idx)}`;\n};\n\nexports.removePrefix = (input, state = {}) => {\n  let output = input;\n  if (output.startsWith('./')) {\n    output = output.slice(2);\n    state.prefix = './';\n  }\n  return output;\n};\n\nexports.wrapOutput = (input, state = {}, options = {}) => {\n  const prepend = options.contains ? '' : '^';\n  const append = options.contains ? '' : '$';\n\n  let output = `${prepend}(?:${input})${append}`;\n  if (state.negated === true) {\n    output = `(?:^(?!${output}).*$)`;\n  }\n  return output;\n};\n\nexports.basename = (path, { windows } = {}) => {\n  const segs = path.split(windows ? /[\\\\/]/ : '/');\n  const last = segs[segs.length - 1];\n\n  if (last === '') {\n    return segs[segs.length - 2];\n  }\n\n  return last;\n};\n","'use strict';\n\nconst utils = require('./utils');\nconst {\n  CHAR_ASTERISK,             /* * */\n  CHAR_AT,                   /* @ */\n  CHAR_BACKWARD_SLASH,       /* \\ */\n  CHAR_COMMA,                /* , */\n  CHAR_DOT,                  /* . */\n  CHAR_EXCLAMATION_MARK,     /* ! */\n  CHAR_FORWARD_SLASH,        /* / */\n  CHAR_LEFT_CURLY_BRACE,     /* { */\n  CHAR_LEFT_PARENTHESES,     /* ( */\n  CHAR_LEFT_SQUARE_BRACKET,  /* [ */\n  CHAR_PLUS,                 /* + */\n  CHAR_QUESTION_MARK,        /* ? */\n  CHAR_RIGHT_CURLY_BRACE,    /* } */\n  CHAR_RIGHT_PARENTHESES,    /* ) */\n  CHAR_RIGHT_SQUARE_BRACKET  /* ] */\n} = require('./constants');\n\nconst isPathSeparator = code => {\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n};\n\nconst depth = token => {\n  if (token.isPrefix !== true) {\n    token.depth = token.isGlobstar ? Infinity : 1;\n  }\n};\n\n/**\n * Quickly scans a glob pattern and returns an object with a handful of\n * useful properties, like `isGlob`, `path` (the leading non-glob, if it exists),\n * `glob` (the actual pattern), `negated` (true if the path starts with `!` but not\n * with `!(`) and `negatedExtglob` (true if the path starts with `!(`).\n *\n * ```js\n * const pm = require('picomatch');\n * console.log(pm.scan('foo/bar/*.js'));\n * { isGlob: true, input: 'foo/bar/*.js', base: 'foo/bar', glob: '*.js' }\n * ```\n * @param {String} `str`\n * @param {Object} `options`\n * @return {Object} Returns an object with tokens and regex source string.\n * @api public\n */\n\nconst scan = (input, options) => {\n  const opts = options || {};\n\n  const length = input.length - 1;\n  const scanToEnd = opts.parts === true || opts.scanToEnd === true;\n  const slashes = [];\n  const tokens = [];\n  const parts = [];\n\n  let str = input;\n  let index = -1;\n  let start = 0;\n  let lastIndex = 0;\n  let isBrace = false;\n  let isBracket = false;\n  let isGlob = false;\n  let isExtglob = false;\n  let isGlobstar = false;\n  let braceEscaped = false;\n  let backslashes = false;\n  let negated = false;\n  let negatedExtglob = false;\n  let finished = false;\n  let braces = 0;\n  let prev;\n  let code;\n  let token = { value: '', depth: 0, isGlob: false };\n\n  const eos = () => index >= length;\n  const peek = () => str.charCodeAt(index + 1);\n  const advance = () => {\n    prev = code;\n    return str.charCodeAt(++index);\n  };\n\n  while (index < length) {\n    code = advance();\n    let next;\n\n    if (code === CHAR_BACKWARD_SLASH) {\n      backslashes = token.backslashes = true;\n      code = advance();\n\n      if (code === CHAR_LEFT_CURLY_BRACE) {\n        braceEscaped = true;\n      }\n      continue;\n    }\n\n    if (braceEscaped === true || code === CHAR_LEFT_CURLY_BRACE) {\n      braces++;\n\n      while (eos() !== true && (code = advance())) {\n        if (code === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (code === CHAR_LEFT_CURLY_BRACE) {\n          braces++;\n          continue;\n        }\n\n        if (braceEscaped !== true && code === CHAR_DOT && (code = advance()) === CHAR_DOT) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (braceEscaped !== true && code === CHAR_COMMA) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (code === CHAR_RIGHT_CURLY_BRACE) {\n          braces--;\n\n          if (braces === 0) {\n            braceEscaped = false;\n            isBrace = token.isBrace = true;\n            finished = true;\n            break;\n          }\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (code === CHAR_FORWARD_SLASH) {\n      slashes.push(index);\n      tokens.push(token);\n      token = { value: '', depth: 0, isGlob: false };\n\n      if (finished === true) continue;\n      if (prev === CHAR_DOT && index === (start + 1)) {\n        start += 2;\n        continue;\n      }\n\n      lastIndex = index + 1;\n      continue;\n    }\n\n    if (opts.noext !== true) {\n      const isExtglobChar = code === CHAR_PLUS\n        || code === CHAR_AT\n        || code === CHAR_ASTERISK\n        || code === CHAR_QUESTION_MARK\n        || code === CHAR_EXCLAMATION_MARK;\n\n      if (isExtglobChar === true && peek() === CHAR_LEFT_PARENTHESES) {\n        isGlob = token.isGlob = true;\n        isExtglob = token.isExtglob = true;\n        finished = true;\n        if (code === CHAR_EXCLAMATION_MARK && index === start) {\n          negatedExtglob = true;\n        }\n\n        if (scanToEnd === true) {\n          while (eos() !== true && (code = advance())) {\n            if (code === CHAR_BACKWARD_SLASH) {\n              backslashes = token.backslashes = true;\n              code = advance();\n              continue;\n            }\n\n            if (code === CHAR_RIGHT_PARENTHESES) {\n              isGlob = token.isGlob = true;\n              finished = true;\n              break;\n            }\n          }\n          continue;\n        }\n        break;\n      }\n    }\n\n    if (code === CHAR_ASTERISK) {\n      if (prev === CHAR_ASTERISK) isGlobstar = token.isGlobstar = true;\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_QUESTION_MARK) {\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_LEFT_SQUARE_BRACKET) {\n      while (eos() !== true && (next = advance())) {\n        if (next === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (next === CHAR_RIGHT_SQUARE_BRACKET) {\n          isBracket = token.isBracket = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n          break;\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (opts.nonegate !== true && code === CHAR_EXCLAMATION_MARK && index === start) {\n      negated = token.negated = true;\n      start++;\n      continue;\n    }\n\n    if (opts.noparen !== true && code === CHAR_LEFT_PARENTHESES) {\n      isGlob = token.isGlob = true;\n\n      if (scanToEnd === true) {\n        while (eos() !== true && (code = advance())) {\n          if (code === CHAR_LEFT_PARENTHESES) {\n            backslashes = token.backslashes = true;\n            code = advance();\n            continue;\n          }\n\n          if (code === CHAR_RIGHT_PARENTHESES) {\n            finished = true;\n            break;\n          }\n        }\n        continue;\n      }\n      break;\n    }\n\n    if (isGlob === true) {\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n  }\n\n  if (opts.noext === true) {\n    isExtglob = false;\n    isGlob = false;\n  }\n\n  let base = str;\n  let prefix = '';\n  let glob = '';\n\n  if (start > 0) {\n    prefix = str.slice(0, start);\n    str = str.slice(start);\n    lastIndex -= start;\n  }\n\n  if (base && isGlob === true && lastIndex > 0) {\n    base = str.slice(0, lastIndex);\n    glob = str.slice(lastIndex);\n  } else if (isGlob === true) {\n    base = '';\n    glob = str;\n  } else {\n    base = str;\n  }\n\n  if (base && base !== '' && base !== '/' && base !== str) {\n    if (isPathSeparator(base.charCodeAt(base.length - 1))) {\n      base = base.slice(0, -1);\n    }\n  }\n\n  if (opts.unescape === true) {\n    if (glob) glob = utils.removeBackslashes(glob);\n\n    if (base && backslashes === true) {\n      base = utils.removeBackslashes(base);\n    }\n  }\n\n  const state = {\n    prefix,\n    input,\n    start,\n    base,\n    glob,\n    isBrace,\n    isBracket,\n    isGlob,\n    isExtglob,\n    isGlobstar,\n    negated,\n    negatedExtglob\n  };\n\n  if (opts.tokens === true) {\n    state.maxDepth = 0;\n    if (!isPathSeparator(code)) {\n      tokens.push(token);\n    }\n    state.tokens = tokens;\n  }\n\n  if (opts.parts === true || opts.tokens === true) {\n    let prevIndex;\n\n    for (let idx = 0; idx < slashes.length; idx++) {\n      const n = prevIndex ? prevIndex + 1 : start;\n      const i = slashes[idx];\n      const value = input.slice(n, i);\n      if (opts.tokens) {\n        if (idx === 0 && start !== 0) {\n          tokens[idx].isPrefix = true;\n          tokens[idx].value = prefix;\n        } else {\n          tokens[idx].value = value;\n        }\n        depth(tokens[idx]);\n        state.maxDepth += tokens[idx].depth;\n      }\n      if (idx !== 0 || value !== '') {\n        parts.push(value);\n      }\n      prevIndex = i;\n    }\n\n    if (prevIndex && prevIndex + 1 < input.length) {\n      const value = input.slice(prevIndex + 1);\n      parts.push(value);\n\n      if (opts.tokens) {\n        tokens[tokens.length - 1].value = value;\n        depth(tokens[tokens.length - 1]);\n        state.maxDepth += tokens[tokens.length - 1].depth;\n      }\n    }\n\n    state.slashes = slashes;\n    state.parts = parts;\n  }\n\n  return state;\n};\n\nmodule.exports = scan;\n","'use strict';\n\nconst constants = require('./constants');\nconst utils = require('./utils');\n\n/**\n * Constants\n */\n\nconst {\n  MAX_LENGTH,\n  POSIX_REGEX_SOURCE,\n  REGEX_NON_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_BACKREF,\n  REPLACEMENTS\n} = constants;\n\n/**\n * Helpers\n */\n\nconst expandRange = (args, options) => {\n  if (typeof options.expandRange === 'function') {\n    return options.expandRange(...args, options);\n  }\n\n  args.sort();\n  const value = `[${args.join('-')}]`;\n\n  try {\n    /* eslint-disable-next-line no-new */\n    new RegExp(value);\n  } catch (ex) {\n    return args.map(v => utils.escapeRegex(v)).join('..');\n  }\n\n  return value;\n};\n\n/**\n * Create the message for a syntax error\n */\n\nconst syntaxError = (type, char) => {\n  return `Missing ${type}: \"${char}\" - use \"\\\\\\\\${char}\" to match literal characters`;\n};\n\n/**\n * Parse the given input string.\n * @param {String} input\n * @param {Object} options\n * @return {Object}\n */\n\nconst parse = (input, options) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  input = REPLACEMENTS[input] || input;\n\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n\n  let len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  const bos = { type: 'bos', value: '', output: opts.prepend || '' };\n  const tokens = [bos];\n\n  const capture = opts.capture ? '' : '?:';\n\n  // create constants based on platform, for windows or posix\n  const PLATFORM_CHARS = constants.globChars(opts.windows);\n  const EXTGLOB_CHARS = constants.extglobChars(PLATFORM_CHARS);\n\n  const {\n    DOT_LITERAL,\n    PLUS_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOT_SLASH,\n    NO_DOTS_SLASH,\n    QMARK,\n    QMARK_NO_DOT,\n    STAR,\n    START_ANCHOR\n  } = PLATFORM_CHARS;\n\n  const globstar = opts => {\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const nodot = opts.dot ? '' : NO_DOT;\n  const qmarkNoDot = opts.dot ? QMARK : QMARK_NO_DOT;\n  let star = opts.bash === true ? globstar(opts) : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  // minimatch options support\n  if (typeof opts.noext === 'boolean') {\n    opts.noextglob = opts.noext;\n  }\n\n  const state = {\n    input,\n    index: -1,\n    start: 0,\n    dot: opts.dot === true,\n    consumed: '',\n    output: '',\n    prefix: '',\n    backtrack: false,\n    negated: false,\n    brackets: 0,\n    braces: 0,\n    parens: 0,\n    quotes: 0,\n    globstar: false,\n    tokens\n  };\n\n  input = utils.removePrefix(input, state);\n  len = input.length;\n\n  const extglobs = [];\n  const braces = [];\n  const stack = [];\n  let prev = bos;\n  let value;\n\n  /**\n   * Tokenizing helpers\n   */\n\n  const eos = () => state.index === len - 1;\n  const peek = state.peek = (n = 1) => input[state.index + n];\n  const advance = state.advance = () => input[++state.index] || '';\n  const remaining = () => input.slice(state.index + 1);\n  const consume = (value = '', num = 0) => {\n    state.consumed += value;\n    state.index += num;\n  };\n\n  const append = token => {\n    state.output += token.output != null ? token.output : token.value;\n    consume(token.value);\n  };\n\n  const negate = () => {\n    let count = 1;\n\n    while (peek() === '!' && (peek(2) !== '(' || peek(3) === '?')) {\n      advance();\n      state.start++;\n      count++;\n    }\n\n    if (count % 2 === 0) {\n      return false;\n    }\n\n    state.negated = true;\n    state.start++;\n    return true;\n  };\n\n  const increment = type => {\n    state[type]++;\n    stack.push(type);\n  };\n\n  const decrement = type => {\n    state[type]--;\n    stack.pop();\n  };\n\n  /**\n   * Push tokens onto the tokens array. This helper speeds up\n   * tokenizing by 1) helping us avoid backtracking as much as possible,\n   * and 2) helping us avoid creating extra tokens when consecutive\n   * characters are plain text. This improves performance and simplifies\n   * lookbehinds.\n   */\n\n  const push = tok => {\n    if (prev.type === 'globstar') {\n      const isBrace = state.braces > 0 && (tok.type === 'comma' || tok.type === 'brace');\n      const isExtglob = tok.extglob === true || (extglobs.length && (tok.type === 'pipe' || tok.type === 'paren'));\n\n      if (tok.type !== 'slash' && tok.type !== 'paren' && !isBrace && !isExtglob) {\n        state.output = state.output.slice(0, -prev.output.length);\n        prev.type = 'star';\n        prev.value = '*';\n        prev.output = star;\n        state.output += prev.output;\n      }\n    }\n\n    if (extglobs.length && tok.type !== 'paren') {\n      extglobs[extglobs.length - 1].inner += tok.value;\n    }\n\n    if (tok.value || tok.output) append(tok);\n    if (prev && prev.type === 'text' && tok.type === 'text') {\n      prev.value += tok.value;\n      prev.output = (prev.output || '') + tok.value;\n      return;\n    }\n\n    tok.prev = prev;\n    tokens.push(tok);\n    prev = tok;\n  };\n\n  const extglobOpen = (type, value) => {\n    const token = { ...EXTGLOB_CHARS[value], conditions: 1, inner: '' };\n\n    token.prev = prev;\n    token.parens = state.parens;\n    token.output = state.output;\n    const output = (opts.capture ? '(' : '') + token.open;\n\n    increment('parens');\n    push({ type, value, output: state.output ? '' : ONE_CHAR });\n    push({ type: 'paren', extglob: true, value: advance(), output });\n    extglobs.push(token);\n  };\n\n  const extglobClose = token => {\n    let output = token.close + (opts.capture ? ')' : '');\n    let rest;\n\n    if (token.type === 'negate') {\n      let extglobStar = star;\n\n      if (token.inner && token.inner.length > 1 && token.inner.includes('/')) {\n        extglobStar = globstar(opts);\n      }\n\n      if (extglobStar !== star || eos() || /^\\)+$/.test(remaining())) {\n        output = token.close = `)$))${extglobStar}`;\n      }\n\n      if (token.inner.includes('*') && (rest = remaining()) && /^\\.[^\\\\/.]+$/.test(rest)) {\n        // Any non-magical string (`.ts`) or even nested expression (`.{ts,tsx}`) can follow after the closing parenthesis.\n        // In this case, we need to parse the string and use it in the output of the original pattern.\n        // Suitable patterns: `/!(*.d).ts`, `/!(*.d).{ts,tsx}`, `**/!(*-dbg).@(js)`.\n        //\n        // Disabling the `fastpaths` option due to a problem with parsing strings as `.ts` in the pattern like `**/!(*.d).ts`.\n        const expression = parse(rest, { ...options, fastpaths: false }).output;\n\n        output = token.close = `)${expression})${extglobStar})`;\n      }\n\n      if (token.prev.type === 'bos') {\n        state.negatedExtglob = true;\n      }\n    }\n\n    push({ type: 'paren', extglob: true, value, output });\n    decrement('parens');\n  };\n\n  /**\n   * Fast paths\n   */\n\n  if (opts.fastpaths !== false && !/(^[*!]|[/()[\\]{}\"])/.test(input)) {\n    let backslashes = false;\n\n    let output = input.replace(REGEX_SPECIAL_CHARS_BACKREF, (m, esc, chars, first, rest, index) => {\n      if (first === '\\\\') {\n        backslashes = true;\n        return m;\n      }\n\n      if (first === '?') {\n        if (esc) {\n          return esc + first + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        if (index === 0) {\n          return qmarkNoDot + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        return QMARK.repeat(chars.length);\n      }\n\n      if (first === '.') {\n        return DOT_LITERAL.repeat(chars.length);\n      }\n\n      if (first === '*') {\n        if (esc) {\n          return esc + first + (rest ? star : '');\n        }\n        return star;\n      }\n      return esc ? m : `\\\\${m}`;\n    });\n\n    if (backslashes === true) {\n      if (opts.unescape === true) {\n        output = output.replace(/\\\\/g, '');\n      } else {\n        output = output.replace(/\\\\+/g, m => {\n          return m.length % 2 === 0 ? '\\\\\\\\' : (m ? '\\\\' : '');\n        });\n      }\n    }\n\n    if (output === input && opts.contains === true) {\n      state.output = input;\n      return state;\n    }\n\n    state.output = utils.wrapOutput(output, state, options);\n    return state;\n  }\n\n  /**\n   * Tokenize input until we reach end-of-string\n   */\n\n  while (!eos()) {\n    value = advance();\n\n    if (value === '\\u0000') {\n      continue;\n    }\n\n    /**\n     * Escaped characters\n     */\n\n    if (value === '\\\\') {\n      const next = peek();\n\n      if (next === '/' && opts.bash !== true) {\n        continue;\n      }\n\n      if (next === '.' || next === ';') {\n        continue;\n      }\n\n      if (!next) {\n        value += '\\\\';\n        push({ type: 'text', value });\n        continue;\n      }\n\n      // collapse slashes to reduce potential for exploits\n      const match = /^\\\\+/.exec(remaining());\n      let slashes = 0;\n\n      if (match && match[0].length > 2) {\n        slashes = match[0].length;\n        state.index += slashes;\n        if (slashes % 2 !== 0) {\n          value += '\\\\';\n        }\n      }\n\n      if (opts.unescape === true) {\n        value = advance();\n      } else {\n        value += advance();\n      }\n\n      if (state.brackets === 0) {\n        push({ type: 'text', value });\n        continue;\n      }\n    }\n\n    /**\n     * If we're inside a regex character class, continue\n     * until we reach the closing bracket.\n     */\n\n    if (state.brackets > 0 && (value !== ']' || prev.value === '[' || prev.value === '[^')) {\n      if (opts.posix !== false && value === ':') {\n        const inner = prev.value.slice(1);\n        if (inner.includes('[')) {\n          prev.posix = true;\n\n          if (inner.includes(':')) {\n            const idx = prev.value.lastIndexOf('[');\n            const pre = prev.value.slice(0, idx);\n            const rest = prev.value.slice(idx + 2);\n            const posix = POSIX_REGEX_SOURCE[rest];\n            if (posix) {\n              prev.value = pre + posix;\n              state.backtrack = true;\n              advance();\n\n              if (!bos.output && tokens.indexOf(prev) === 1) {\n                bos.output = ONE_CHAR;\n              }\n              continue;\n            }\n          }\n        }\n      }\n\n      if ((value === '[' && peek() !== ':') || (value === '-' && peek() === ']')) {\n        value = `\\\\${value}`;\n      }\n\n      if (value === ']' && (prev.value === '[' || prev.value === '[^')) {\n        value = `\\\\${value}`;\n      }\n\n      if (opts.posix === true && value === '!' && prev.value === '[') {\n        value = '^';\n      }\n\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * If we're inside a quoted string, continue\n     * until we reach the closing double quote.\n     */\n\n    if (state.quotes === 1 && value !== '\"') {\n      value = utils.escapeRegex(value);\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * Double quotes\n     */\n\n    if (value === '\"') {\n      state.quotes = state.quotes === 1 ? 0 : 1;\n      if (opts.keepQuotes === true) {\n        push({ type: 'text', value });\n      }\n      continue;\n    }\n\n    /**\n     * Parentheses\n     */\n\n    if (value === '(') {\n      increment('parens');\n      push({ type: 'paren', value });\n      continue;\n    }\n\n    if (value === ')') {\n      if (state.parens === 0 && opts.strictBrackets === true) {\n        throw new SyntaxError(syntaxError('opening', '('));\n      }\n\n      const extglob = extglobs[extglobs.length - 1];\n      if (extglob && state.parens === extglob.parens + 1) {\n        extglobClose(extglobs.pop());\n        continue;\n      }\n\n      push({ type: 'paren', value, output: state.parens ? ')' : '\\\\)' });\n      decrement('parens');\n      continue;\n    }\n\n    /**\n     * Square brackets\n     */\n\n    if (value === '[') {\n      if (opts.nobracket === true || !remaining().includes(']')) {\n        if (opts.nobracket !== true && opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('closing', ']'));\n        }\n\n        value = `\\\\${value}`;\n      } else {\n        increment('brackets');\n      }\n\n      push({ type: 'bracket', value });\n      continue;\n    }\n\n    if (value === ']') {\n      if (opts.nobracket === true || (prev && prev.type === 'bracket' && prev.value.length === 1)) {\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      if (state.brackets === 0) {\n        if (opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('opening', '['));\n        }\n\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      decrement('brackets');\n\n      const prevValue = prev.value.slice(1);\n      if (prev.posix !== true && prevValue[0] === '^' && !prevValue.includes('/')) {\n        value = `/${value}`;\n      }\n\n      prev.value += value;\n      append({ value });\n\n      // when literal brackets are explicitly disabled\n      // assume we should match with a regex character class\n      if (opts.literalBrackets === false || utils.hasRegexChars(prevValue)) {\n        continue;\n      }\n\n      const escaped = utils.escapeRegex(prev.value);\n      state.output = state.output.slice(0, -prev.value.length);\n\n      // when literal brackets are explicitly enabled\n      // assume we should escape the brackets to match literal characters\n      if (opts.literalBrackets === true) {\n        state.output += escaped;\n        prev.value = escaped;\n        continue;\n      }\n\n      // when the user specifies nothing, try to match both\n      prev.value = `(${capture}${escaped}|${prev.value})`;\n      state.output += prev.value;\n      continue;\n    }\n\n    /**\n     * Braces\n     */\n\n    if (value === '{' && opts.nobrace !== true) {\n      increment('braces');\n\n      const open = {\n        type: 'brace',\n        value,\n        output: '(',\n        outputIndex: state.output.length,\n        tokensIndex: state.tokens.length\n      };\n\n      braces.push(open);\n      push(open);\n      continue;\n    }\n\n    if (value === '}') {\n      const brace = braces[braces.length - 1];\n\n      if (opts.nobrace === true || !brace) {\n        push({ type: 'text', value, output: value });\n        continue;\n      }\n\n      let output = ')';\n\n      if (brace.dots === true) {\n        const arr = tokens.slice();\n        const range = [];\n\n        for (let i = arr.length - 1; i >= 0; i--) {\n          tokens.pop();\n          if (arr[i].type === 'brace') {\n            break;\n          }\n          if (arr[i].type !== 'dots') {\n            range.unshift(arr[i].value);\n          }\n        }\n\n        output = expandRange(range, opts);\n        state.backtrack = true;\n      }\n\n      if (brace.comma !== true && brace.dots !== true) {\n        const out = state.output.slice(0, brace.outputIndex);\n        const toks = state.tokens.slice(brace.tokensIndex);\n        brace.value = brace.output = '\\\\{';\n        value = output = '\\\\}';\n        state.output = out;\n        for (const t of toks) {\n          state.output += (t.output || t.value);\n        }\n      }\n\n      push({ type: 'brace', value, output });\n      decrement('braces');\n      braces.pop();\n      continue;\n    }\n\n    /**\n     * Pipes\n     */\n\n    if (value === '|') {\n      if (extglobs.length > 0) {\n        extglobs[extglobs.length - 1].conditions++;\n      }\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Commas\n     */\n\n    if (value === ',') {\n      let output = value;\n\n      const brace = braces[braces.length - 1];\n      if (brace && stack[stack.length - 1] === 'braces') {\n        brace.comma = true;\n        output = '|';\n      }\n\n      push({ type: 'comma', value, output });\n      continue;\n    }\n\n    /**\n     * Slashes\n     */\n\n    if (value === '/') {\n      // if the beginning of the glob is \"./\", advance the start\n      // to the current index, and don't add the \"./\" characters\n      // to the state. This greatly simplifies lookbehinds when\n      // checking for BOS characters like \"!\" and \".\" (not \"./\")\n      if (prev.type === 'dot' && state.index === state.start + 1) {\n        state.start = state.index + 1;\n        state.consumed = '';\n        state.output = '';\n        tokens.pop();\n        prev = bos; // reset \"prev\" to the first token\n        continue;\n      }\n\n      push({ type: 'slash', value, output: SLASH_LITERAL });\n      continue;\n    }\n\n    /**\n     * Dots\n     */\n\n    if (value === '.') {\n      if (state.braces > 0 && prev.type === 'dot') {\n        if (prev.value === '.') prev.output = DOT_LITERAL;\n        const brace = braces[braces.length - 1];\n        prev.type = 'dots';\n        prev.output += value;\n        prev.value += value;\n        brace.dots = true;\n        continue;\n      }\n\n      if ((state.braces + state.parens) === 0 && prev.type !== 'bos' && prev.type !== 'slash') {\n        push({ type: 'text', value, output: DOT_LITERAL });\n        continue;\n      }\n\n      push({ type: 'dot', value, output: DOT_LITERAL });\n      continue;\n    }\n\n    /**\n     * Question marks\n     */\n\n    if (value === '?') {\n      const isGroup = prev && prev.value === '(';\n      if (!isGroup && opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('qmark', value);\n        continue;\n      }\n\n      if (prev && prev.type === 'paren') {\n        const next = peek();\n        let output = value;\n\n        if (next === '<' && !utils.supportsLookbehinds()) {\n          throw new Error('Node.js v10 or higher is required for regex lookbehinds');\n        }\n\n        if ((prev.value === '(' && !/[!=<:]/.test(next)) || (next === '<' && !/<([!=]|\\w+>)/.test(remaining()))) {\n          output = `\\\\${value}`;\n        }\n\n        push({ type: 'text', value, output });\n        continue;\n      }\n\n      if (opts.dot !== true && (prev.type === 'slash' || prev.type === 'bos')) {\n        push({ type: 'qmark', value, output: QMARK_NO_DOT });\n        continue;\n      }\n\n      push({ type: 'qmark', value, output: QMARK });\n      continue;\n    }\n\n    /**\n     * Exclamation\n     */\n\n    if (value === '!') {\n      if (opts.noextglob !== true && peek() === '(') {\n        if (peek(2) !== '?' || !/[!=<:]/.test(peek(3))) {\n          extglobOpen('negate', value);\n          continue;\n        }\n      }\n\n      if (opts.nonegate !== true && state.index === 0) {\n        negate();\n        continue;\n      }\n    }\n\n    /**\n     * Plus\n     */\n\n    if (value === '+') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('plus', value);\n        continue;\n      }\n\n      if ((prev && prev.value === '(') || opts.regex === false) {\n        push({ type: 'plus', value, output: PLUS_LITERAL });\n        continue;\n      }\n\n      if ((prev && (prev.type === 'bracket' || prev.type === 'paren' || prev.type === 'brace')) || state.parens > 0) {\n        push({ type: 'plus', value });\n        continue;\n      }\n\n      push({ type: 'plus', value: PLUS_LITERAL });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value === '@') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        push({ type: 'at', extglob: true, value, output: '' });\n        continue;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value !== '*') {\n      if (value === '$' || value === '^') {\n        value = `\\\\${value}`;\n      }\n\n      const match = REGEX_NON_SPECIAL_CHARS.exec(remaining());\n      if (match) {\n        value += match[0];\n        state.index += match[0].length;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Stars\n     */\n\n    if (prev && (prev.type === 'globstar' || prev.star === true)) {\n      prev.type = 'star';\n      prev.star = true;\n      prev.value += value;\n      prev.output = star;\n      state.backtrack = true;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    let rest = remaining();\n    if (opts.noextglob !== true && /^\\([^?]/.test(rest)) {\n      extglobOpen('star', value);\n      continue;\n    }\n\n    if (prev.type === 'star') {\n      if (opts.noglobstar === true) {\n        consume(value);\n        continue;\n      }\n\n      const prior = prev.prev;\n      const before = prior.prev;\n      const isStart = prior.type === 'slash' || prior.type === 'bos';\n      const afterStar = before && (before.type === 'star' || before.type === 'globstar');\n\n      if (opts.bash === true && (!isStart || (rest[0] && rest[0] !== '/'))) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      const isBrace = state.braces > 0 && (prior.type === 'comma' || prior.type === 'brace');\n      const isExtglob = extglobs.length && (prior.type === 'pipe' || prior.type === 'paren');\n      if (!isStart && prior.type !== 'paren' && !isBrace && !isExtglob) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      // strip consecutive `/**/`\n      while (rest.slice(0, 3) === '/**') {\n        const after = input[state.index + 4];\n        if (after && after !== '/') {\n          break;\n        }\n        rest = rest.slice(3);\n        consume('/**', 3);\n      }\n\n      if (prior.type === 'bos' && eos()) {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = globstar(opts);\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && !afterStar && eos()) {\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = globstar(opts) + (opts.strictSlashes ? ')' : '|$)');\n        prev.value += value;\n        state.globstar = true;\n        state.output += prior.output + prev.output;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && rest[0] === '/') {\n        const end = rest[1] !== void 0 ? '|$' : '';\n\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = `${globstar(opts)}${SLASH_LITERAL}|${SLASH_LITERAL}${end})`;\n        prev.value += value;\n\n        state.output += prior.output + prev.output;\n        state.globstar = true;\n\n        consume(value + advance());\n\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      if (prior.type === 'bos' && rest[0] === '/') {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = `(?:^|${SLASH_LITERAL}|${globstar(opts)}${SLASH_LITERAL})`;\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value + advance());\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      // remove single star from output\n      state.output = state.output.slice(0, -prev.output.length);\n\n      // reset previous token to globstar\n      prev.type = 'globstar';\n      prev.output = globstar(opts);\n      prev.value += value;\n\n      // reset output with globstar\n      state.output += prev.output;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    const token = { type: 'star', value, output: star };\n\n    if (opts.bash === true) {\n      token.output = '.*?';\n      if (prev.type === 'bos' || prev.type === 'slash') {\n        token.output = nodot + token.output;\n      }\n      push(token);\n      continue;\n    }\n\n    if (prev && (prev.type === 'bracket' || prev.type === 'paren') && opts.regex === true) {\n      token.output = value;\n      push(token);\n      continue;\n    }\n\n    if (state.index === state.start || prev.type === 'slash' || prev.type === 'dot') {\n      if (prev.type === 'dot') {\n        state.output += NO_DOT_SLASH;\n        prev.output += NO_DOT_SLASH;\n\n      } else if (opts.dot === true) {\n        state.output += NO_DOTS_SLASH;\n        prev.output += NO_DOTS_SLASH;\n\n      } else {\n        state.output += nodot;\n        prev.output += nodot;\n      }\n\n      if (peek() !== '*') {\n        state.output += ONE_CHAR;\n        prev.output += ONE_CHAR;\n      }\n    }\n\n    push(token);\n  }\n\n  while (state.brackets > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ']'));\n    state.output = utils.escapeLast(state.output, '[');\n    decrement('brackets');\n  }\n\n  while (state.parens > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ')'));\n    state.output = utils.escapeLast(state.output, '(');\n    decrement('parens');\n  }\n\n  while (state.braces > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', '}'));\n    state.output = utils.escapeLast(state.output, '{');\n    decrement('braces');\n  }\n\n  if (opts.strictSlashes !== true && (prev.type === 'star' || prev.type === 'bracket')) {\n    push({ type: 'maybe_slash', value: '', output: `${SLASH_LITERAL}?` });\n  }\n\n  // rebuild the output if we had to backtrack at any point\n  if (state.backtrack === true) {\n    state.output = '';\n\n    for (const token of state.tokens) {\n      state.output += token.output != null ? token.output : token.value;\n\n      if (token.suffix) {\n        state.output += token.suffix;\n      }\n    }\n  }\n\n  return state;\n};\n\n/**\n * Fast paths for creating regular expressions for common glob patterns.\n * This can significantly speed up processing and has very little downside\n * impact when none of the fast paths match.\n */\n\nparse.fastpaths = (input, options) => {\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n  const len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  input = REPLACEMENTS[input] || input;\n\n  // create constants based on platform, for windows or posix\n  const {\n    DOT_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOTS,\n    NO_DOTS_SLASH,\n    STAR,\n    START_ANCHOR\n  } = constants.globChars(opts.windows);\n\n  const nodot = opts.dot ? NO_DOTS : NO_DOT;\n  const slashDot = opts.dot ? NO_DOTS_SLASH : NO_DOT;\n  const capture = opts.capture ? '' : '?:';\n  const state = { negated: false, prefix: '' };\n  let star = opts.bash === true ? '.*?' : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  const globstar = opts => {\n    if (opts.noglobstar === true) return star;\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const create = str => {\n    switch (str) {\n      case '*':\n        return `${nodot}${ONE_CHAR}${star}`;\n\n      case '.*':\n        return `${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*.*':\n        return `${nodot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*/*':\n        return `${nodot}${star}${SLASH_LITERAL}${ONE_CHAR}${slashDot}${star}`;\n\n      case '**':\n        return nodot + globstar(opts);\n\n      case '**/*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${ONE_CHAR}${star}`;\n\n      case '**/*.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '**/.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      default: {\n        const match = /^(.*?)\\.(\\w+)$/.exec(str);\n        if (!match) return;\n\n        const source = create(match[1]);\n        if (!source) return;\n\n        return source + DOT_LITERAL + match[2];\n      }\n    }\n  };\n\n  const output = utils.removePrefix(input, state);\n  let source = create(output);\n\n  if (source && opts.strictSlashes !== true) {\n    source += `${SLASH_LITERAL}?`;\n  }\n\n  return source;\n};\n\nmodule.exports = parse;\n","'use strict';\n\nconst scan = require('./scan');\nconst parse = require('./parse');\nconst utils = require('./utils');\nconst constants = require('./constants');\nconst isObject = val => val && typeof val === 'object' && !Array.isArray(val);\n\n/**\n * Creates a matcher function from one or more glob patterns. The\n * returned function takes a string to match as its first argument,\n * and returns true if the string is a match. The returned matcher\n * function also takes a boolean as the second argument that, when true,\n * returns an object with additional information.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch(glob[, options]);\n *\n * const isMatch = picomatch('*.!(*a)');\n * console.log(isMatch('a.a')); //=> false\n * console.log(isMatch('a.b')); //=> true\n * ```\n * @name picomatch\n * @param {String|Array} `globs` One or more glob patterns.\n * @param {Object=} `options`\n * @return {Function=} Returns a matcher function.\n * @api public\n */\n\nconst picomatch = (glob, options, returnState = false) => {\n  if (Array.isArray(glob)) {\n    const fns = glob.map(input => picomatch(input, options, returnState));\n    const arrayMatcher = str => {\n      for (const isMatch of fns) {\n        const state = isMatch(str);\n        if (state) return state;\n      }\n      return false;\n    };\n    return arrayMatcher;\n  }\n\n  const isState = isObject(glob) && glob.tokens && glob.input;\n\n  if (glob === '' || (typeof glob !== 'string' && !isState)) {\n    throw new TypeError('Expected pattern to be a non-empty string');\n  }\n\n  const opts = options || {};\n  const posix = opts.windows;\n  const regex = isState\n    ? picomatch.compileRe(glob, options)\n    : picomatch.makeRe(glob, options, false, true);\n\n  const state = regex.state;\n  delete regex.state;\n\n  let isIgnored = () => false;\n  if (opts.ignore) {\n    const ignoreOpts = { ...options, ignore: null, onMatch: null, onResult: null };\n    isIgnored = picomatch(opts.ignore, ignoreOpts, returnState);\n  }\n\n  const matcher = (input, returnObject = false) => {\n    const { isMatch, match, output } = picomatch.test(input, regex, options, { glob, posix });\n    const result = { glob, state, regex, posix, input, output, match, isMatch };\n\n    if (typeof opts.onResult === 'function') {\n      opts.onResult(result);\n    }\n\n    if (isMatch === false) {\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (isIgnored(input)) {\n      if (typeof opts.onIgnore === 'function') {\n        opts.onIgnore(result);\n      }\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (typeof opts.onMatch === 'function') {\n      opts.onMatch(result);\n    }\n    return returnObject ? result : true;\n  };\n\n  if (returnState) {\n    matcher.state = state;\n  }\n\n  return matcher;\n};\n\n/**\n * Test `input` with the given `regex`. This is used by the main\n * `picomatch()` function to test the input string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.test(input, regex[, options]);\n *\n * console.log(picomatch.test('foo/bar', /^(?:([^/]*?)\\/([^/]*?))$/));\n * // { isMatch: true, match: [ 'foo/', 'foo', 'bar' ], output: 'foo/bar' }\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp} `regex`\n * @return {Object} Returns an object with matching info.\n * @api public\n */\n\npicomatch.test = (input, regex, options, { glob, posix } = {}) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected input to be a string');\n  }\n\n  if (input === '') {\n    return { isMatch: false, output: '' };\n  }\n\n  const opts = options || {};\n  const format = opts.format || (posix ? utils.toPosixSlashes : null);\n  let match = input === glob;\n  let output = (match && format) ? format(input) : input;\n\n  if (match === false) {\n    output = format ? format(input) : input;\n    match = output === glob;\n  }\n\n  if (match === false || opts.capture === true) {\n    if (opts.matchBase === true || opts.basename === true) {\n      match = picomatch.matchBase(input, regex, options, posix);\n    } else {\n      match = regex.exec(output);\n    }\n  }\n\n  return { isMatch: Boolean(match), match, output };\n};\n\n/**\n * Match the basename of a filepath.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.matchBase(input, glob[, options]);\n * console.log(picomatch.matchBase('foo/bar.js', '*.js'); // true\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp|String} `glob` Glob pattern or regex created by [.makeRe](#makeRe).\n * @return {Boolean}\n * @api public\n */\n\npicomatch.matchBase = (input, glob, options) => {\n  const regex = glob instanceof RegExp ? glob : picomatch.makeRe(glob, options);\n  return regex.test(utils.basename(input));\n};\n\n/**\n * Returns true if **any** of the given glob `patterns` match the specified `string`.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.isMatch(string, patterns[, options]);\n *\n * console.log(picomatch.isMatch('a.a', ['b.*', '*.a'])); //=> true\n * console.log(picomatch.isMatch('a.a', 'b.*')); //=> false\n * ```\n * @param {String|Array} str The string to test.\n * @param {String|Array} patterns One or more glob patterns to use for matching.\n * @param {Object} [options] See available [options](#options).\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\npicomatch.isMatch = (str, patterns, options) => picomatch(patterns, options)(str);\n\n/**\n * Parse a glob pattern to create the source string for a regular\n * expression.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const result = picomatch.parse(pattern[, options]);\n * ```\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {Object} Returns an object with useful properties and output to be used as a regex source string.\n * @api public\n */\n\npicomatch.parse = (pattern, options) => {\n  if (Array.isArray(pattern)) return pattern.map(p => picomatch.parse(p, options));\n  return parse(pattern, { ...options, fastpaths: false });\n};\n\n/**\n * Scan a glob pattern to separate the pattern into segments.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.scan(input[, options]);\n *\n * const result = picomatch.scan('!./foo/*.js');\n * console.log(result);\n * { prefix: '!./',\n *   input: '!./foo/*.js',\n *   start: 3,\n *   base: 'foo',\n *   glob: '*.js',\n *   isBrace: false,\n *   isBracket: false,\n *   isGlob: true,\n *   isExtglob: false,\n *   isGlobstar: false,\n *   negated: true }\n * ```\n * @param {String} `input` Glob pattern to scan.\n * @param {Object} `options`\n * @return {Object} Returns an object with\n * @api public\n */\n\npicomatch.scan = (input, options) => scan(input, options);\n\n/**\n * Compile a regular expression from the `state` object returned by the\n * [parse()](#parse) method.\n *\n * @param {Object} `state`\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Intended for implementors, this argument allows you to return the raw output from the parser.\n * @param {Boolean} `returnState` Adds the state to a `state` property on the returned regex. Useful for implementors and debugging.\n * @return {RegExp}\n * @api public\n */\n\npicomatch.compileRe = (state, options, returnOutput = false, returnState = false) => {\n  if (returnOutput === true) {\n    return state.output;\n  }\n\n  const opts = options || {};\n  const prepend = opts.contains ? '' : '^';\n  const append = opts.contains ? '' : '$';\n\n  let source = `${prepend}(?:${state.output})${append}`;\n  if (state && state.negated === true) {\n    source = `^(?!${source}).*$`;\n  }\n\n  const regex = picomatch.toRegex(source, options);\n  if (returnState === true) {\n    regex.state = state;\n  }\n\n  return regex;\n};\n\n/**\n * Create a regular expression from a parsed glob pattern.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const state = picomatch.parse('*.js');\n * // picomatch.compileRe(state[, options]);\n *\n * console.log(picomatch.compileRe(state));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `state` The object returned from the `.parse` method.\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Implementors may use this argument to return the compiled output, instead of a regular expression. This is not exposed on the options to prevent end-users from mutating the result.\n * @param {Boolean} `returnState` Implementors may use this argument to return the state from the parsed glob with the returned regular expression.\n * @return {RegExp} Returns a regex created from the given pattern.\n * @api public\n */\n\npicomatch.makeRe = (input, options = {}, returnOutput = false, returnState = false) => {\n  if (!input || typeof input !== 'string') {\n    throw new TypeError('Expected a non-empty string');\n  }\n\n  let parsed = { negated: false, fastpaths: true };\n\n  if (options.fastpaths !== false && (input[0] === '.' || input[0] === '*')) {\n    parsed.output = parse.fastpaths(input, options);\n  }\n\n  if (!parsed.output) {\n    parsed = parse(input, options);\n  }\n\n  return picomatch.compileRe(parsed, options, returnOutput, returnState);\n};\n\n/**\n * Create a regular expression from the given regex source string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.toRegex(source[, options]);\n *\n * const { output } = picomatch.parse('*.js');\n * console.log(picomatch.toRegex(output));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `source` Regular expression source string.\n * @param {Object} `options`\n * @return {RegExp}\n * @api public\n */\n\npicomatch.toRegex = (source, options) => {\n  try {\n    const opts = options || {};\n    return new RegExp(source, opts.flags || (opts.nocase ? 'i' : ''));\n  } catch (err) {\n    if (options && options.debug === true) throw err;\n    return /$^/;\n  }\n};\n\n/**\n * Picomatch constants.\n * @return {Object}\n */\n\npicomatch.constants = constants;\n\n/**\n * Expose \"picomatch\"\n */\n\nmodule.exports = picomatch;\n","import mime from \"mime/lite\";\nimport picomatch from \"picomatch/posix\";\n\nconst parseInputAccept = (inputAccept: string): [string[], string[]] => {\n  const extensions: string[] = [];\n  const mimeTypes: string[] = [];\n\n  inputAccept\n    .split(\",\")\n    .map(mimeType => mimeType.trim())\n    .filter(Boolean)\n    .forEach(fileType => {\n      if (fileType.startsWith(\".\")) {\n        extensions.push(`*${fileType}`);\n      } else {\n        mimeTypes.push(fileType);\n      }\n    });\n\n  return [extensions, mimeTypes];\n};\n\nclass AcceptedFileTypes {\n  private extensions: string[];\n  private mimeTypes: string[];\n\n  constructor(inputAccept: string) {\n    const [extensions, mimeTypes] = parseInputAccept(inputAccept);\n\n    this.extensions = extensions;\n    this.mimeTypes = mimeTypes;\n  }\n\n  public isAccepted(fileName: string): boolean {\n    if (this.extensions.length === 0 && this.mimeTypes.length === 0) {\n      return true;\n    }\n    return (\n      this.isMimeTypeAccepted(mime.getType(fileName)) ||\n      this.isExtensionAccepted(fileName)\n    );\n  }\n\n  private isMimeTypeAccepted(mimeType: string | null): boolean {\n    if (!mimeType || this.mimeTypes.length === 0) {\n      return false;\n    }\n\n    return picomatch.isMatch(mimeType, this.mimeTypes);\n  }\n\n  private isExtensionAccepted(fileName: string): boolean {\n    if (this.extensions.length === 0) {\n      return false;\n    }\n\n    return picomatch.isMatch(fileName, this.extensions);\n  }\n}\n\nexport default AcceptedFileTypes;\n","import AcceptedFileTypes from \"./accepted_file_types\";\nimport RenderUploadFile from \"./render_upload_file\";\n\nconst getEntriesFromDirectory = async (\n  directoryEntry: FileSystemDirectoryEntry\n): Promise<FileSystemEntry[]> =>\n  new Promise((resolve, reject) =>\n    directoryEntry.createReader().readEntries(resolve, reject)\n  );\n\nconst getFileFromFileEntry = async (\n  fileEntry: FileSystemFileEntry\n): Promise<File> =>\n  new Promise((resolve, reject) => fileEntry.file(resolve, reject));\n\nconst getFilesFromFileSystemEntries = async (\n  entries: FileSystemEntry[]\n): Promise<File[]> => {\n  const result = [];\n\n  for await (const entry of entries) {\n    if (entry.isFile) {\n      const file = await getFileFromFileEntry(entry as FileSystemFileEntry);\n      result.push(file);\n    } else if (entry.isDirectory) {\n      const entriesFromDirectory = await getEntriesFromDirectory(\n        entry as FileSystemDirectoryEntry\n      );\n      const files = await getFilesFromFileSystemEntries(entriesFromDirectory);\n      files.forEach(file => result.push(file));\n    }\n  }\n\n  return result;\n};\n\nconst getFilesFromDataTransfer = async (\n  dataTransfer: DataTransfer\n): Promise<File[]> => {\n  if (dataTransfer.items) {\n    const entries = [...dataTransfer.items].map(\n      item => item.webkitGetAsEntry() as FileSystemEntry\n    );\n\n    const files = await getFilesFromFileSystemEntries(entries);\n    return files;\n  } else {\n    // backwards compatibility\n    return [...dataTransfer.files];\n  }\n};\n\nclass DropArea {\n  acceptedFileTypes: AcceptedFileTypes;\n  container: Element;\n  onUploadFiles: (files: File[]) => Promise<void>;\n  renderer: RenderUploadFile;\n\n  constructor({\n    container,\n    inputAccept,\n    onUploadFiles,\n    renderer\n  }: {\n    container: Element;\n    inputAccept: string;\n    onUploadFiles: (files: File[]) => Promise<void>;\n    renderer: RenderUploadFile;\n  }) {\n    this.container = container;\n    this.onUploadFiles = onUploadFiles;\n    this.acceptedFileTypes = new AcceptedFileTypes(inputAccept);\n    this.renderer = renderer;\n\n    container.addEventListener(\"dragenter\", () => {\n      container.classList.add(\"dff-dropping\");\n    });\n    container.addEventListener(\"dragleave\", () => {\n      container.classList.remove(\"dff-dropping\");\n    });\n    container.addEventListener(\"dragover\", e => {\n      container.classList.add(\"dff-dropping\");\n      e.preventDefault();\n    });\n    container.addEventListener(\"drop\", this.onDrop);\n  }\n\n  onDrop = (e: Event): void => {\n    const dragEvent = e as DragEvent;\n    this.container.classList.remove(\"dff-dropping\");\n    dragEvent.preventDefault();\n    dragEvent.stopPropagation();\n\n    const uploadFiles = async (): Promise<void> => {\n      try {\n        if (dragEvent.dataTransfer) {\n          const files = await getFilesFromDataTransfer(dragEvent.dataTransfer);\n          const acceptedFiles: File[] = [];\n          const invalidFiles: File[] = [];\n\n          for (const file of files) {\n            if (this.acceptedFileTypes.isAccepted(file.name)) {\n              acceptedFiles.push(file);\n            } else {\n              invalidFiles.push(file);\n            }\n          }\n\n          this.renderer.setErrorInvalidFiles(invalidFiles);\n          void this.onUploadFiles(acceptedFiles);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    void uploadFiles();\n  };\n}\n\nexport default DropArea;\n","type UploadStatus = \"done\" | \"error\" | \"uploading\";\nexport type UploadType =\n  | \"existing\"\n  | \"placeholder\"\n  | \"s3\"\n  | \"tus\"\n  | \"uploadedS3\"\n  | \"uploadedTus\";\n\nexport interface InitialExistingFile {\n  name: string;\n  size: number;\n  type: \"existing\";\n}\n\nexport interface InitialPlaceholderFile {\n  id: string;\n  name: string;\n  size: number;\n  type: \"placeholder\";\n}\n\nexport interface InitialS3File {\n  id: string;\n  name: string;\n  original_name: string;\n  size: number;\n  type: \"s3\";\n}\n\nexport interface InitialTusFile {\n  id: string;\n  name: string;\n  size: number;\n  type: \"tus\";\n  url: string;\n}\n\nexport type InitialFile =\n  | InitialExistingFile\n  | InitialPlaceholderFile\n  | InitialS3File\n  | InitialTusFile;\n\ninterface UploadParameters {\n  name: string;\n  status: UploadStatus;\n  type: UploadType;\n  uploadIndex: number;\n}\n\nabstract class BaseUpload {\n  name: string;\n  status: UploadStatus;\n  type: UploadType;\n  uploadIndex: number;\n\n  constructor({ name, status, type, uploadIndex }: UploadParameters) {\n    this.name = name;\n    this.status = status;\n    this.type = type;\n    this.uploadIndex = uploadIndex;\n  }\n\n  public async abort(): Promise<void> {\n    //\n  }\n  public async delete(): Promise<void> {\n    //\n  }\n\n  public abstract getId(): string | undefined;\n  public abstract getInitialFile(): InitialFile;\n  public abstract getSize(): number | undefined;\n}\n\nexport default BaseUpload;\n","function normalize (strArray) {\n  var resultArray = [];\n  if (strArray.length === 0) { return ''; }\n\n  if (typeof strArray[0] !== 'string') {\n    throw new TypeError('Url must be a string. Received ' + strArray[0]);\n  }\n\n  // If the first part is a plain protocol, we combine it with the next part.\n  if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n    var first = strArray.shift();\n    strArray[0] = first + strArray[0];\n  }\n\n  // There must be two or three slashes in the file protocol, two slashes in anything else.\n  if (strArray[0].match(/^file:\\/\\/\\//)) {\n    strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n  } else {\n    strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n  }\n\n  for (var i = 0; i < strArray.length; i++) {\n    var component = strArray[i];\n\n    if (typeof component !== 'string') {\n      throw new TypeError('Url must be a string. Received ' + component);\n    }\n\n    if (component === '') { continue; }\n\n    if (i > 0) {\n      // Removing the starting slashes for each component but the first.\n      component = component.replace(/^[\\/]+/, '');\n    }\n    if (i < strArray.length - 1) {\n      // Removing the ending slashes for each component but the last.\n      component = component.replace(/[\\/]+$/, '');\n    } else {\n      // For the last component we will combine multiple slashes to a single one.\n      component = component.replace(/[\\/]+$/, '/');\n    }\n\n    resultArray.push(component);\n\n  }\n\n  var str = resultArray.join('/');\n  // Each input component is now separated by a single slash except the possible first plain protocol part.\n\n  // remove trailing slash before parameters or hash\n  str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n  // replace ? in parameters with &\n  var parts = str.split('?');\n  str = parts.shift() + (parts.length > 0 ? '?': '') + parts.join('&');\n\n  return str;\n}\n\nexport default function urlJoin() {\n  var input;\n\n  if (typeof arguments[0] === 'object') {\n    input = arguments[0];\n  } else {\n    input = [].slice.call(arguments);\n  }\n\n  return normalize(input);\n}\n","import urljoin from \"url-join\";\n\nexport interface LocationInfo {\n  location: string;\n}\n\nexport interface MultipartUpload {\n  key: string;\n  uploadId: string;\n  endpoint: string;\n}\n\nexport interface Part {\n  ETag: string;\n  PartNumber: number;\n}\n\nexport interface UrlInfo {\n  url: string;\n}\n\nexport const MB = 1024 * 1024;\n\ninterface AbortMultipartUploadParameters {\n  csrfToken: string;\n  endpoint: string;\n  key: string;\n  uploadId: string;\n}\n\nexport const abortMultipartUpload = ({\n  csrfToken,\n  key,\n  uploadId,\n  endpoint\n}: AbortMultipartUploadParameters): Promise<unknown> => {\n  const filename = encodeURIComponent(key);\n  const uploadIdEnc = encodeURIComponent(uploadId);\n  const headers = new Headers({\n    \"X-CSRFToken\": csrfToken\n  });\n  const url = urljoin(endpoint, uploadIdEnc, `?key=${filename}`);\n  return fetch(url, {\n    method: \"delete\",\n    headers: headers\n  }).then(response => {\n    return response.json();\n  });\n};\n\ninterface CompleteMultipartUploadParameters {\n  csrfToken: string;\n  endpoint: string;\n  key: string;\n  parts: Part[];\n  uploadId: string;\n}\n\nexport const completeMultipartUpload = ({\n  csrfToken,\n  key,\n  uploadId,\n  parts,\n  endpoint\n}: CompleteMultipartUploadParameters): Promise<LocationInfo> => {\n  const filename = encodeURIComponent(key);\n  const uploadIdEnc = encodeURIComponent(uploadId);\n  const headers = new Headers({\n    \"X-CSRFToken\": csrfToken\n  });\n  const url = urljoin(endpoint, uploadIdEnc, \"complete\", `?key=${filename}`);\n  return fetch(url, {\n    method: \"post\",\n    headers: headers,\n    body: JSON.stringify({\n      parts: parts\n    })\n  })\n    .then(response => {\n      return response.json();\n    })\n    .then(data => {\n      return data as LocationInfo;\n    });\n};\n\ninterface CreateMultipartUploadParameters {\n  csrfToken: string;\n  endpoint: string;\n  file: File;\n  s3UploadDir: string;\n}\n\nexport const createMultipartUpload = ({\n  csrfToken,\n  endpoint,\n  file,\n  s3UploadDir\n}: CreateMultipartUploadParameters): Promise<MultipartUpload> => {\n  const headers = new Headers({\n    accept: \"application/json\",\n    \"content-type\": \"application/json\",\n    \"X-CSRFToken\": csrfToken\n  });\n  return fetch(endpoint, {\n    method: \"post\",\n    headers: headers,\n    body: JSON.stringify({\n      filename: file.name,\n      contentType: file.type,\n      s3UploadDir: s3UploadDir\n    })\n  })\n    .then(response => {\n      return response.json();\n    })\n    .then(data => {\n      return data as MultipartUpload;\n    });\n};\n\nexport const getChunkSize = (file: File): number =>\n  Math.ceil(file.size / 10000);\n\ninterface PrepareUploadPartParameters {\n  csrfToken: string;\n  endpoint: string;\n  key: string;\n  number: number;\n  uploadId: string;\n}\n\nexport const prepareUploadPart = ({\n  csrfToken,\n  endpoint,\n  key,\n  number,\n  uploadId\n}: PrepareUploadPartParameters): Promise<UrlInfo> => {\n  const filename = encodeURIComponent(key);\n  const headers = new Headers({ \"X-CSRFToken\": csrfToken });\n  const url = urljoin(endpoint, uploadId, `${number}`, `?key=${filename}`);\n  return fetch(url, {\n    method: \"get\",\n    headers: headers\n  })\n    .then(response => {\n      return response.json();\n    })\n    .then(data => {\n      return data as UrlInfo;\n    });\n};\n\nexport const remove = (arr: unknown[], el: unknown): void => {\n  const i = arr.indexOf(el);\n  if (i !== -1) {\n    arr.splice(i, 1);\n  }\n};\n","// The following code is adapted from https://github.com/transloadit/uppy/blob/master/packages/%40uppy/aws-s3-multipart/src/MultipartUploader.js\n// which is released under a MIT License (https://github.com/transloadit/uppy/blob/master/LICENSE)\n\nimport BaseUpload, { InitialFile } from \"./base_upload\";\nimport {\n  abortMultipartUpload,\n  completeMultipartUpload,\n  createMultipartUpload,\n  getChunkSize,\n  MB,\n  MultipartUpload,\n  Part,\n  prepareUploadPart,\n  remove,\n  UrlInfo\n} from \"./s3_utils\";\n\ninterface ChunkState {\n  busy: boolean;\n  done: boolean;\n  etag?: string;\n  uploaded: number;\n}\n\ninterface S3UploadParameters {\n  csrfToken: string;\n  endpoint: string;\n  file: File;\n  s3UploadDir: string;\n  uploadIndex: number;\n}\n\nclass S3Upload extends BaseUpload {\n  public onError?: (error: Error) => void;\n  public onProgress?: (bytesUploaded: number, bytesTotal: number) => void;\n  public onSuccess?: () => void;\n\n  private chunkState: ChunkState[];\n  private chunks: Blob[];\n  private createdPromise: Promise<MultipartUpload>;\n  private csrfToken: string;\n  private endpoint: string;\n  private file: File;\n  private key: string | null;\n  private parts: Part[];\n  private s3UploadDir: string;\n  private uploadId: string | null;\n  private uploading: XMLHttpRequest[];\n\n  constructor({\n    csrfToken,\n    endpoint,\n    file,\n    s3UploadDir,\n    uploadIndex\n  }: S3UploadParameters) {\n    super({ name: file.name, status: \"uploading\", type: \"s3\", uploadIndex });\n\n    this.csrfToken = csrfToken;\n    this.endpoint = endpoint;\n    this.file = file;\n    this.s3UploadDir = s3UploadDir;\n\n    this.key = null;\n    this.uploadId = null;\n    this.parts = [];\n\n    // Do `this.createdPromise.then(OP)` to execute an operation `OP` _only_ if the\n    // upload was created already. That also ensures that the sequencing is right\n    // (so the `OP` definitely happens if the upload is created).\n    //\n    // This mostly exists to make `abortUpload` work well: only sending the abort request if\n    // the upload was already created, and if the createMultipartUpload request is still in flight,\n    // aborting it immediately after it finishes.\n    this.createdPromise = Promise.reject(); // eslint-disable-line prefer-promise-reject-errors\n    this.chunks = [];\n    this.chunkState = [];\n    this.uploading = [];\n    this.onError = undefined;\n    this.onProgress = undefined;\n    this.onSuccess = undefined;\n\n    this.initChunks();\n\n    this.createdPromise.catch(() => ({})); // silence uncaught rejection warning\n  }\n\n  public async abort(): Promise<void> {\n    this.uploading.slice().forEach(xhr => {\n      xhr.abort();\n    });\n    this.uploading = [];\n\n    await this.createdPromise;\n\n    if (this.key && this.uploadId) {\n      await abortMultipartUpload({\n        csrfToken: this.csrfToken,\n        endpoint: this.endpoint,\n        key: this.key,\n        uploadId: this.uploadId\n      });\n    }\n  }\n\n  public async delete(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  public getId(): string | undefined {\n    return this.uploadId || undefined;\n  }\n\n  public getInitialFile(): InitialFile {\n    return {\n      id: this.uploadId || \"\",\n      name: this.key || \"\",\n      size: this.file.size,\n      original_name: this.file.name,\n      type: \"s3\"\n    };\n  }\n\n  public getSize(): number {\n    return this.file.size;\n  }\n\n  public start(): void {\n    void this.createUpload();\n  }\n\n  private initChunks(): void {\n    const chunks: Blob[] = [];\n    const desiredChunkSize = getChunkSize(this.file);\n    // at least 5MB per request, at most 10k requests\n    const minChunkSize = Math.max(5 * MB, Math.ceil(this.file.size / 10000));\n    const chunkSize = Math.max(desiredChunkSize, minChunkSize);\n\n    for (let i = 0; i < this.file.size; i += chunkSize) {\n      const end = Math.min(this.file.size, i + chunkSize);\n      chunks.push(this.file.slice(i, end));\n    }\n\n    this.chunks = chunks;\n    this.chunkState = chunks.map(() => ({\n      uploaded: 0,\n      busy: false,\n      done: false\n    }));\n  }\n\n  private createUpload(): Promise<void> {\n    this.createdPromise = createMultipartUpload({\n      csrfToken: this.csrfToken,\n      endpoint: this.endpoint,\n      file: this.file,\n      s3UploadDir: this.s3UploadDir\n    });\n    return this.createdPromise\n      .then((result: MultipartUpload) => {\n        const valid =\n          typeof result === \"object\" &&\n          result &&\n          typeof result.uploadId === \"string\" &&\n          typeof result.key === \"string\";\n        if (!valid) {\n          throw new TypeError(\n            \"AwsS3/Multipart: Got incorrect result from `createMultipartUpload()`, expected an object `{ uploadId, key }`.\"\n          );\n        }\n\n        this.key = result.key;\n        this.uploadId = result.uploadId;\n\n        this.uploadParts();\n      })\n      .catch((err: Error) => {\n        this.handleError(err);\n      });\n  }\n\n  private uploadParts(): void {\n    const need = 1 - this.uploading.length;\n    if (need === 0) {\n      return;\n    }\n\n    // All parts are uploaded.\n    if (this.chunkState.every(state => state.done)) {\n      void this.completeUpload();\n      return;\n    }\n\n    const candidates = [];\n    for (let i = 0; i < this.chunkState.length; i++) {\n      const state = this.chunkState[i];\n\n      if (!state || state.done || state.busy) {\n        continue;\n      }\n\n      candidates.push(i);\n      if (candidates.length >= need) {\n        break;\n      }\n    }\n\n    candidates.forEach(index => {\n      void this.uploadPart(index);\n    });\n  }\n\n  private uploadPart(index: number): Promise<void> {\n    const state = this.chunkState[index];\n\n    if (state) {\n      state.busy = true;\n    }\n\n    if (!this.key || !this.uploadId) {\n      return Promise.resolve();\n    }\n\n    return prepareUploadPart({\n      csrfToken: this.csrfToken,\n      endpoint: this.endpoint,\n      key: this.key,\n      number: index + 1,\n      uploadId: this.uploadId\n    })\n      .then(result => {\n        const valid =\n          typeof result === \"object\" &&\n          result &&\n          typeof result.url === \"string\";\n        if (!valid) {\n          throw new TypeError(\n            \"AwsS3/Multipart: Got incorrect result from `prepareUploadPart()`, expected an object `{ url }`.\"\n          );\n        }\n        return result;\n      })\n      .then(\n        ({ url }: UrlInfo) => {\n          this.uploadPartBytes(index, url);\n        },\n        err => {\n          this.handleError(err as Error);\n        }\n      );\n  }\n\n  private onPartProgress(index: number, sent: number): void {\n    const state = this.chunkState[index];\n\n    if (state) {\n      state.uploaded = sent;\n    }\n\n    if (this.onProgress) {\n      const totalUploaded = this.chunkState.reduce((n, c) => n + c.uploaded, 0);\n      this.onProgress(totalUploaded, this.file.size);\n    }\n  }\n\n  private onPartComplete(index: number, etag: string): void {\n    const state = this.chunkState[index];\n\n    if (state) {\n      state.etag = etag;\n      state.done = true;\n    }\n\n    const part = {\n      PartNumber: index + 1,\n      ETag: etag\n    };\n    this.parts.push(part);\n\n    this.uploadParts();\n  }\n\n  private uploadPartBytes(index: number, url: string): void {\n    const body = this.chunks[index];\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"PUT\", url, true);\n    xhr.responseType = \"text\";\n\n    this.uploading.push(xhr);\n\n    xhr.upload.addEventListener(\"progress\", ev => {\n      if (!ev.lengthComputable) {\n        return;\n      }\n\n      this.onPartProgress(index, ev.loaded);\n    });\n\n    xhr.addEventListener(\"abort\", ev => {\n      remove(this.uploading, ev.target);\n\n      const state = this.chunkState[index];\n\n      if (state) {\n        state.busy = false;\n      }\n    });\n\n    xhr.addEventListener(\"load\", ev => {\n      const target = ev.target as XMLHttpRequest;\n      remove(this.uploading, target);\n\n      const state = this.chunkState[index];\n\n      if (state) {\n        state.busy = false;\n      }\n\n      if (target.status < 200 || target.status >= 300) {\n        this.handleError(new Error(\"Non 2xx\"));\n        return;\n      }\n\n      this.onPartProgress(index, body?.size || 0);\n\n      // NOTE This must be allowed by CORS.\n      const etag = target.getResponseHeader(\"ETag\");\n      if (etag === null) {\n        this.handleError(\n          new Error(\n            \"AwsS3/Multipart: Could not read the ETag header. This likely means CORS is not configured correctly on the S3 Bucket. See https://uppy.io/docs/aws-s3-multipart#S3-Bucket-Configuration for instructions.\"\n          )\n        );\n        return;\n      }\n\n      this.onPartComplete(index, etag);\n    });\n\n    xhr.addEventListener(\"error\", ev => {\n      remove(this.uploading, ev.target);\n\n      const state = this.chunkState[index];\n\n      if (state) {\n        state.busy = false;\n      }\n\n      const error = new Error(\"Unknown error\");\n      // error.source = ev.target\n      this.handleError(error);\n    });\n    xhr.send(body);\n  }\n\n  private completeUpload(): Promise<void> {\n    // Parts may not have completed uploading in sorted order, if limit > 1.\n    this.parts.sort((a, b) => a.PartNumber - b.PartNumber);\n\n    if (!this.uploadId || !this.key) {\n      return Promise.resolve();\n    }\n\n    return completeMultipartUpload({\n      csrfToken: this.csrfToken,\n      endpoint: this.endpoint,\n      key: this.key,\n      uploadId: this.uploadId,\n      parts: this.parts\n    }).then(\n      () => {\n        if (this.onSuccess) {\n          this.onSuccess();\n        }\n      },\n      err => {\n        this.handleError(err as Error);\n      }\n    );\n  }\n\n  private handleError(error: Error): void {\n    if (this.onError) {\n      this.onError(error);\n    } else {\n      throw error;\n    }\n  }\n}\n\nexport default S3Upload;\n","export const deleteUpload = async (\n  url: string,\n  csrfToken: string\n): Promise<void> =>\n  new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"DELETE\", url);\n\n    xhr.onload = (): void => {\n      if (xhr.status === 204) {\n        resolve();\n      } else {\n        reject();\n      }\n    };\n    xhr.setRequestHeader(\"Tus-Resumable\", \"1.0.0\");\n    xhr.setRequestHeader(\"X-CSRFToken\", csrfToken);\n    xhr.send(null);\n  });\n","import BaseUpload, {\n  InitialExistingFile,\n  InitialFile,\n  InitialPlaceholderFile,\n  InitialS3File,\n  InitialTusFile,\n  UploadType\n} from \"./base_upload\";\nimport { deleteUpload } from \"./tus_utils\";\n\ninterface BaseUploadedFileParameters {\n  name: string;\n  size: number;\n  type: UploadType;\n  uploadIndex: number;\n}\n\nexport abstract class BaseUploadedFile extends BaseUpload {\n  size: number;\n\n  constructor({ name, size, type, uploadIndex }: BaseUploadedFileParameters) {\n    super({ name, status: \"done\", type, uploadIndex });\n\n    this.size = size;\n  }\n\n  public async abort(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  public async delete(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  public getSize(): number | undefined {\n    return this.size;\n  }\n}\n\nclass PlaceholderFile extends BaseUploadedFile {\n  id: string;\n\n  constructor(initialFile: InitialPlaceholderFile, uploadIndex: number) {\n    super({\n      name: initialFile.name,\n      size: initialFile.size,\n      type: \"placeholder\",\n      uploadIndex\n    });\n\n    this.id = initialFile.id;\n  }\n\n  public getId(): string | undefined {\n    return undefined;\n  }\n\n  public getInitialFile(): InitialPlaceholderFile {\n    return {\n      id: this.id,\n      name: this.name,\n      size: this.size,\n      type: \"placeholder\"\n    };\n  }\n}\n\nexport class UploadedS3File extends BaseUploadedFile {\n  id: string;\n  key: string;\n\n  constructor(initialFile: InitialS3File, uploadIndex: number) {\n    super({\n      name: initialFile.original_name || initialFile.name,\n      size: initialFile.size,\n      type: \"uploadedS3\",\n      uploadIndex\n    });\n\n    this.id = initialFile.id;\n    this.key = initialFile.name;\n  }\n\n  public getId(): string | undefined {\n    return this.id;\n  }\n\n  getInitialFile(): InitialS3File {\n    return {\n      id: this.id,\n      name: this.key,\n      original_name: this.name,\n      size: this.size,\n      type: \"s3\"\n    };\n  }\n}\n\nexport class ExistingFile extends BaseUploadedFile {\n  constructor(initialFile: InitialExistingFile, uploadIndex: number) {\n    super({\n      name: initialFile.name,\n      size: initialFile.size,\n      type: \"existing\",\n      uploadIndex\n    });\n  }\n\n  public getId(): string | undefined {\n    return undefined;\n  }\n\n  public getInitialFile(): InitialExistingFile {\n    return {\n      name: this.name,\n      size: this.size,\n      type: \"existing\"\n    };\n  }\n}\n\ninterface UploadedTusFileParameters {\n  csrfToken: string;\n  initialFile: InitialTusFile;\n  uploadIndex: number;\n  uploadUrl: string;\n}\n\nexport class UploadedTusFile extends BaseUploadedFile {\n  csrfToken: string;\n  id: string;\n  url: string;\n\n  constructor({\n    csrfToken,\n    initialFile,\n    uploadIndex,\n    uploadUrl\n  }: UploadedTusFileParameters) {\n    super({\n      name: initialFile.name,\n      size: initialFile.size,\n      type: \"uploadedTus\",\n      uploadIndex\n    });\n\n    this.csrfToken = csrfToken;\n    this.id = initialFile.id;\n    this.url = `${uploadUrl}${initialFile.id}`;\n  }\n\n  public async delete(): Promise<void> {\n    await deleteUpload(this.url, this.csrfToken);\n  }\n\n  public getId(): string | undefined {\n    return this.id;\n  }\n\n  getInitialFile(): InitialTusFile {\n    return {\n      id: this.id,\n      name: this.name,\n      size: this.size,\n      type: \"tus\",\n      url: \"\"\n    };\n  }\n}\n\ninterface UploadedFileParameters {\n  csrfToken: string;\n  initialFile: InitialFile;\n  uploadIndex: number;\n  uploadUrl: string;\n}\n\nexport const createUploadedFile = ({\n  csrfToken,\n  initialFile,\n  uploadIndex,\n  uploadUrl\n}: UploadedFileParameters): BaseUploadedFile => {\n  switch (initialFile.type) {\n    case \"existing\":\n      return new ExistingFile(initialFile, uploadIndex);\n\n    case \"placeholder\":\n      return new PlaceholderFile(initialFile, uploadIndex);\n\n    case \"s3\":\n      return new UploadedS3File(initialFile, uploadIndex);\n\n    case \"tus\":\n      return new UploadedTusFile({\n        csrfToken,\n        initialFile,\n        uploadUrl,\n        uploadIndex\n      });\n  }\n};\n","/**\n *  base64.ts\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n *\n * @author Dan Kogai (https://github.com/dankogai)\n */\nconst version = '3.7.5';\n/**\n * @deprecated use lowercase `version`.\n */\nconst VERSION = version;\nconst _hasatob = typeof atob === 'function';\nconst _hasbtoa = typeof btoa === 'function';\nconst _hasBuffer = typeof Buffer === 'function';\nconst _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;\nconst _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;\nconst b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nconst b64chs = Array.prototype.slice.call(b64ch);\nconst b64tab = ((a) => {\n    let tab = {};\n    a.forEach((c, i) => tab[c] = i);\n    return tab;\n})(b64chs);\nconst b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\nconst _fromCC = String.fromCharCode.bind(String);\nconst _U8Afrom = typeof Uint8Array.from === 'function'\n    ? Uint8Array.from.bind(Uint8Array)\n    : (it) => new Uint8Array(Array.prototype.slice.call(it, 0));\nconst _mkUriSafe = (src) => src\n    .replace(/=/g, '').replace(/[+\\/]/g, (m0) => m0 == '+' ? '-' : '_');\nconst _tidyB64 = (s) => s.replace(/[^A-Za-z0-9\\+\\/]/g, '');\n/**\n * polyfill version of `btoa`\n */\nconst btoaPolyfill = (bin) => {\n    // console.log('polyfilled');\n    let u32, c0, c1, c2, asc = '';\n    const pad = bin.length % 3;\n    for (let i = 0; i < bin.length;) {\n        if ((c0 = bin.charCodeAt(i++)) > 255 ||\n            (c1 = bin.charCodeAt(i++)) > 255 ||\n            (c2 = bin.charCodeAt(i++)) > 255)\n            throw new TypeError('invalid character found');\n        u32 = (c0 << 16) | (c1 << 8) | c2;\n        asc += b64chs[u32 >> 18 & 63]\n            + b64chs[u32 >> 12 & 63]\n            + b64chs[u32 >> 6 & 63]\n            + b64chs[u32 & 63];\n    }\n    return pad ? asc.slice(0, pad - 3) + \"===\".substring(pad) : asc;\n};\n/**\n * does what `window.btoa` of web browsers do.\n * @param {String} bin binary string\n * @returns {string} Base64-encoded string\n */\nconst _btoa = _hasbtoa ? (bin) => btoa(bin)\n    : _hasBuffer ? (bin) => Buffer.from(bin, 'binary').toString('base64')\n        : btoaPolyfill;\nconst _fromUint8Array = _hasBuffer\n    ? (u8a) => Buffer.from(u8a).toString('base64')\n    : (u8a) => {\n        // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\n        const maxargs = 0x1000;\n        let strs = [];\n        for (let i = 0, l = u8a.length; i < l; i += maxargs) {\n            strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));\n        }\n        return _btoa(strs.join(''));\n    };\n/**\n * converts a Uint8Array to a Base64 string.\n * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 §5\n * @returns {string} Base64 string\n */\nconst fromUint8Array = (u8a, urlsafe = false) => urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const utob = (src: string) => unescape(encodeURIComponent(src));\n// reverting good old fationed regexp\nconst cb_utob = (c) => {\n    if (c.length < 2) {\n        var cc = c.charCodeAt(0);\n        return cc < 0x80 ? c\n            : cc < 0x800 ? (_fromCC(0xc0 | (cc >>> 6))\n                + _fromCC(0x80 | (cc & 0x3f)))\n                : (_fromCC(0xe0 | ((cc >>> 12) & 0x0f))\n                    + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                    + _fromCC(0x80 | (cc & 0x3f)));\n    }\n    else {\n        var cc = 0x10000\n            + (c.charCodeAt(0) - 0xD800) * 0x400\n            + (c.charCodeAt(1) - 0xDC00);\n        return (_fromCC(0xf0 | ((cc >>> 18) & 0x07))\n            + _fromCC(0x80 | ((cc >>> 12) & 0x3f))\n            + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n            + _fromCC(0x80 | (cc & 0x3f)));\n    }\n};\nconst re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-8 string\n * @returns {string} UTF-16 string\n */\nconst utob = (u) => u.replace(re_utob, cb_utob);\n//\nconst _encode = _hasBuffer\n    ? (s) => Buffer.from(s, 'utf8').toString('base64')\n    : _TE\n        ? (s) => _fromUint8Array(_TE.encode(s))\n        : (s) => _btoa(utob(s));\n/**\n * converts a UTF-8-encoded string to a Base64 string.\n * @param {boolean} [urlsafe] if `true` make the result URL-safe\n * @returns {string} Base64 string\n */\nconst encode = (src, urlsafe = false) => urlsafe\n    ? _mkUriSafe(_encode(src))\n    : _encode(src);\n/**\n * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 §5.\n * @returns {string} Base64 string\n */\nconst encodeURI = (src) => encode(src, true);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const btou = (src: string) => decodeURIComponent(escape(src));\n// reverting good old fationed regexp\nconst re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\nconst cb_btou = (cccc) => {\n    switch (cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                | ((0x3f & cccc.charCodeAt(1)) << 12)\n                | ((0x3f & cccc.charCodeAt(2)) << 6)\n                | (0x3f & cccc.charCodeAt(3)), offset = cp - 0x10000;\n            return (_fromCC((offset >>> 10) + 0xD800)\n                + _fromCC((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return _fromCC(((0x0f & cccc.charCodeAt(0)) << 12)\n                | ((0x3f & cccc.charCodeAt(1)) << 6)\n                | (0x3f & cccc.charCodeAt(2)));\n        default:\n            return _fromCC(((0x1f & cccc.charCodeAt(0)) << 6)\n                | (0x3f & cccc.charCodeAt(1)));\n    }\n};\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-16 string\n * @returns {string} UTF-8 string\n */\nconst btou = (b) => b.replace(re_btou, cb_btou);\n/**\n * polyfill version of `atob`\n */\nconst atobPolyfill = (asc) => {\n    // console.log('polyfilled');\n    asc = asc.replace(/\\s+/g, '');\n    if (!b64re.test(asc))\n        throw new TypeError('malformed base64.');\n    asc += '=='.slice(2 - (asc.length & 3));\n    let u24, bin = '', r1, r2;\n    for (let i = 0; i < asc.length;) {\n        u24 = b64tab[asc.charAt(i++)] << 18\n            | b64tab[asc.charAt(i++)] << 12\n            | (r1 = b64tab[asc.charAt(i++)]) << 6\n            | (r2 = b64tab[asc.charAt(i++)]);\n        bin += r1 === 64 ? _fromCC(u24 >> 16 & 255)\n            : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255)\n                : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);\n    }\n    return bin;\n};\n/**\n * does what `window.atob` of web browsers do.\n * @param {String} asc Base64-encoded string\n * @returns {string} binary string\n */\nconst _atob = _hasatob ? (asc) => atob(_tidyB64(asc))\n    : _hasBuffer ? (asc) => Buffer.from(asc, 'base64').toString('binary')\n        : atobPolyfill;\n//\nconst _toUint8Array = _hasBuffer\n    ? (a) => _U8Afrom(Buffer.from(a, 'base64'))\n    : (a) => _U8Afrom(_atob(a).split('').map(c => c.charCodeAt(0)));\n/**\n * converts a Base64 string to a Uint8Array.\n */\nconst toUint8Array = (a) => _toUint8Array(_unURI(a));\n//\nconst _decode = _hasBuffer\n    ? (a) => Buffer.from(a, 'base64').toString('utf8')\n    : _TD\n        ? (a) => _TD.decode(_toUint8Array(a))\n        : (a) => btou(_atob(a));\nconst _unURI = (a) => _tidyB64(a.replace(/[-_]/g, (m0) => m0 == '-' ? '+' : '/'));\n/**\n * converts a Base64 string to a UTF-8 string.\n * @param {String} src Base64 string.  Both normal and URL-safe are supported\n * @returns {string} UTF-8 string\n */\nconst decode = (src) => _decode(_unURI(src));\n/**\n * check if a value is a valid Base64 string\n * @param {String} src a value to check\n  */\nconst isValid = (src) => {\n    if (typeof src !== 'string')\n        return false;\n    const s = src.replace(/\\s+/g, '').replace(/={0,2}$/, '');\n    return !/[^\\s0-9a-zA-Z\\+/]/.test(s) || !/[^\\s0-9a-zA-Z\\-_]/.test(s);\n};\n//\nconst _noEnum = (v) => {\n    return {\n        value: v, enumerable: false, writable: true, configurable: true\n    };\n};\n/**\n * extend String.prototype with relevant methods\n */\nconst extendString = function () {\n    const _add = (name, body) => Object.defineProperty(String.prototype, name, _noEnum(body));\n    _add('fromBase64', function () { return decode(this); });\n    _add('toBase64', function (urlsafe) { return encode(this, urlsafe); });\n    _add('toBase64URI', function () { return encode(this, true); });\n    _add('toBase64URL', function () { return encode(this, true); });\n    _add('toUint8Array', function () { return toUint8Array(this); });\n};\n/**\n * extend Uint8Array.prototype with relevant methods\n */\nconst extendUint8Array = function () {\n    const _add = (name, body) => Object.defineProperty(Uint8Array.prototype, name, _noEnum(body));\n    _add('toBase64', function (urlsafe) { return fromUint8Array(this, urlsafe); });\n    _add('toBase64URI', function () { return fromUint8Array(this, true); });\n    _add('toBase64URL', function () { return fromUint8Array(this, true); });\n};\n/**\n * extend Builtin prototypes with relevant methods\n */\nconst extendBuiltins = () => {\n    extendString();\n    extendUint8Array();\n};\nconst gBase64 = {\n    version: version,\n    VERSION: VERSION,\n    atob: _atob,\n    atobPolyfill: atobPolyfill,\n    btoa: _btoa,\n    btoaPolyfill: btoaPolyfill,\n    fromBase64: decode,\n    toBase64: encode,\n    encode: encode,\n    encodeURI: encodeURI,\n    encodeURL: encodeURI,\n    utob: utob,\n    btou: btou,\n    decode: decode,\n    isValid: isValid,\n    fromUint8Array: fromUint8Array,\n    toUint8Array: toUint8Array,\n    extendString: extendString,\n    extendUint8Array: extendUint8Array,\n    extendBuiltins: extendBuiltins,\n};\n// makecjs:CUT //\nexport { version };\nexport { VERSION };\nexport { _atob as atob };\nexport { atobPolyfill };\nexport { _btoa as btoa };\nexport { btoaPolyfill };\nexport { decode as fromBase64 };\nexport { encode as toBase64 };\nexport { utob };\nexport { encode };\nexport { encodeURI };\nexport { encodeURI as encodeURL };\nexport { btou };\nexport { decode };\nexport { isValid };\nexport { fromUint8Array };\nexport { toUint8Array };\nexport { extendString };\nexport { extendUint8Array };\nexport { extendBuiltins };\n// and finally,\nexport { gBase64 as Base64 };\n","'use strict';\n\n/**\n * Check if we're required to add a port number.\n *\n * @see https://url.spec.whatwg.org/#default-port\n * @param {Number|String} port Port number we need to check\n * @param {String} protocol Protocol we need to check against.\n * @returns {Boolean} Is it a default port for the given protocol\n * @api private\n */\nmodule.exports = function required(port, protocol) {\n  protocol = protocol.split(':')[0];\n  port = +port;\n\n  if (!port) return false;\n\n  switch (protocol) {\n    case 'http':\n    case 'ws':\n    return port !== 80;\n\n    case 'https':\n    case 'wss':\n    return port !== 443;\n\n    case 'ftp':\n    return port !== 21;\n\n    case 'gopher':\n    return port !== 70;\n\n    case 'file':\n    return false;\n  }\n\n  return port !== 0;\n};\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , undef;\n\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String|Null} The decoded string.\n * @api private\n */\nfunction decode(input) {\n  try {\n    return decodeURIComponent(input.replace(/\\+/g, ' '));\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Attempts to encode a given input.\n *\n * @param {String} input The string that needs to be encoded.\n * @returns {String|Null} The encoded string.\n * @api private\n */\nfunction encode(input) {\n  try {\n    return encodeURIComponent(input);\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?#&]+)=?([^&]*)/g\n    , result = {}\n    , part;\n\n  while (part = parser.exec(query)) {\n    var key = decode(part[1])\n      , value = decode(part[2]);\n\n    //\n    // Prevent overriding of existing properties. This ensures that build-in\n    // methods like `toString` or __proto__ are not overriden by malicious\n    // querystrings.\n    //\n    // In the case if failed decoding, we want to omit the key/value pairs\n    // from the result.\n    //\n    if (key === null || value === null || key in result) continue;\n    result[key] = value;\n  }\n\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n\n  var pairs = []\n    , value\n    , key;\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (key in obj) {\n    if (has.call(obj, key)) {\n      value = obj[key];\n\n      //\n      // Edge cases where we actually want to encode the value to an empty\n      // string instead of the stringified value.\n      //\n      if (!value && (value === null || value === undef || isNaN(value))) {\n        value = '';\n      }\n\n      key = encode(key);\n      value = encode(value);\n\n      //\n      // If we failed to encode the strings, we should bail out as we don't\n      // want to add invalid strings to the query.\n      //\n      if (key === null || value === null) continue;\n      pairs.push(key +'='+ value);\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nexports.stringify = querystringify;\nexports.parse = querystring;\n","'use strict';\n\nvar required = require('requires-port')\n  , qs = require('querystringify')\n  , controlOrWhitespace = /^[\\x00-\\x20\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]+/\n  , CRHTLF = /[\\n\\r\\t]/g\n  , slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//\n  , port = /:\\d+$/\n  , protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\\\/]+)?([\\S\\s]*)/i\n  , windowsDriveLetter = /^[a-zA-Z]:/;\n\n/**\n * Remove control characters and whitespace from the beginning of a string.\n *\n * @param {Object|String} str String to trim.\n * @returns {String} A new string representing `str` stripped of control\n *     characters and whitespace from its beginning.\n * @public\n */\nfunction trimLeft(str) {\n  return (str ? str : '').toString().replace(controlOrWhitespace, '');\n}\n\n/**\n * These are the parse rules for the URL parser, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\nvar rules = [\n  ['#', 'hash'],                        // Extract from the back.\n  ['?', 'query'],                       // Extract from the back.\n  function sanitize(address, url) {     // Sanitize what is left of the address\n    return isSpecial(url.protocol) ? address.replace(/\\\\/g, '/') : address;\n  },\n  ['/', 'pathname'],                    // Extract from the back.\n  ['@', 'auth', 1],                     // Extract from the front.\n  [NaN, 'host', undefined, 1, 1],       // Set left over value.\n  [/:(\\d*)$/, 'port', undefined, 1],    // RegExp the back.\n  [NaN, 'hostname', undefined, 1, 1]    // Set left over.\n];\n\n/**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\nvar ignore = { hash: 1, query: 1 };\n\n/**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object|String} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @public\n */\nfunction lolcation(loc) {\n  var globalVar;\n\n  if (typeof window !== 'undefined') globalVar = window;\n  else if (typeof global !== 'undefined') globalVar = global;\n  else if (typeof self !== 'undefined') globalVar = self;\n  else globalVar = {};\n\n  var location = globalVar.location || {};\n  loc = loc || location;\n\n  var finaldestination = {}\n    , type = typeof loc\n    , key;\n\n  if ('blob:' === loc.protocol) {\n    finaldestination = new Url(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new Url(loc, {});\n    for (key in ignore) delete finaldestination[key];\n  } else if ('object' === type) {\n    for (key in loc) {\n      if (key in ignore) continue;\n      finaldestination[key] = loc[key];\n    }\n\n    if (finaldestination.slashes === undefined) {\n      finaldestination.slashes = slashes.test(loc.href);\n    }\n  }\n\n  return finaldestination;\n}\n\n/**\n * Check whether a protocol scheme is special.\n *\n * @param {String} The protocol scheme of the URL\n * @return {Boolean} `true` if the protocol scheme is special, else `false`\n * @private\n */\nfunction isSpecial(scheme) {\n  return (\n    scheme === 'file:' ||\n    scheme === 'ftp:' ||\n    scheme === 'http:' ||\n    scheme === 'https:' ||\n    scheme === 'ws:' ||\n    scheme === 'wss:'\n  );\n}\n\n/**\n * @typedef ProtocolExtract\n * @type Object\n * @property {String} protocol Protocol matched in the URL, in lowercase.\n * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n * @property {String} rest Rest of the URL that is not part of the protocol.\n */\n\n/**\n * Extract protocol information from a URL with/without double slash (\"//\").\n *\n * @param {String} address URL we want to extract from.\n * @param {Object} location\n * @return {ProtocolExtract} Extracted information.\n * @private\n */\nfunction extractProtocol(address, location) {\n  address = trimLeft(address);\n  address = address.replace(CRHTLF, '');\n  location = location || {};\n\n  var match = protocolre.exec(address);\n  var protocol = match[1] ? match[1].toLowerCase() : '';\n  var forwardSlashes = !!match[2];\n  var otherSlashes = !!match[3];\n  var slashesCount = 0;\n  var rest;\n\n  if (forwardSlashes) {\n    if (otherSlashes) {\n      rest = match[2] + match[3] + match[4];\n      slashesCount = match[2].length + match[3].length;\n    } else {\n      rest = match[2] + match[4];\n      slashesCount = match[2].length;\n    }\n  } else {\n    if (otherSlashes) {\n      rest = match[3] + match[4];\n      slashesCount = match[3].length;\n    } else {\n      rest = match[4]\n    }\n  }\n\n  if (protocol === 'file:') {\n    if (slashesCount >= 2) {\n      rest = rest.slice(2);\n    }\n  } else if (isSpecial(protocol)) {\n    rest = match[4];\n  } else if (protocol) {\n    if (forwardSlashes) {\n      rest = rest.slice(2);\n    }\n  } else if (slashesCount >= 2 && isSpecial(location.protocol)) {\n    rest = match[4];\n  }\n\n  return {\n    protocol: protocol,\n    slashes: forwardSlashes || isSpecial(protocol),\n    slashesCount: slashesCount,\n    rest: rest\n  };\n}\n\n/**\n * Resolve a relative URL pathname against a base URL pathname.\n *\n * @param {String} relative Pathname of the relative URL.\n * @param {String} base Pathname of the base URL.\n * @return {String} Resolved pathname.\n * @private\n */\nfunction resolve(relative, base) {\n  if (relative === '') return base;\n\n  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))\n    , i = path.length\n    , last = path[i - 1]\n    , unshift = false\n    , up = 0;\n\n  while (i--) {\n    if (path[i] === '.') {\n      path.splice(i, 1);\n    } else if (path[i] === '..') {\n      path.splice(i, 1);\n      up++;\n    } else if (up) {\n      if (i === 0) unshift = true;\n      path.splice(i, 1);\n      up--;\n    }\n  }\n\n  if (unshift) path.unshift('');\n  if (last === '.' || last === '..') path.push('');\n\n  return path.join('/');\n}\n\n/**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my OCD.\n *\n * It is worth noting that we should not use `URL` as class name to prevent\n * clashes with the global URL instance that got introduced in browsers.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Object|String} [location] Location defaults for relative paths.\n * @param {Boolean|Function} [parser] Parser for the query string.\n * @private\n */\nfunction Url(address, location, parser) {\n  address = trimLeft(address);\n  address = address.replace(CRHTLF, '');\n\n  if (!(this instanceof Url)) {\n    return new Url(address, location, parser);\n  }\n\n  var relative, extracted, parse, instruction, index, key\n    , instructions = rules.slice()\n    , type = typeof location\n    , url = this\n    , i = 0;\n\n  //\n  // The following if statements allows this module two have compatibility with\n  // 2 different API:\n  //\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n  //    where the boolean indicates that the query string should also be parsed.\n  //\n  // 2. The `URL` interface of the browser which accepts a URL, object as\n  //    arguments. The supplied object will be used as default values / fall-back\n  //    for relative paths.\n  //\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n\n  if (parser && 'function' !== typeof parser) parser = qs.parse;\n\n  location = lolcation(location);\n\n  //\n  // Extract protocol information before running the instructions.\n  //\n  extracted = extractProtocol(address || '', location);\n  relative = !extracted.protocol && !extracted.slashes;\n  url.slashes = extracted.slashes || relative && location.slashes;\n  url.protocol = extracted.protocol || location.protocol || '';\n  address = extracted.rest;\n\n  //\n  // When the authority component is absent the URL starts with a path\n  // component.\n  //\n  if (\n    extracted.protocol === 'file:' && (\n      extracted.slashesCount !== 2 || windowsDriveLetter.test(address)) ||\n    (!extracted.slashes &&\n      (extracted.protocol ||\n        extracted.slashesCount < 2 ||\n        !isSpecial(url.protocol)))\n  ) {\n    instructions[3] = [/(.*)/, 'pathname'];\n  }\n\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n\n    if (typeof instruction === 'function') {\n      address = instruction(address, url);\n      continue;\n    }\n\n    parse = instruction[0];\n    key = instruction[1];\n\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      index = parse === '@'\n        ? address.lastIndexOf(parse)\n        : address.indexOf(parse);\n\n      if (~index) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if ((index = parse.exec(address))) {\n      url[key] = index[1];\n      address = address.slice(0, index.index);\n    }\n\n    url[key] = url[key] || (\n      relative && instruction[3] ? location[key] || '' : ''\n    );\n\n    //\n    // Hostname, host and protocol should be lowercased so they can be used to\n    // create a proper `origin`.\n    //\n    if (instruction[4]) url[key] = url[key].toLowerCase();\n  }\n\n  //\n  // Also parse the supplied query string in to an object. If we're supplied\n  // with a custom parser as function use that instead of the default build-in\n  // parser.\n  //\n  if (parser) url.query = parser(url.query);\n\n  //\n  // If the URL is relative, resolve the pathname against the base URL.\n  //\n  if (\n      relative\n    && location.slashes\n    && url.pathname.charAt(0) !== '/'\n    && (url.pathname !== '' || location.pathname !== '')\n  ) {\n    url.pathname = resolve(url.pathname, location.pathname);\n  }\n\n  //\n  // Default to a / for pathname if none exists. This normalizes the URL\n  // to always have a /\n  //\n  if (url.pathname.charAt(0) !== '/' && isSpecial(url.protocol)) {\n    url.pathname = '/' + url.pathname;\n  }\n\n  //\n  // We should not add port numbers if they are already the default port number\n  // for a given protocol. As the host also contains the port number we're going\n  // override it with the hostname which contains no port number.\n  //\n  if (!required(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  }\n\n  //\n  // Parse down the `auth` for the username and password.\n  //\n  url.username = url.password = '';\n\n  if (url.auth) {\n    index = url.auth.indexOf(':');\n\n    if (~index) {\n      url.username = url.auth.slice(0, index);\n      url.username = encodeURIComponent(decodeURIComponent(url.username));\n\n      url.password = url.auth.slice(index + 1);\n      url.password = encodeURIComponent(decodeURIComponent(url.password))\n    } else {\n      url.username = encodeURIComponent(decodeURIComponent(url.auth));\n    }\n\n    url.auth = url.password ? url.username +':'+ url.password : url.username;\n  }\n\n  url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  //\n  // The href is just the compiled result.\n  //\n  url.href = url.toString();\n}\n\n/**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} part          Property we need to adjust.\n * @param {Mixed} value          The newly assigned value.\n * @param {Boolean|Function} fn  When setting the query, it will be the function\n *                               used to parse the query.\n *                               When setting the protocol, double slash will be\n *                               removed from the final url if it is true.\n * @returns {URL} URL instance for chaining.\n * @public\n */\nfunction set(part, value, fn) {\n  var url = this;\n\n  switch (part) {\n    case 'query':\n      if ('string' === typeof value && value.length) {\n        value = (fn || qs.parse)(value);\n      }\n\n      url[part] = value;\n      break;\n\n    case 'port':\n      url[part] = value;\n\n      if (!required(value, url.protocol)) {\n        url.host = url.hostname;\n        url[part] = '';\n      } else if (value) {\n        url.host = url.hostname +':'+ value;\n      }\n\n      break;\n\n    case 'hostname':\n      url[part] = value;\n\n      if (url.port) value += ':'+ url.port;\n      url.host = value;\n      break;\n\n    case 'host':\n      url[part] = value;\n\n      if (port.test(value)) {\n        value = value.split(':');\n        url.port = value.pop();\n        url.hostname = value.join(':');\n      } else {\n        url.hostname = value;\n        url.port = '';\n      }\n\n      break;\n\n    case 'protocol':\n      url.protocol = value.toLowerCase();\n      url.slashes = !fn;\n      break;\n\n    case 'pathname':\n    case 'hash':\n      if (value) {\n        var char = part === 'pathname' ? '/' : '#';\n        url[part] = value.charAt(0) !== char ? char + value : value;\n      } else {\n        url[part] = value;\n      }\n      break;\n\n    case 'username':\n    case 'password':\n      url[part] = encodeURIComponent(value);\n      break;\n\n    case 'auth':\n      var index = value.indexOf(':');\n\n      if (~index) {\n        url.username = value.slice(0, index);\n        url.username = encodeURIComponent(decodeURIComponent(url.username));\n\n        url.password = value.slice(index + 1);\n        url.password = encodeURIComponent(decodeURIComponent(url.password));\n      } else {\n        url.username = encodeURIComponent(decodeURIComponent(value));\n      }\n  }\n\n  for (var i = 0; i < rules.length; i++) {\n    var ins = rules[i];\n\n    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\n  }\n\n  url.auth = url.password ? url.username +':'+ url.password : url.username;\n\n  url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  url.href = url.toString();\n\n  return url;\n}\n\n/**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String} Compiled version of the URL.\n * @public\n */\nfunction toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;\n\n  var query\n    , url = this\n    , host = url.host\n    , protocol = url.protocol;\n\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\n\n  var result =\n    protocol +\n    ((url.protocol && url.slashes) || isSpecial(url.protocol) ? '//' : '');\n\n  if (url.username) {\n    result += url.username;\n    if (url.password) result += ':'+ url.password;\n    result += '@';\n  } else if (url.password) {\n    result += ':'+ url.password;\n    result += '@';\n  } else if (\n    url.protocol !== 'file:' &&\n    isSpecial(url.protocol) &&\n    !host &&\n    url.pathname !== '/'\n  ) {\n    //\n    // Add back the empty userinfo, otherwise the original invalid URL\n    // might be transformed into a valid one with `url.pathname` as host.\n    //\n    result += '@';\n  }\n\n  //\n  // Trailing colon is removed from `url.host` when it is parsed. If it still\n  // ends with a colon, then add back the trailing colon that was removed. This\n  // prevents an invalid URL from being transformed into a valid one.\n  //\n  if (host[host.length - 1] === ':' || (port.test(url.hostname) && !url.port)) {\n    host += ':';\n  }\n\n  result += host + url.pathname;\n\n  query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n  if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;\n\n  if (url.hash) result += url.hash;\n\n  return result;\n}\n\nUrl.prototype = { set: set, toString: toString };\n\n//\n// Expose the URL parser and some additional properties that might be useful for\n// others or testing.\n//\nUrl.extractProtocol = extractProtocol;\nUrl.location = lolcation;\nUrl.trimLeft = trimLeft;\nUrl.qs = qs;\n\nmodule.exports = Url;\n","class DetailedError extends Error {\n  constructor(message, causingErr = null, req = null, res = null) {\n    super(message)\n\n    this.originalRequest = req\n    this.originalResponse = res\n    this.causingError = causingErr\n\n    if (causingErr != null) {\n      message += `, caused by ${causingErr.toString()}`\n    }\n\n    if (req != null) {\n      const requestId = req.getHeader('X-Request-ID') || 'n/a'\n      const method = req.getMethod()\n      const url = req.getURL()\n      const status = res ? res.getStatus() : 'n/a'\n      const body = res ? res.getBody() || '' : 'n/a'\n      message += `, originated from request (method: ${method}, url: ${url}, response code: ${status}, response text: ${body}, request id: ${requestId})`\n    }\n    this.message = message\n  }\n}\n\nexport default DetailedError\n","import { Base64 } from 'js-base64'\nimport URL from 'url-parse'\nimport DetailedError from './error.js'\nimport { log } from './logger.js'\nimport uuid from './uuid.js'\n\nconst defaultOptions = {\n  endpoint: null,\n\n  uploadUrl: null,\n  metadata: {},\n  fingerprint: null,\n  uploadSize: null,\n\n  onProgress: null,\n  onChunkComplete: null,\n  onSuccess: null,\n  onError: null,\n  onUploadUrlAvailable: null,\n\n  overridePatchMethod: false,\n  headers: {},\n  addRequestId: false,\n  onBeforeRequest: null,\n  onAfterResponse: null,\n  onShouldRetry: defaultOnShouldRetry,\n\n  chunkSize: Infinity,\n  retryDelays: [0, 1000, 3000, 5000],\n  parallelUploads: 1,\n  parallelUploadBoundaries: null,\n  storeFingerprintForResuming: true,\n  removeFingerprintOnSuccess: false,\n  uploadLengthDeferred: false,\n  uploadDataDuringCreation: false,\n\n  urlStorage: null,\n  fileReader: null,\n  httpStack: null,\n}\n\nclass BaseUpload {\n  constructor(file, options) {\n    // Warn about removed options from previous versions\n    if ('resume' in options) {\n      // eslint-disable-next-line no-console\n      console.log(\n        'tus: The `resume` option has been removed in tus-js-client v2. Please use the URL storage API instead.',\n      )\n    }\n\n    // The default options will already be added from the wrapper classes.\n    this.options = options\n\n    // Cast chunkSize to integer\n    this.options.chunkSize = Number(this.options.chunkSize)\n\n    // The storage module used to store URLs\n    this._urlStorage = this.options.urlStorage\n\n    // The underlying File/Blob object\n    this.file = file\n\n    // The URL against which the file will be uploaded\n    this.url = null\n\n    // The underlying request object for the current PATCH request\n    this._req = null\n\n    // The fingerpinrt for the current file (set after start())\n    this._fingerprint = null\n\n    // The key that the URL storage returned when saving an URL with a fingerprint,\n    this._urlStorageKey = null\n\n    // The offset used in the current PATCH request\n    this._offset = null\n\n    // True if the current PATCH request has been aborted\n    this._aborted = false\n\n    // The file's size in bytes\n    this._size = null\n\n    // The Source object which will wrap around the given file and provides us\n    // with a unified interface for getting its size and slice chunks from its\n    // content allowing us to easily handle Files, Blobs, Buffers and Streams.\n    this._source = null\n\n    // The current count of attempts which have been made. Zero indicates none.\n    this._retryAttempt = 0\n\n    // The timeout's ID which is used to delay the next retry\n    this._retryTimeout = null\n\n    // The offset of the remote upload before the latest attempt was started.\n    this._offsetBeforeRetry = 0\n\n    // An array of BaseUpload instances which are used for uploading the different\n    // parts, if the parallelUploads option is used.\n    this._parallelUploads = null\n\n    // An array of upload URLs which are used for uploading the different\n    // parts, if the parallelUploads option is used.\n    this._parallelUploadUrls = null\n  }\n\n  /**\n   * Use the Termination extension to delete an upload from the server by sending a DELETE\n   * request to the specified upload URL. This is only possible if the server supports the\n   * Termination extension. If the `options.retryDelays` property is set, the method will\n   * also retry if an error ocurrs.\n   *\n   * @param {String} url The upload's URL which will be terminated.\n   * @param {object} options Optional options for influencing HTTP requests.\n   * @return {Promise} The Promise will be resolved/rejected when the requests finish.\n   */\n  static terminate(url, options = {}) {\n    const req = openRequest('DELETE', url, options)\n\n    return sendRequest(req, null, options)\n      .then((res) => {\n        // A 204 response indicates a successfull request\n        if (res.getStatus() === 204) {\n          return\n        }\n\n        throw new DetailedError('tus: unexpected response while terminating upload', null, req, res)\n      })\n      .catch((err) => {\n        if (!(err instanceof DetailedError)) {\n          err = new DetailedError('tus: failed to terminate upload', err, req, null)\n        }\n\n        if (!shouldRetry(err, 0, options)) {\n          throw err\n        }\n\n        // Instead of keeping track of the retry attempts, we remove the first element from the delays\n        // array. If the array is empty, all retry attempts are used up and we will bubble up the error.\n        // We recursively call the terminate function will removing elements from the retryDelays array.\n        const delay = options.retryDelays[0]\n        const remainingDelays = options.retryDelays.slice(1)\n        const newOptions = {\n          ...options,\n          retryDelays: remainingDelays,\n        }\n        return new Promise((resolve) => setTimeout(resolve, delay)).then(() =>\n          BaseUpload.terminate(url, newOptions),\n        )\n      })\n  }\n\n  findPreviousUploads() {\n    return this.options\n      .fingerprint(this.file, this.options)\n      .then((fingerprint) => this._urlStorage.findUploadsByFingerprint(fingerprint))\n  }\n\n  resumeFromPreviousUpload(previousUpload) {\n    this.url = previousUpload.uploadUrl || null\n    this._parallelUploadUrls = previousUpload.parallelUploadUrls || null\n    this._urlStorageKey = previousUpload.urlStorageKey\n  }\n\n  start() {\n    const { file } = this\n\n    if (!file) {\n      this._emitError(new Error('tus: no file or stream to upload provided'))\n      return\n    }\n\n    if (!this.options.endpoint && !this.options.uploadUrl && !this.url) {\n      this._emitError(new Error('tus: neither an endpoint or an upload URL is provided'))\n      return\n    }\n\n    const { retryDelays } = this.options\n    if (retryDelays != null && Object.prototype.toString.call(retryDelays) !== '[object Array]') {\n      this._emitError(new Error('tus: the `retryDelays` option must either be an array or null'))\n      return\n    }\n\n    if (this.options.parallelUploads > 1) {\n      // Test which options are incompatible with parallel uploads.\n      for (const optionName of ['uploadUrl', 'uploadSize', 'uploadLengthDeferred']) {\n        if (this.options[optionName]) {\n          this._emitError(\n            new Error(`tus: cannot use the ${optionName} option when parallelUploads is enabled`),\n          )\n          return\n        }\n      }\n    }\n\n    if (this.options.parallelUploadBoundaries) {\n      if (this.options.parallelUploads <= 1) {\n        this._emitError(\n          new Error(\n            'tus: cannot use the `parallelUploadBoundaries` option when `parallelUploads` is disabled',\n          ),\n        )\n        return\n      }\n      if (this.options.parallelUploads !== this.options.parallelUploadBoundaries.length) {\n        this._emitError(\n          new Error(\n            'tus: the `parallelUploadBoundaries` must have the same length as the value of `parallelUploads`',\n          ),\n        )\n        return\n      }\n    }\n\n    this.options\n      .fingerprint(file, this.options)\n      .then((fingerprint) => {\n        if (fingerprint == null) {\n          log(\n            'No fingerprint was calculated meaning that the upload cannot be stored in the URL storage.',\n          )\n        } else {\n          log(`Calculated fingerprint: ${fingerprint}`)\n        }\n\n        this._fingerprint = fingerprint\n\n        if (this._source) {\n          return this._source\n        }\n        return this.options.fileReader.openFile(file, this.options.chunkSize)\n      })\n      .then((source) => {\n        this._source = source\n\n        // First, we look at the uploadLengthDeferred option.\n        // Next, we check if the caller has supplied a manual upload size.\n        // Finally, we try to use the calculated size from the source object.\n        if (this.options.uploadLengthDeferred) {\n          this._size = null\n        } else if (this.options.uploadSize != null) {\n          this._size = Number(this.options.uploadSize)\n          if (Number.isNaN(this._size)) {\n            this._emitError(new Error('tus: cannot convert `uploadSize` option into a number'))\n            return\n          }\n        } else {\n          this._size = this._source.size\n          if (this._size == null) {\n            this._emitError(\n              new Error(\n                \"tus: cannot automatically derive upload's size from input. Specify it manually using the `uploadSize` option or use the `uploadLengthDeferred` option\",\n              ),\n            )\n            return\n          }\n        }\n\n        // If the upload was configured to use multiple requests or if we resume from\n        // an upload which used multiple requests, we start a parallel upload.\n        if (this.options.parallelUploads > 1 || this._parallelUploadUrls != null) {\n          this._startParallelUpload()\n        } else {\n          this._startSingleUpload()\n        }\n      })\n      .catch((err) => {\n        this._emitError(err)\n      })\n  }\n\n  /**\n   * Initiate the uploading procedure for a parallelized upload, where one file is split into\n   * multiple request which are run in parallel.\n   *\n   * @api private\n   */\n  _startParallelUpload() {\n    const totalSize = this._size\n    let totalProgress = 0\n    this._parallelUploads = []\n\n    const partCount =\n      this._parallelUploadUrls != null\n        ? this._parallelUploadUrls.length\n        : this.options.parallelUploads\n\n    // The input file will be split into multiple slices which are uploaded in separate\n    // requests. Here we get the start and end position for the slices.\n    const parts =\n      this.options.parallelUploadBoundaries ?? splitSizeIntoParts(this._source.size, partCount)\n\n    // Attach URLs from previous uploads, if available.\n    if (this._parallelUploadUrls) {\n      parts.forEach((part, index) => {\n        part.uploadUrl = this._parallelUploadUrls[index] || null\n      })\n    }\n\n    // Create an empty list for storing the upload URLs\n    this._parallelUploadUrls = new Array(parts.length)\n\n    // Generate a promise for each slice that will be resolve if the respective\n    // upload is completed.\n    const uploads = parts.map((part, index) => {\n      let lastPartProgress = 0\n\n      return this._source.slice(part.start, part.end).then(\n        ({ value }) =>\n          new Promise((resolve, reject) => {\n            // Merge with the user supplied options but overwrite some values.\n            const options = {\n              ...this.options,\n              // If available, the partial upload should be resumed from a previous URL.\n              uploadUrl: part.uploadUrl || null,\n              // We take manually care of resuming for partial uploads, so they should\n              // not be stored in the URL storage.\n              storeFingerprintForResuming: false,\n              removeFingerprintOnSuccess: false,\n              // Reset the parallelUploads option to not cause recursion.\n              parallelUploads: 1,\n              // Reset this option as we are not doing a parallel upload.\n              parallelUploadBoundaries: null,\n              metadata: {},\n              // Add the header to indicate the this is a partial upload.\n              headers: {\n                ...this.options.headers,\n                'Upload-Concat': 'partial',\n              },\n              // Reject or resolve the promise if the upload errors or completes.\n              onSuccess: resolve,\n              onError: reject,\n              // Based in the progress for this partial upload, calculate the progress\n              // for the entire final upload.\n              onProgress: (newPartProgress) => {\n                totalProgress = totalProgress - lastPartProgress + newPartProgress\n                lastPartProgress = newPartProgress\n                this._emitProgress(totalProgress, totalSize)\n              },\n              // Wait until every partial upload has an upload URL, so we can add\n              // them to the URL storage.\n              onUploadUrlAvailable: () => {\n                this._parallelUploadUrls[index] = upload.url\n                // Test if all uploads have received an URL\n                if (this._parallelUploadUrls.filter((u) => Boolean(u)).length === parts.length) {\n                  this._saveUploadInUrlStorage()\n                }\n              },\n            }\n\n            const upload = new BaseUpload(value, options)\n            upload.start()\n\n            // Store the upload in an array, so we can later abort them if necessary.\n            this._parallelUploads.push(upload)\n          }),\n      )\n    })\n\n    let req\n    // Wait until all partial uploads are finished and we can send the POST request for\n    // creating the final upload.\n    Promise.all(uploads)\n      .then(() => {\n        req = this._openRequest('POST', this.options.endpoint)\n        req.setHeader('Upload-Concat', `final;${this._parallelUploadUrls.join(' ')}`)\n\n        // Add metadata if values have been added\n        const metadata = encodeMetadata(this.options.metadata)\n        if (metadata !== '') {\n          req.setHeader('Upload-Metadata', metadata)\n        }\n\n        return this._sendRequest(req, null)\n      })\n      .then((res) => {\n        if (!inStatusCategory(res.getStatus(), 200)) {\n          this._emitHttpError(req, res, 'tus: unexpected response while creating upload')\n          return\n        }\n\n        const location = res.getHeader('Location')\n        if (location == null) {\n          this._emitHttpError(req, res, 'tus: invalid or missing Location header')\n          return\n        }\n\n        this.url = resolveUrl(this.options.endpoint, location)\n        log(`Created upload at ${this.url}`)\n\n        this._emitSuccess()\n      })\n      .catch((err) => {\n        this._emitError(err)\n      })\n  }\n\n  /**\n   * Initiate the uploading procedure for a non-parallel upload. Here the entire file is\n   * uploaded in a sequential matter.\n   *\n   * @api private\n   */\n  _startSingleUpload() {\n    // Reset the aborted flag when the upload is started or else the\n    // _performUpload will stop before sending a request if the upload has been\n    // aborted previously.\n    this._aborted = false\n\n    // The upload had been started previously and we should reuse this URL.\n    if (this.url != null) {\n      log(`Resuming upload from previous URL: ${this.url}`)\n      this._resumeUpload()\n      return\n    }\n\n    // A URL has manually been specified, so we try to resume\n    if (this.options.uploadUrl != null) {\n      log(`Resuming upload from provided URL: ${this.options.uploadUrl}`)\n      this.url = this.options.uploadUrl\n      this._resumeUpload()\n      return\n    }\n\n    // An upload has not started for the file yet, so we start a new one\n    log('Creating a new upload')\n    this._createUpload()\n  }\n\n  /**\n   * Abort any running request and stop the current upload. After abort is called, no event\n   * handler will be invoked anymore. You can use the `start` method to resume the upload\n   * again.\n   * If `shouldTerminate` is true, the `terminate` function will be called to remove the\n   * current upload from the server.\n   *\n   * @param {boolean} shouldTerminate True if the upload should be deleted from the server.\n   * @return {Promise} The Promise will be resolved/rejected when the requests finish.\n   */\n  abort(shouldTerminate) {\n    // Stop any parallel partial uploads, that have been started in _startParallelUploads.\n    if (this._parallelUploads != null) {\n      this._parallelUploads.forEach((upload) => {\n        upload.abort(shouldTerminate)\n      })\n    }\n\n    // Stop any current running request.\n    if (this._req !== null) {\n      this._req.abort()\n      // Note: We do not close the file source here, so the user can resume in the future.\n    }\n    this._aborted = true\n\n    // Stop any timeout used for initiating a retry.\n    if (this._retryTimeout != null) {\n      clearTimeout(this._retryTimeout)\n      this._retryTimeout = null\n    }\n\n    if (!shouldTerminate || this.url == null) {\n      return Promise.resolve()\n    }\n\n    return (\n      BaseUpload.terminate(this.url, this.options)\n        // Remove entry from the URL storage since the upload URL is no longer valid.\n        .then(() => this._removeFromUrlStorage())\n    )\n  }\n\n  _emitHttpError(req, res, message, causingErr) {\n    this._emitError(new DetailedError(message, causingErr, req, res))\n  }\n\n  _emitError(err) {\n    // Do not emit errors, e.g. from aborted HTTP requests, if the upload has been stopped.\n    if (this._aborted) return\n\n    // Check if we should retry, when enabled, before sending the error to the user.\n    if (this.options.retryDelays != null) {\n      // We will reset the attempt counter if\n      // - we were already able to connect to the server (offset != null) and\n      // - we were able to upload a small chunk of data to the server\n      const shouldResetDelays = this._offset != null && this._offset > this._offsetBeforeRetry\n      if (shouldResetDelays) {\n        this._retryAttempt = 0\n      }\n\n      if (shouldRetry(err, this._retryAttempt, this.options)) {\n        const delay = this.options.retryDelays[this._retryAttempt++]\n\n        this._offsetBeforeRetry = this._offset\n\n        this._retryTimeout = setTimeout(() => {\n          this.start()\n        }, delay)\n        return\n      }\n    }\n\n    if (typeof this.options.onError === 'function') {\n      this.options.onError(err)\n    } else {\n      throw err\n    }\n  }\n\n  /**\n   * Publishes notification if the upload has been successfully completed.\n   *\n   * @api private\n   */\n  _emitSuccess() {\n    if (this.options.removeFingerprintOnSuccess) {\n      // Remove stored fingerprint and corresponding endpoint. This causes\n      // new uploads of the same file to be treated as a different file.\n      this._removeFromUrlStorage()\n    }\n\n    if (typeof this.options.onSuccess === 'function') {\n      this.options.onSuccess()\n    }\n  }\n\n  /**\n   * Publishes notification when data has been sent to the server. This\n   * data may not have been accepted by the server yet.\n   *\n   * @param {number} bytesSent  Number of bytes sent to the server.\n   * @param {number} bytesTotal Total number of bytes to be sent to the server.\n   * @api private\n   */\n  _emitProgress(bytesSent, bytesTotal) {\n    if (typeof this.options.onProgress === 'function') {\n      this.options.onProgress(bytesSent, bytesTotal)\n    }\n  }\n\n  /**\n   * Publishes notification when a chunk of data has been sent to the server\n   * and accepted by the server.\n   * @param {number} chunkSize  Size of the chunk that was accepted by the server.\n   * @param {number} bytesAccepted Total number of bytes that have been\n   *                                accepted by the server.\n   * @param {number} bytesTotal Total number of bytes to be sent to the server.\n   * @api private\n   */\n  _emitChunkComplete(chunkSize, bytesAccepted, bytesTotal) {\n    if (typeof this.options.onChunkComplete === 'function') {\n      this.options.onChunkComplete(chunkSize, bytesAccepted, bytesTotal)\n    }\n  }\n\n  /**\n   * Create a new upload using the creation extension by sending a POST\n   * request to the endpoint. After successful creation the file will be\n   * uploaded\n   *\n   * @api private\n   */\n  _createUpload() {\n    if (!this.options.endpoint) {\n      this._emitError(new Error('tus: unable to create upload because no endpoint is provided'))\n      return\n    }\n\n    const req = this._openRequest('POST', this.options.endpoint)\n\n    if (this.options.uploadLengthDeferred) {\n      req.setHeader('Upload-Defer-Length', 1)\n    } else {\n      req.setHeader('Upload-Length', this._size)\n    }\n\n    // Add metadata if values have been added\n    const metadata = encodeMetadata(this.options.metadata)\n    if (metadata !== '') {\n      req.setHeader('Upload-Metadata', metadata)\n    }\n\n    let promise\n    if (this.options.uploadDataDuringCreation && !this.options.uploadLengthDeferred) {\n      this._offset = 0\n      promise = this._addChunkToRequest(req)\n    } else {\n      promise = this._sendRequest(req, null)\n    }\n\n    promise\n      .then((res) => {\n        if (!inStatusCategory(res.getStatus(), 200)) {\n          this._emitHttpError(req, res, 'tus: unexpected response while creating upload')\n          return\n        }\n\n        const location = res.getHeader('Location')\n        if (location == null) {\n          this._emitHttpError(req, res, 'tus: invalid or missing Location header')\n          return\n        }\n\n        this.url = resolveUrl(this.options.endpoint, location)\n        log(`Created upload at ${this.url}`)\n\n        if (typeof this.options.onUploadUrlAvailable === 'function') {\n          this.options.onUploadUrlAvailable()\n        }\n\n        if (this._size === 0) {\n          // Nothing to upload and file was successfully created\n          this._emitSuccess()\n          this._source.close()\n          return\n        }\n\n        this._saveUploadInUrlStorage().then(() => {\n          if (this.options.uploadDataDuringCreation) {\n            this._handleUploadResponse(req, res)\n          } else {\n            this._offset = 0\n            this._performUpload()\n          }\n        })\n      })\n      .catch((err) => {\n        this._emitHttpError(req, null, 'tus: failed to create upload', err)\n      })\n  }\n\n  /*\n   * Try to resume an existing upload. First a HEAD request will be sent\n   * to retrieve the offset. If the request fails a new upload will be\n   * created. In the case of a successful response the file will be uploaded.\n   *\n   * @api private\n   */\n  _resumeUpload() {\n    const req = this._openRequest('HEAD', this.url)\n    const promise = this._sendRequest(req, null)\n\n    promise\n      .then((res) => {\n        const status = res.getStatus()\n        if (!inStatusCategory(status, 200)) {\n          // If the upload is locked (indicated by the 423 Locked status code), we\n          // emit an error instead of directly starting a new upload. This way the\n          // retry logic can catch the error and will retry the upload. An upload\n          // is usually locked for a short period of time and will be available\n          // afterwards.\n          if (status === 423) {\n            this._emitHttpError(req, res, 'tus: upload is currently locked; retry later')\n            return\n          }\n\n          if (inStatusCategory(status, 400)) {\n            // Remove stored fingerprint and corresponding endpoint,\n            // on client errors since the file can not be found\n            this._removeFromUrlStorage()\n          }\n\n          if (!this.options.endpoint) {\n            // Don't attempt to create a new upload if no endpoint is provided.\n            this._emitHttpError(\n              req,\n              res,\n              'tus: unable to resume upload (new upload cannot be created without an endpoint)',\n            )\n            return\n          }\n\n          // Try to create a new upload\n          this.url = null\n          this._createUpload()\n          return\n        }\n\n        const offset = parseInt(res.getHeader('Upload-Offset'), 10)\n        if (Number.isNaN(offset)) {\n          this._emitHttpError(req, res, 'tus: invalid or missing offset value')\n          return\n        }\n\n        const length = parseInt(res.getHeader('Upload-Length'), 10)\n        if (Number.isNaN(length) && !this.options.uploadLengthDeferred) {\n          this._emitHttpError(req, res, 'tus: invalid or missing length value')\n          return\n        }\n\n        if (typeof this.options.onUploadUrlAvailable === 'function') {\n          this.options.onUploadUrlAvailable()\n        }\n\n        this._saveUploadInUrlStorage().then(() => {\n          // Upload has already been completed and we do not need to send additional\n          // data to the server\n          if (offset === length) {\n            this._emitProgress(length, length)\n            this._emitSuccess()\n            return\n          }\n\n          this._offset = offset\n          this._performUpload()\n        })\n      })\n      .catch((err) => {\n        this._emitHttpError(req, null, 'tus: failed to resume upload', err)\n      })\n  }\n\n  /**\n   * Start uploading the file using PATCH requests. The file will be divided\n   * into chunks as specified in the chunkSize option. During the upload\n   * the onProgress event handler may be invoked multiple times.\n   *\n   * @api private\n   */\n  _performUpload() {\n    // If the upload has been aborted, we will not send the next PATCH request.\n    // This is important if the abort method was called during a callback, such\n    // as onChunkComplete or onProgress.\n    if (this._aborted) {\n      return\n    }\n\n    let req\n\n    // Some browser and servers may not support the PATCH method. For those\n    // cases, you can tell tus-js-client to use a POST request with the\n    // X-HTTP-Method-Override header for simulating a PATCH request.\n    if (this.options.overridePatchMethod) {\n      req = this._openRequest('POST', this.url)\n      req.setHeader('X-HTTP-Method-Override', 'PATCH')\n    } else {\n      req = this._openRequest('PATCH', this.url)\n    }\n\n    req.setHeader('Upload-Offset', this._offset)\n    const promise = this._addChunkToRequest(req)\n\n    promise\n      .then((res) => {\n        if (!inStatusCategory(res.getStatus(), 200)) {\n          this._emitHttpError(req, res, 'tus: unexpected response while uploading chunk')\n          return\n        }\n\n        this._handleUploadResponse(req, res)\n      })\n      .catch((err) => {\n        // Don't emit an error if the upload was aborted manually\n        if (this._aborted) {\n          return\n        }\n\n        this._emitHttpError(req, null, `tus: failed to upload chunk at offset ${this._offset}`, err)\n      })\n  }\n\n  /**\n   * _addChunktoRequest reads a chunk from the source and sends it using the\n   * supplied request object. It will not handle the response.\n   *\n   * @api private\n   */\n  _addChunkToRequest(req) {\n    const start = this._offset\n    let end = this._offset + this.options.chunkSize\n\n    req.setProgressHandler((bytesSent) => {\n      this._emitProgress(start + bytesSent, this._size)\n    })\n\n    req.setHeader('Content-Type', 'application/offset+octet-stream')\n\n    // The specified chunkSize may be Infinity or the calcluated end position\n    // may exceed the file's size. In both cases, we limit the end position to\n    // the input's total size for simpler calculations and correctness.\n    if ((end === Infinity || end > this._size) && !this.options.uploadLengthDeferred) {\n      end = this._size\n    }\n\n    return this._source.slice(start, end).then(({ value, done }) => {\n      const valueSize = value && value.size ? value.size : 0\n\n      // If the upload length is deferred, the upload size was not specified during\n      // upload creation. So, if the file reader is done reading, we know the total\n      // upload size and can tell the tus server.\n      if (this.options.uploadLengthDeferred && done) {\n        this._size = this._offset + valueSize\n        req.setHeader('Upload-Length', this._size)\n      }\n\n      // The specified uploadSize might not match the actual amount of data that a source\n      // provides. In these cases, we cannot successfully complete the upload, so we\n      // rather error out and let the user know. If not, tus-js-client will be stuck\n      // in a loop of repeating empty PATCH requests.\n      // See https://community.transloadit.com/t/how-to-abort-hanging-companion-uploads/16488/13\n      const newSize = this._offset + valueSize\n      if (!this.options.uploadLengthDeferred && done && newSize !== this._size) {\n        return Promise.reject(\n          new Error(\n            `upload was configured with a size of ${this._size} bytes, but the source is done after ${newSize} bytes`,\n          ),\n        )\n      }\n\n      if (value === null) {\n        return this._sendRequest(req)\n      }\n      this._emitProgress(this._offset, this._size)\n      return this._sendRequest(req, value)\n    })\n  }\n\n  /**\n   * _handleUploadResponse is used by requests that haven been sent using _addChunkToRequest\n   * and already have received a response.\n   *\n   * @api private\n   */\n  _handleUploadResponse(req, res) {\n    const offset = parseInt(res.getHeader('Upload-Offset'), 10)\n    if (Number.isNaN(offset)) {\n      this._emitHttpError(req, res, 'tus: invalid or missing offset value')\n      return\n    }\n\n    this._emitProgress(offset, this._size)\n    this._emitChunkComplete(offset - this._offset, offset, this._size)\n\n    this._offset = offset\n\n    if (offset === this._size) {\n      // Yay, finally done :)\n      this._emitSuccess()\n      this._source.close()\n      return\n    }\n\n    this._performUpload()\n  }\n\n  /**\n   * Create a new HTTP request object with the given method and URL.\n   *\n   * @api private\n   */\n  _openRequest(method, url) {\n    const req = openRequest(method, url, this.options)\n    this._req = req\n    return req\n  }\n\n  /**\n   * Remove the entry in the URL storage, if it has been saved before.\n   *\n   * @api private\n   */\n  _removeFromUrlStorage() {\n    if (!this._urlStorageKey) return\n\n    this._urlStorage.removeUpload(this._urlStorageKey).catch((err) => {\n      this._emitError(err)\n    })\n    this._urlStorageKey = null\n  }\n\n  /**\n   * Add the upload URL to the URL storage, if possible.\n   *\n   * @api private\n   */\n  _saveUploadInUrlStorage() {\n    // We do not store the upload URL\n    // - if it was disabled in the option, or\n    // - if no fingerprint was calculated for the input (i.e. a stream), or\n    // - if the URL is already stored (i.e. key is set alread).\n    if (\n      !this.options.storeFingerprintForResuming ||\n      !this._fingerprint ||\n      this._urlStorageKey !== null\n    ) {\n      return Promise.resolve()\n    }\n\n    const storedUpload = {\n      size: this._size,\n      metadata: this.options.metadata,\n      creationTime: new Date().toString(),\n    }\n\n    if (this._parallelUploads) {\n      // Save multiple URLs if the parallelUploads option is used ...\n      storedUpload.parallelUploadUrls = this._parallelUploadUrls\n    } else {\n      // ... otherwise we just save the one available URL.\n      storedUpload.uploadUrl = this.url\n    }\n\n    return this._urlStorage.addUpload(this._fingerprint, storedUpload).then((urlStorageKey) => {\n      this._urlStorageKey = urlStorageKey\n    })\n  }\n\n  /**\n   * Send a request with the provided body.\n   *\n   * @api private\n   */\n  _sendRequest(req, body = null) {\n    return sendRequest(req, body, this.options)\n  }\n}\n\nfunction encodeMetadata(metadata) {\n  return Object.entries(metadata)\n    .map(([key, value]) => `${key} ${Base64.encode(String(value))}`)\n    .join(',')\n}\n\n/**\n * Checks whether a given status is in the range of the expected category.\n * For example, only a status between 200 and 299 will satisfy the category 200.\n *\n * @api private\n */\nfunction inStatusCategory(status, category) {\n  return status >= category && status < category + 100\n}\n\n/**\n * Create a new HTTP request with the specified method and URL.\n * The necessary headers that are included in every request\n * will be added, including the request ID.\n *\n * @api private\n */\nfunction openRequest(method, url, options) {\n  const req = options.httpStack.createRequest(method, url)\n\n  req.setHeader('Tus-Resumable', '1.0.0')\n  const headers = options.headers || {}\n\n  Object.entries(headers).forEach(([name, value]) => {\n    req.setHeader(name, value)\n  })\n\n  if (options.addRequestId) {\n    const requestId = uuid()\n    req.setHeader('X-Request-ID', requestId)\n  }\n\n  return req\n}\n\n/**\n * Send a request with the provided body while invoking the onBeforeRequest\n * and onAfterResponse callbacks.\n *\n * @api private\n */\nasync function sendRequest(req, body, options) {\n  if (typeof options.onBeforeRequest === 'function') {\n    await options.onBeforeRequest(req)\n  }\n\n  const res = await req.send(body)\n\n  if (typeof options.onAfterResponse === 'function') {\n    await options.onAfterResponse(req, res)\n  }\n\n  return res\n}\n\n/**\n * Checks whether the browser running this code has internet access.\n * This function will always return true in the node.js environment\n *\n * @api private\n */\nfunction isOnline() {\n  let online = true\n  // Note: We don't reference `window` here because the navigator object also exists\n  // in a Web Worker's context.\n  // eslint-disable-next-line no-undef\n  if (typeof navigator !== 'undefined' && navigator.onLine === false) {\n    online = false\n  }\n\n  return online\n}\n\n/**\n * Checks whether or not it is ok to retry a request.\n * @param {Error|DetailedError} err the error returned from the last request\n * @param {number} retryAttempt the number of times the request has already been retried\n * @param {object} options tus Upload options\n *\n * @api private\n */\nfunction shouldRetry(err, retryAttempt, options) {\n  // We only attempt a retry if\n  // - retryDelays option is set\n  // - we didn't exceed the maxium number of retries, yet, and\n  // - this error was caused by a request or it's response and\n  // - the error is server error (i.e. not a status 4xx except a 409 or 423) or\n  // a onShouldRetry is specified and returns true\n  // - the browser does not indicate that we are offline\n  if (\n    options.retryDelays == null ||\n    retryAttempt >= options.retryDelays.length ||\n    err.originalRequest == null\n  ) {\n    return false\n  }\n\n  if (options && typeof options.onShouldRetry === 'function') {\n    return options.onShouldRetry(err, retryAttempt, options)\n  }\n\n  return defaultOnShouldRetry(err)\n}\n\n/**\n * determines if the request should be retried. Will only retry if not a status 4xx except a 409 or 423\n * @param {DetailedError} err\n * @returns {boolean}\n */\nfunction defaultOnShouldRetry(err) {\n  const status = err.originalResponse ? err.originalResponse.getStatus() : 0\n  return (!inStatusCategory(status, 400) || status === 409 || status === 423) && isOnline()\n}\n\n/**\n * Resolve a relative link given the origin as source. For example,\n * if a HTTP request to http://example.com/files/ returns a Location\n * header with the value /upload/abc, the resolved URL will be:\n * http://example.com/upload/abc\n */\nfunction resolveUrl(origin, link) {\n  return new URL(link, origin).toString()\n}\n\n/**\n * Calculate the start and end positions for the parts if an upload\n * is split into multiple parallel requests.\n *\n * @param {number} totalSize The byte size of the upload, which will be split.\n * @param {number} partCount The number in how many parts the upload will be split.\n * @return {object[]}\n * @api private\n */\nfunction splitSizeIntoParts(totalSize, partCount) {\n  const partSize = Math.floor(totalSize / partCount)\n  const parts = []\n\n  for (let i = 0; i < partCount; i++) {\n    parts.push({\n      start: partSize * i,\n      end: partSize * (i + 1),\n    })\n  }\n\n  parts[partCount - 1].end = totalSize\n\n  return parts\n}\n\nBaseUpload.defaultOptions = defaultOptions\n\nexport default BaseUpload\n","/**\n * Generate a UUID v4 based on random numbers. We intentioanlly use the less\n * secure Math.random function here since the more secure crypto.getRandomNumbers\n * is not available on all platforms.\n * This is not a problem for us since we use the UUID only for generating a\n * request ID, so we can correlate server logs to client errors.\n *\n * This function is taken from following site:\n * https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n *\n * @return {string} The generate UUID\n */\nexport default function uuid() {\n  /* eslint-disable no-bitwise */\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16) | 0\n    const v = c === 'x' ? r : (r & 0x3) | 0x8\n    return v.toString(16)\n  })\n}\n","let hasStorage = false\ntry {\n  // Note: localStorage does not exist in the Web Worker's context, so we must use window here.\n  hasStorage = 'localStorage' in window\n\n  // Attempt to store and read entries from the local storage to detect Private\n  // Mode on Safari on iOS (see #49)\n  // If the key was not used before, we remove it from local storage again to\n  // not cause confusion where the entry came from.\n  const key = 'tusSupport'\n  const originalValue = localStorage.getItem(key)\n  localStorage.setItem(key, originalValue)\n  if (originalValue === null) localStorage.removeItem(key)\n} catch (e) {\n  // If we try to access localStorage inside a sandboxed iframe, a SecurityError\n  // is thrown. When in private mode on iOS Safari, a QuotaExceededError is\n  // thrown (see #49)\n  if (e.code === e.SECURITY_ERR || e.code === e.QUOTA_EXCEEDED_ERR) {\n    hasStorage = false\n  } else {\n    throw e\n  }\n}\n\nexport const canStoreURLs = hasStorage\n\nexport class WebStorageUrlStorage {\n  findAllUploads() {\n    const results = this._findEntries('tus::')\n    return Promise.resolve(results)\n  }\n\n  findUploadsByFingerprint(fingerprint) {\n    const results = this._findEntries(`tus::${fingerprint}::`)\n    return Promise.resolve(results)\n  }\n\n  removeUpload(urlStorageKey) {\n    localStorage.removeItem(urlStorageKey)\n    return Promise.resolve()\n  }\n\n  addUpload(fingerprint, upload) {\n    const id = Math.round(Math.random() * 1e12)\n    const key = `tus::${fingerprint}::${id}`\n\n    localStorage.setItem(key, JSON.stringify(upload))\n    return Promise.resolve(key)\n  }\n\n  _findEntries(prefix) {\n    const results = []\n\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i)\n      if (key.indexOf(prefix) !== 0) continue\n\n      try {\n        const upload = JSON.parse(localStorage.getItem(key))\n        upload.urlStorageKey = key\n\n        results.push(upload)\n      } catch (e) {\n        // The JSON parse error is intentionally ignored here, so a malformed\n        // entry in the storage cannot prevent an upload.\n      }\n    }\n\n    return results\n  }\n}\n","/* eslint-disable max-classes-per-file */\nexport default class XHRHttpStack {\n  createRequest(method, url) {\n    return new Request(method, url)\n  }\n\n  getName() {\n    return 'XHRHttpStack'\n  }\n}\n\nclass Request {\n  constructor(method, url) {\n    this._xhr = new XMLHttpRequest()\n    this._xhr.open(method, url, true)\n\n    this._method = method\n    this._url = url\n    this._headers = {}\n  }\n\n  getMethod() {\n    return this._method\n  }\n\n  getURL() {\n    return this._url\n  }\n\n  setHeader(header, value) {\n    this._xhr.setRequestHeader(header, value)\n    this._headers[header] = value\n  }\n\n  getHeader(header) {\n    return this._headers[header]\n  }\n\n  setProgressHandler(progressHandler) {\n    // Test support for progress events before attaching an event listener\n    if (!('upload' in this._xhr)) {\n      return\n    }\n\n    this._xhr.upload.onprogress = (e) => {\n      if (!e.lengthComputable) {\n        return\n      }\n\n      progressHandler(e.loaded)\n    }\n  }\n\n  send(body = null) {\n    return new Promise((resolve, reject) => {\n      this._xhr.onload = () => {\n        resolve(new Response(this._xhr))\n      }\n\n      this._xhr.onerror = (err) => {\n        reject(err)\n      }\n\n      this._xhr.send(body)\n    })\n  }\n\n  abort() {\n    this._xhr.abort()\n    return Promise.resolve()\n  }\n\n  getUnderlyingObject() {\n    return this._xhr\n  }\n}\n\nclass Response {\n  constructor(xhr) {\n    this._xhr = xhr\n  }\n\n  getStatus() {\n    return this._xhr.status\n  }\n\n  getHeader(header) {\n    return this._xhr.getResponseHeader(header)\n  }\n\n  getBody() {\n    return this._xhr.responseText\n  }\n\n  getUnderlyingObject() {\n    return this._xhr\n  }\n}\n","const isReactNative = () =>\n  typeof navigator !== 'undefined' &&\n  typeof navigator.product === 'string' &&\n  navigator.product.toLowerCase() === 'reactnative'\n\nexport default isReactNative\n","import isCordova from './isCordova.js'\nimport readAsByteArray from './readAsByteArray.js'\n\nexport default class FileSource {\n  // Make this.size a method\n  constructor(file) {\n    this._file = file\n    this.size = file.size\n  }\n\n  slice(start, end) {\n    // In Apache Cordova applications, a File must be resolved using\n    // FileReader instances, see\n    // https://cordova.apache.org/docs/en/8.x/reference/cordova-plugin-file/index.html#read-a-file\n    if (isCordova()) {\n      return readAsByteArray(this._file.slice(start, end))\n    }\n\n    const value = this._file.slice(start, end)\n    const done = end >= this.size\n    return Promise.resolve({ value, done })\n  }\n\n  close() {\n    // Nothing to do here since we don't need to release any resources.\n  }\n}\n","const isCordova = () =>\n  typeof window !== 'undefined' &&\n  (typeof window.PhoneGap !== 'undefined' ||\n    typeof window.Cordova !== 'undefined' ||\n    typeof window.cordova !== 'undefined')\n\nexport default isCordova\n","/**\n * readAsByteArray converts a File object to a Uint8Array.\n * This function is only used on the Apache Cordova platform.\n * See https://cordova.apache.org/docs/en/latest/reference/cordova-plugin-file/index.html#read-a-file\n */\nexport default function readAsByteArray(chunk) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader()\n    reader.onload = () => {\n      const value = new Uint8Array(reader.result)\n      resolve({ value })\n    }\n    reader.onerror = (err) => {\n      reject(err)\n    }\n    reader.readAsArrayBuffer(chunk)\n  })\n}\n","function len(blobOrArray) {\n  if (blobOrArray === undefined) return 0\n  if (blobOrArray.size !== undefined) return blobOrArray.size\n  return blobOrArray.length\n}\n\n/*\n  Typed arrays and blobs don't have a concat method.\n  This function helps StreamSource accumulate data to reach chunkSize.\n*/\nfunction concat(a, b) {\n  if (a.concat) {\n    // Is `a` an Array?\n    return a.concat(b)\n  }\n  if (a instanceof Blob) {\n    return new Blob([a, b], { type: a.type })\n  }\n  if (a.set) {\n    // Is `a` a typed array?\n    const c = new a.constructor(a.length + b.length)\n    c.set(a)\n    c.set(b, a.length)\n    return c\n  }\n  throw new Error('Unknown data type')\n}\n\nexport default class StreamSource {\n  constructor(reader) {\n    this._buffer = undefined\n    this._bufferOffset = 0\n    this._reader = reader\n    this._done = false\n  }\n\n  slice(start, end) {\n    if (start < this._bufferOffset) {\n      return Promise.reject(new Error(\"Requested data is before the reader's current offset\"))\n    }\n\n    return this._readUntilEnoughDataOrDone(start, end)\n  }\n\n  _readUntilEnoughDataOrDone(start, end) {\n    const hasEnoughData = end <= this._bufferOffset + len(this._buffer)\n    if (this._done || hasEnoughData) {\n      const value = this._getDataFromBuffer(start, end)\n      const done = value == null ? this._done : false\n      return Promise.resolve({ value, done })\n    }\n\n    return this._reader.read().then(({ value, done }) => {\n      if (done) {\n        this._done = true\n      } else if (this._buffer === undefined) {\n        this._buffer = value\n      } else {\n        this._buffer = concat(this._buffer, value)\n      }\n\n      return this._readUntilEnoughDataOrDone(start, end)\n    })\n  }\n\n  _getDataFromBuffer(start, end) {\n    // Remove data from buffer before `start`.\n    // Data might be reread from the buffer if an upload fails, so we can only\n    // safely delete data when it comes *before* what is currently being read.\n    if (start > this._bufferOffset) {\n      this._buffer = this._buffer.slice(start - this._bufferOffset)\n      this._bufferOffset = start\n    }\n    // If the buffer is empty after removing old data, all data has been read.\n    const hasAllDataBeenRead = len(this._buffer) === 0\n    if (this._done && hasAllDataBeenRead) {\n      return null\n    }\n    // We already removed data before `start`, so we just return the first\n    // chunk from the buffer.\n    return this._buffer.slice(0, end - start)\n  }\n\n  close() {\n    if (this._reader.cancel) {\n      this._reader.cancel()\n    }\n  }\n}\n","import BaseUpload from '../upload.js'\nimport NoopUrlStorage from '../noopUrlStorage.js'\nimport { enableDebugLog } from '../logger.js'\nimport DetailedError from '../error.js'\n\nimport { canStoreURLs, WebStorageUrlStorage } from './urlStorage.js'\nimport DefaultHttpStack from './httpStack.js'\nimport FileReader from './fileReader.js'\nimport fingerprint from './fileSignature.js'\n\nconst defaultOptions = {\n  ...BaseUpload.defaultOptions,\n  httpStack: new DefaultHttpStack(),\n  fileReader: new FileReader(),\n  urlStorage: canStoreURLs ? new WebStorageUrlStorage() : new NoopUrlStorage(),\n  fingerprint,\n}\n\nclass Upload extends BaseUpload {\n  constructor(file = null, options = {}) {\n    options = { ...defaultOptions, ...options }\n    super(file, options)\n  }\n\n  static terminate(url, options = {}) {\n    options = { ...defaultOptions, ...options }\n    return BaseUpload.terminate(url, options)\n  }\n}\n\n// Note: We don't reference `window` here because these classes also exist in a Web Worker's context.\nconst isSupported =\n  typeof XMLHttpRequest === 'function' &&\n  typeof Blob === 'function' &&\n  typeof Blob.prototype.slice === 'function'\n\nexport {\n  Upload,\n  canStoreURLs,\n  defaultOptions,\n  isSupported,\n  enableDebugLog,\n  DefaultHttpStack,\n  DetailedError,\n}\n","import isReactNative from './isReactNative.js'\nimport uriToBlob from './uriToBlob.js'\n\nimport FileSource from './sources/FileSource.js'\nimport StreamSource from './sources/StreamSource.js'\n\nexport default class FileReader {\n  async openFile(input, chunkSize) {\n    // In React Native, when user selects a file, instead of a File or Blob,\n    // you usually get a file object {} with a uri property that contains\n    // a local path to the file. We use XMLHttpRequest to fetch\n    // the file blob, before uploading with tus.\n    if (isReactNative() && input && typeof input.uri !== 'undefined') {\n      try {\n        const blob = await uriToBlob(input.uri)\n        return new FileSource(blob)\n      } catch (err) {\n        throw new Error(\n          `tus: cannot fetch \\`file.uri\\` as Blob, make sure the uri is correct and accessible. ${err}`,\n        )\n      }\n    }\n\n    // Since we emulate the Blob type in our tests (not all target browsers\n    // support it), we cannot use `instanceof` for testing whether the input value\n    // can be handled. Instead, we simply check is the slice() function and the\n    // size property are available.\n    if (typeof input.slice === 'function' && typeof input.size !== 'undefined') {\n      return Promise.resolve(new FileSource(input))\n    }\n\n    if (typeof input.read === 'function') {\n      chunkSize = Number(chunkSize)\n      if (!Number.isFinite(chunkSize)) {\n        return Promise.reject(\n          new Error(\n            'cannot create source for stream without a finite value for the `chunkSize` option',\n          ),\n        )\n      }\n\n      return Promise.resolve(new StreamSource(input, chunkSize))\n    }\n\n    return Promise.reject(\n      new Error(\n        'source object may only be an instance of File, Blob, or Reader in this environment',\n      ),\n    )\n  }\n}\n","/**\n * uriToBlob resolves a URI to a Blob object. This is used for\n * React Native to retrieve a file (identified by a file://\n * URI) as a blob.\n */\nexport default function uriToBlob(uri) {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest()\n    xhr.responseType = 'blob'\n    xhr.onload = () => {\n      const blob = xhr.response\n      resolve(blob)\n    }\n    xhr.onerror = (err) => {\n      reject(err)\n    }\n    xhr.open('GET', uri)\n    xhr.send()\n  })\n}\n","/* eslint no-unused-vars: \"off\" */\n\nexport default class NoopUrlStorage {\n  listAllUploads() {\n    return Promise.resolve([])\n  }\n\n  findUploadsByFingerprint(fingerprint) {\n    return Promise.resolve([])\n  }\n\n  removeUpload(urlStorageKey) {\n    return Promise.resolve()\n  }\n\n  addUpload(fingerprint, upload) {\n    return Promise.resolve(null)\n  }\n}\n","import isReactNative from './isReactNative.js'\n\n// TODO: Differenciate between input types\n\n/**\n * Generate a fingerprint for a file which will be used the store the endpoint\n *\n * @param {File} file\n * @param {Object} options\n * @param {Function} callback\n */\nexport default function fingerprint(file, options) {\n  if (isReactNative()) {\n    return Promise.resolve(reactNativeFingerprint(file, options))\n  }\n\n  return Promise.resolve(\n    ['tus-br', file.name, file.type, file.size, file.lastModified, options.endpoint].join('-'),\n  )\n}\n\nfunction reactNativeFingerprint(file, options) {\n  const exifHash = file.exif ? hashCode(JSON.stringify(file.exif)) : 'noexif'\n  return ['tus-rn', file.name || 'noname', file.size || 'nosize', exifHash, options.endpoint].join(\n    '/',\n  )\n}\n\nfunction hashCode(str) {\n  /* eslint-disable no-bitwise */\n  // from https://stackoverflow.com/a/8831937/151666\n  let hash = 0\n  if (str.length === 0) {\n    return hash\n  }\n  for (let i = 0; i < str.length; i++) {\n    const char = str.charCodeAt(i)\n    hash = (hash << 5) - hash + char\n    hash &= hash // Convert to 32bit integer\n  }\n  return hash\n}\n","import {\n  HttpRequest,\n  HttpResponse,\n  Upload\n} from \"tus-js-client/lib/browser/index.js\";\nimport BaseUpload, { InitialFile } from \"./base_upload\";\nimport { deleteUpload } from \"./tus_utils\";\n\ninterface Parameters {\n  chunkSize: number;\n  csrfToken: string;\n  fieldName: string;\n  file: File;\n  formId: string;\n  retryDelays: number[] | null;\n  uploadIndex: number;\n  uploadUrl: string;\n}\n\nexport default class TusUpload extends BaseUpload {\n  public onError?: (error: Error) => void;\n  public onProgress?: (bytesUploaded: number, bytesTotal: number) => void;\n  public onSuccess?: () => void;\n  private id: string;\n  private upload: Upload;\n  private csrfToken: string;\n\n  constructor({\n    chunkSize,\n    csrfToken,\n    fieldName,\n    file,\n    formId,\n    retryDelays,\n    uploadIndex,\n    uploadUrl\n  }: Parameters) {\n    super({ name: file.name, status: \"uploading\", type: \"tus\", uploadIndex });\n\n    this.csrfToken = csrfToken;\n\n    this.upload = new Upload(file, {\n      chunkSize,\n      endpoint: uploadUrl,\n      metadata: {\n        fieldName: fieldName,\n        filename: file.name,\n        formId: formId\n      },\n      onAfterResponse: this.handleAfterReponse,\n      onBeforeRequest: this.addCsrTokenToRequest,\n      onError: this.handleError,\n      onProgress: this.handleProgress,\n      onSuccess: this.handleSucces,\n      retryDelays: retryDelays || [0, 1000, 3000, 5000]\n    });\n\n    this.onError = undefined;\n    this.onProgress = undefined;\n    this.onSuccess = undefined;\n  }\n\n  public async abort(): Promise<void> {\n    await this.upload.abort(true);\n  }\n\n  public async delete(): Promise<void> {\n    if (!this.upload.url) {\n      return Promise.resolve();\n    }\n\n    await deleteUpload(this.upload.url, this.csrfToken);\n  }\n\n  public getId(): string | undefined {\n    return this.id;\n  }\n\n  public getSize(): number {\n    return (this.upload.file as File).size;\n  }\n\n  public start(): void {\n    this.upload.start();\n  }\n\n  private handleError = (error: Error) => {\n    if (this.onError) {\n      this.onError(error);\n    } else {\n      throw error;\n    }\n  };\n\n  private handleProgress = (bytesUploaded: number, bytesTotal: number) => {\n    if (this.onProgress) {\n      this.onProgress(bytesUploaded, bytesTotal);\n    }\n  };\n\n  private handleSucces = () => {\n    if (this.onSuccess) {\n      this.onSuccess();\n    }\n  };\n\n  private addCsrTokenToRequest = (request: HttpRequest) => {\n    request.setHeader(\"X-CSRFToken\", this.csrfToken);\n  };\n\n  private handleAfterReponse = (\n    _request: HttpRequest,\n    response: HttpResponse\n  ) => {\n    const resourceId = response.getHeader(\"ResourceId\");\n\n    if (resourceId) {\n      this.id = resourceId;\n    }\n  };\n\n  getInitialFile(): InitialFile {\n    return {\n      id: this.id,\n      name: this.name,\n      size: this.getSize(),\n      type: \"tus\",\n      url: \"\"\n    };\n  }\n}\n","import { findInput, getMetadataFieldName, getUploadsFieldName } from \"./util\";\nimport RenderUploadFile from \"./render_upload_file\";\nimport DropArea from \"./drop_area\";\n\nimport S3Upload from \"./uploads/s3_upload\";\nimport EventEmitter from \"eventemitter3\";\nimport { createUploadedFile } from \"./uploads/uploaded_file\";\nimport TusUpload from \"./uploads/tus_upload\";\nimport BaseUpload, { InitialFile, UploadType } from \"./uploads/base_upload\";\nimport AcceptedFileTypes from \"./accepted_file_types\";\n\nexport type Translations = { [key: string]: string };\n\ninterface ClickEvent {\n  fileName: string;\n  fieldName: string;\n  id?: string;\n  type: UploadType;\n}\n\nexport interface Callbacks {\n  onClick?: ({ fileName, fieldName, type }: ClickEvent) => void;\n  onDelete?: (upload: BaseUpload) => void;\n  onError?: (error: Error, upload: BaseUpload) => void;\n  onProgress?: (\n    bytesUploaded: number,\n    bytesTotal: number,\n    upload: BaseUpload\n  ) => void;\n  onSuccess?: (upload: BaseUpload) => void;\n}\n\ninterface ConstructorParams {\n  callbacks: Callbacks;\n  chunkSize: number;\n  csrfToken: string;\n  eventEmitter?: EventEmitter;\n  fieldName: string;\n  form: Element;\n  formId: string;\n  initial: InitialFile[];\n  input: HTMLInputElement;\n  multiple: boolean;\n  parent: Element;\n  prefix: string | null;\n  retryDelays: number[] | null;\n  s3UploadDir: string | null;\n  skipRequired: boolean;\n  supportDropArea: boolean;\n  translations: Translations;\n  uploadUrl: string;\n}\n\nclass FileField {\n  acceptedFileTypes: AcceptedFileTypes;\n  callbacks: Callbacks;\n  chunkSize: number;\n  csrfToken: string;\n  eventEmitter?: EventEmitter;\n  fieldName: string;\n  form: Element;\n  formId: string;\n  multiple: boolean;\n  nextUploadIndex: number;\n  prefix: string | null;\n  renderer: RenderUploadFile;\n  retryDelays: number[] | null;\n  s3UploadDir: string | null;\n  supportDropArea: boolean;\n  uploads: BaseUpload[];\n  uploadUrl: string;\n\n  constructor({\n    callbacks,\n    chunkSize,\n    csrfToken,\n    eventEmitter,\n    fieldName,\n    form,\n    formId,\n    initial,\n    input,\n    multiple,\n    parent,\n    prefix,\n    retryDelays,\n    s3UploadDir,\n    skipRequired,\n    supportDropArea,\n    translations,\n    uploadUrl\n  }: ConstructorParams) {\n    this.callbacks = callbacks;\n    this.chunkSize = chunkSize;\n    this.csrfToken = csrfToken;\n    this.eventEmitter = eventEmitter;\n    this.fieldName = fieldName;\n    this.form = form;\n    this.formId = formId;\n    this.multiple = multiple;\n    this.prefix = prefix;\n    this.retryDelays = retryDelays;\n    this.s3UploadDir = s3UploadDir;\n    this.supportDropArea = supportDropArea && !input.disabled;\n    this.uploadUrl = uploadUrl;\n    this.acceptedFileTypes = new AcceptedFileTypes(input.accept);\n\n    this.uploads = [];\n    this.nextUploadIndex = 0;\n\n    this.renderer = new RenderUploadFile({\n      parent,\n      input,\n      skipRequired,\n      translations\n    });\n    const filesContainer = this.renderer.container;\n\n    if (supportDropArea) {\n      this.initDropArea(filesContainer, input.accept);\n    }\n\n    if (initial) {\n      this.addInitialFiles(initial);\n    }\n\n    this.checkDropHint();\n\n    input.addEventListener(\"change\", this.onChange);\n    filesContainer.addEventListener(\"click\", this.handleClick);\n  }\n\n  addInitialFiles(initialFiles: InitialFile[]): void {\n    if (initialFiles.length === 0) {\n      return;\n    }\n\n    const { multiple, renderer } = this;\n\n    const addInitialFile = (initialFile: InitialFile): void => {\n      const { size } = initialFile;\n      const name =\n        initialFile.type === \"s3\" && initialFile.original_name\n          ? initialFile.original_name\n          : initialFile.name;\n\n      const element = renderer.addUploadedFile(\n        name,\n        this.nextUploadIndex,\n        size\n      );\n\n      const upload = createUploadedFile({\n        csrfToken: this.csrfToken,\n        initialFile,\n        uploadIndex: this.nextUploadIndex,\n        uploadUrl: this.uploadUrl\n      });\n      this.uploads.push(upload);\n\n      this.emitEvent(\"addUpload\", element, upload);\n    };\n\n    if (multiple) {\n      initialFiles.forEach((file: InitialFile): void => {\n        addInitialFile(file);\n        this.nextUploadIndex += 1;\n      });\n    } else {\n      const initialFile = initialFiles[0];\n\n      if (initialFile) {\n        addInitialFile(initialFile);\n      }\n    }\n  }\n\n  uploadFiles = async (files: File[]): Promise<void> => {\n    if (files.length === 0) {\n      return;\n    }\n\n    if (!this.multiple) {\n      for (const upload of this.uploads) {\n        this.renderer.deleteFile(upload.uploadIndex);\n      }\n\n      this.uploads = [];\n      const file = files[0];\n\n      if (file) {\n        await this.uploadFile(file);\n      }\n    } else {\n      for await (const file of files) {\n        await this.uploadFile(file);\n      }\n    }\n\n    this.checkDropHint();\n  };\n\n  async uploadFile(file: File): Promise<void> {\n    const createUpload = (): S3Upload | TusUpload => {\n      const { csrfToken, s3UploadDir } = this;\n\n      if (s3UploadDir != null) {\n        return new S3Upload({\n          csrfToken,\n          endpoint: uploadUrl,\n          file,\n          s3UploadDir,\n          uploadIndex: newUploadIndex\n        });\n      } else {\n        return new TusUpload({\n          chunkSize: this.chunkSize,\n          csrfToken: this.csrfToken,\n          fieldName,\n          file,\n          formId,\n          retryDelays: this.retryDelays,\n          uploadIndex: newUploadIndex,\n          uploadUrl\n        });\n      }\n    };\n\n    const { fieldName, formId, renderer, uploadUrl } = this;\n    const fileName = file.name;\n    const existingUpload = this.findUploadByName(fileName);\n    const newUploadIndex = existingUpload\n      ? existingUpload.uploadIndex\n      : this.nextUploadIndex;\n\n    if (!existingUpload) {\n      this.nextUploadIndex += 1;\n    }\n\n    if (existingUpload) {\n      await this.removeExistingUpload(existingUpload);\n    }\n\n    const upload = createUpload();\n\n    upload.onError = error => this.handleError(upload, error);\n    upload.onProgress = (bytesUploaded, bytesTotal) =>\n      this.handleProgress(upload, bytesUploaded, bytesTotal);\n    upload.onSuccess = () => this.handleSuccess(upload);\n    upload.start();\n\n    this.uploads.push(upload);\n\n    const element = renderer.addNewUpload(fileName, newUploadIndex);\n    this.emitEvent(\"addUpload\", element, upload);\n  }\n\n  getUploadByIndex(uploadIndex: number): BaseUpload | undefined {\n    return this.uploads.find(upload => upload.uploadIndex === uploadIndex);\n  }\n\n  findUploadByName(fileName: string): BaseUpload | undefined {\n    return this.uploads.find(upload => upload.name === fileName);\n  }\n\n  async removeExistingUpload(upload: BaseUpload): Promise<void> {\n    const element = this.renderer.findFileDiv(upload.uploadIndex);\n\n    if (element) {\n      this.emitEvent(\"removeUpload\", element, upload);\n    }\n\n    if (upload.status === \"uploading\") {\n      this.renderer.disableCancel(upload.uploadIndex);\n      await upload.abort();\n    } else if (upload.status === \"done\") {\n      this.renderer.disableDelete(upload.uploadIndex);\n\n      try {\n        await upload.delete();\n      } catch {\n        this.renderer.setDeleteFailed(upload.uploadIndex);\n        return;\n      }\n    }\n\n    this.removeUploadFromList(upload);\n    this.updatePlaceholderInput();\n  }\n\n  onChange = (e: Event): void => {\n    const files = (e.target as HTMLInputElement).files || ([] as File[]);\n    const acceptedFiles: File[] = [];\n    const invalidFiles: File[] = [];\n\n    for (const file of files) {\n      if (this.acceptedFileTypes.isAccepted(file.name)) {\n        acceptedFiles.push(file);\n      } else {\n        invalidFiles.push(file);\n      }\n    }\n\n    if (invalidFiles) {\n      this.handleInvalidFiles([...invalidFiles]);\n    }\n\n    if (acceptedFiles) {\n      void this.uploadFiles([...acceptedFiles]);\n    }\n\n    this.renderer.clearInput();\n  };\n\n  handleInvalidFiles = (files: File[]): void => {\n    this.renderer.setErrorInvalidFiles(files);\n  };\n\n  handleClick = (e: Event): void => {\n    const target = e.target as HTMLElement;\n\n    const getUpload = (): BaseUpload | undefined => {\n      const dataIndex = target.getAttribute(\"data-index\");\n\n      if (!dataIndex) {\n        return undefined;\n      }\n\n      const uploadIndex = parseInt(dataIndex, 10);\n      return this.getUploadByIndex(uploadIndex);\n    };\n\n    if (\n      target.classList.contains(\"dff-delete\") &&\n      !target.classList.contains(\"dff-disabled\")\n    ) {\n      e.preventDefault();\n\n      const upload = getUpload();\n\n      if (upload) {\n        void this.removeExistingUpload(upload);\n      }\n    } else if (target.classList.contains(\"dff-cancel\")) {\n      e.preventDefault();\n\n      const upload = getUpload();\n\n      if (upload) {\n        void this.handleCancel(upload);\n      }\n    } else if (target.classList.contains(\"dff-filename\")) {\n      e.preventDefault();\n\n      const upload = getUpload();\n\n      if (upload?.status === \"done\" && this.callbacks.onClick) {\n        this.callbacks.onClick({\n          fileName: upload.name,\n          fieldName: this.fieldName,\n          id: upload.getId(),\n          type: upload.type\n        });\n      }\n    }\n  };\n\n  handleProgress = (\n    upload: BaseUpload,\n    bytesUploaded: number,\n    bytesTotal: number\n  ): void => {\n    const percentage = ((bytesUploaded / bytesTotal) * 100).toFixed(2);\n\n    this.renderer.updateProgress(upload.uploadIndex, percentage);\n\n    const { onProgress } = this.callbacks;\n\n    if (onProgress) {\n      if (upload instanceof TusUpload) {\n        onProgress(bytesUploaded, bytesTotal, upload);\n      }\n    }\n  };\n\n  handleError = (upload: BaseUpload, error: Error): void => {\n    this.renderer.setError(upload.uploadIndex);\n    upload.status = \"error\";\n\n    const { onError } = this.callbacks;\n\n    if (onError) {\n      if (upload instanceof TusUpload) {\n        onError(error, upload);\n      }\n    }\n  };\n\n  handleSuccess = (upload: BaseUpload): void => {\n    const { renderer } = this;\n\n    this.updatePlaceholderInput();\n\n    renderer.clearInput();\n    renderer.setSuccess(upload.uploadIndex, upload.getSize());\n    upload.status = \"done\";\n\n    const { onSuccess } = this.callbacks;\n\n    const element = this.renderer.findFileDiv(\n      upload.uploadIndex\n    ) as HTMLElement;\n    this.emitEvent(\"uploadComplete\", element, upload);\n\n    if (onSuccess && upload.type === \"tus\") {\n      onSuccess(upload);\n    }\n  };\n\n  removeUploadFromList(upload: BaseUpload): void {\n    this.renderer.deleteFile(upload.uploadIndex);\n\n    const index = this.uploads.indexOf(upload);\n\n    if (index >= 0) {\n      this.uploads.splice(index, 1);\n    }\n\n    this.checkDropHint();\n\n    const { onDelete } = this.callbacks;\n\n    if (onDelete) {\n      onDelete(upload);\n    }\n  }\n\n  async handleCancel(upload: BaseUpload): Promise<void> {\n    this.renderer.disableCancel(upload.uploadIndex);\n    await upload.abort();\n    this.removeUploadFromList(upload);\n  }\n\n  initDropArea(container: Element, inputAccept: string): void {\n    new DropArea({\n      container,\n      inputAccept,\n      onUploadFiles: this.uploadFiles,\n      renderer: this.renderer\n    });\n  }\n\n  checkDropHint(): void {\n    if (!this.supportDropArea) {\n      return;\n    }\n\n    const nonEmptyUploads = this.uploads.filter(e => e);\n\n    if (nonEmptyUploads.length === 0) {\n      this.renderer.renderDropHint();\n    } else {\n      this.renderer.removeDropHint();\n    }\n  }\n\n  updatePlaceholderInput(): void {\n    const input = findInput(\n      this.form,\n      getUploadsFieldName(this.fieldName, this.prefix),\n      this.prefix\n    );\n    if (!input) {\n      return;\n    }\n\n    const placeholdersInfo: InitialFile[] = this.uploads.map(upload =>\n      upload.getInitialFile()\n    );\n\n    input.value = JSON.stringify(placeholdersInfo);\n  }\n\n  getMetaDataField(): HTMLElement | null {\n    return findInput(\n      this.form,\n      getMetadataFieldName(this.fieldName, this.prefix),\n      this.prefix\n    );\n  }\n\n  emitEvent(eventName: string, element: HTMLElement, upload: BaseUpload): void {\n    if (this.eventEmitter) {\n      this.eventEmitter.emit(eventName, {\n        element,\n        fieldName: this.fieldName,\n        fileName: upload.name,\n        metaDataField: this.getMetaDataField(),\n        upload\n      });\n    }\n  }\n}\n\nexport default FileField;\n","import EventEmitter from \"eventemitter3\";\nimport FileField, { Callbacks, Translations } from \"./file_field\";\nimport { InitialFile } from \"./uploads/base_upload\";\nimport {\n  findInput,\n  getInputValueForFormAndPrefix,\n  getUploadsFieldName\n} from \"./util\";\n\nexport interface Options {\n  callbacks?: Callbacks;\n  chunkSize?: number;\n  eventEmitter?: EventEmitter;\n  prefix?: string;\n  retryDelays?: number[];\n  skipRequired?: boolean;\n  supportDropArea?: boolean;\n}\n\nconst initUploadFields = (form: Element, options: Options = {}): void => {\n  const matchesPrefix = (fieldName: string): boolean => {\n    if (!(options && options.prefix)) {\n      return true;\n    }\n\n    return fieldName.startsWith(`${options.prefix}-`);\n  };\n\n  const getPrefix = (): string | null =>\n    options && options.prefix ? options.prefix : null;\n\n  const getInputValue = (fieldName: string): string | undefined =>\n    getInputValueForFormAndPrefix(form, fieldName, getPrefix());\n\n  const getInitialFiles = (fieldName: string): InitialFile[] => {\n    const data = getInputValue(getUploadsFieldName(fieldName, getPrefix()));\n\n    if (!data) {\n      return [];\n    }\n\n    return JSON.parse(data) as InitialFile[];\n  };\n\n  const uploadUrl = getInputValue(\"upload_url\");\n  const formId = getInputValue(\"form_id\");\n  const s3UploadDir = getInputValue(\"s3_upload_dir\");\n  const skipRequired = options.skipRequired || false;\n  const prefix = getPrefix();\n  const csrfToken = findInput(form, \"csrfmiddlewaretoken\", null)?.value;\n\n  if (!csrfToken) {\n    throw Error(\"Csrf token not found\");\n  }\n\n  if (!formId || !uploadUrl) {\n    return;\n  }\n\n  form.querySelectorAll(\".dff-uploader\").forEach(uploaderDiv => {\n    const container = uploaderDiv.querySelector(\n      \".dff-container\"\n    ) as HTMLElement;\n\n    if (!container) {\n      return;\n    }\n\n    const input = container.querySelector(\n      \"input[type=file]\"\n    ) as HTMLInputElement;\n\n    if (!(input && matchesPrefix(input.name))) {\n      return;\n    }\n\n    const fieldName = input.name;\n    const { multiple } = input;\n    const initial = getInitialFiles(fieldName);\n    const dataTranslations = container.getAttribute(\"data-translations\");\n    const translations: Translations = dataTranslations\n      ? (JSON.parse(dataTranslations) as Translations)\n      : {};\n    const supportDropArea = !(options.supportDropArea === false);\n\n    new FileField({\n      callbacks: options.callbacks || {},\n      chunkSize: options.chunkSize || 2621440,\n      csrfToken,\n      eventEmitter: options.eventEmitter,\n      fieldName,\n      form,\n      formId,\n      s3UploadDir: s3UploadDir || null,\n      initial,\n      input,\n      multiple,\n      parent: container,\n      prefix,\n      retryDelays: options.retryDelays || null,\n      skipRequired,\n      supportDropArea,\n      translations,\n      uploadUrl\n    });\n  });\n};\n\nexport default initUploadFields;\n","import autoInitFileForms from \"./auto_init_file_forms\";\nimport initFormSet from \"./init_form_set\";\nimport initUploadFields from \"./init_upload_fields\";\n\ndeclare const window: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n\nwindow.autoInitFileForms = autoInitFileForms; // eslint-disable-line  @typescript-eslint/no-unsafe-member-access\nwindow.initFormSet = initFormSet; // eslint-disable-line  @typescript-eslint/no-unsafe-member-access\nwindow.initUploadFields = initUploadFields; // eslint-disable-line  @typescript-eslint/no-unsafe-member-access\n","import initUploadFields, { Options } from \"./init_upload_fields\";\nimport { getInputNameWithPrefix, getInputValueForFormAndPrefix } from \"./util\";\n\nconst initFormSet = (form: Element, optionsParam: Options | string): void => {\n  let options: Options;\n\n  if (typeof optionsParam === \"string\") {\n    options = { prefix: optionsParam };\n  } else {\n    options = optionsParam;\n  }\n\n  const prefix = options.prefix || \"form\";\n\n  const totalFormsValue = getInputValueForFormAndPrefix(\n    form,\n    \"TOTAL_FORMS\",\n    prefix\n  );\n\n  if (!totalFormsValue) {\n    return;\n  }\n\n  const formCount = parseInt(totalFormsValue, 10);\n\n  for (let i = 0; i < formCount; i += 1) {\n    const subFormPrefix = getInputNameWithPrefix(`${i}`, null);\n    initUploadFields(form, {\n      ...options,\n      prefix: `${prefix}-${subFormPrefix}`\n    });\n  }\n};\n\nexport default initFormSet;\n"],"names":["findForm","element","parent","parentElement","tagName","_typeof","o","Symbol","iterator","constructor","prototype","toPropertyKey","t","i","r","e","toPrimitive","call","TypeError","String","Number","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","getInputNameWithPrefix","fieldName","prefix","getInputNameWithoutPrefix","slice","length","findInput","form","inputNameWithPrefix","input","querySelector","getUploadsFieldName","getInputValueForFormAndPrefix","matchHtmlRegExp","escapeHtml_1","string","escape","str","match","exec","html","index","lastIndex","charCodeAt","substring","RenderUploadFile","_ref","skipRequired","translations","this","div","document","createElement","className","appendChild","container","createFilesContainer","errors","createErrorContainer","required","addNewUpload","filename","uploadIndex","addFile","progressSpan","innerSpan","cancelLink","innerHTML","Cancel","setAttribute","href","addUploadedFile","filesize","setSuccess","clearInput","deleteFile","findFileDiv","remove","disableCancel","cancelSpan","findCancelSpan","classList","add","disableDelete","deleteLink","findDeleteLink","removeDropHint","dropHint","renderDropHint","setDeleteFailed","setErrorMessage","enableDelete","setError","el","removeProgress","removeCancel","setErrorInvalidFiles","files","errorsMessages","file","msg","innerText","name","replaceChildren","size","fileSizeInfo","formatBytes","bytes","decimals","dm","Math","floor","log","parseFloat","toFixed","Delete","updateProgress","percentage","innerProgressSpan","style","width","nameSpan","message","originalMessageSpan","span","types","freeze","_Mime_extensionToType","_Mime_typeToExtension","_Mime_typeToExtensions","__classPrivateFieldGet","receiver","state","kind","f","has","get","WeakMap","mime","args","set","Map","arg","define","typeMap","force","type","extensions","entries","toLowerCase","map","ext","Set","allExtensions","first","extension","starred","startsWith","currentType","Error","getType","path","last","replace","hasPath","getExtension","split","trim","getAllExtensions","_freeze","values","_getTestState","standardTypes","WIN_SLASH","WIN_NO_SLASH","DOT_LITERAL","SLASH_LITERAL","QMARK","END_ANCHOR","START_ANCHOR","DOTS_SLASH","POSIX_CHARS","PLUS_LITERAL","QMARK_LITERAL","ONE_CHAR","NO_DOT","NO_DOTS","NO_DOT_SLASH","NO_DOTS_SLASH","QMARK_NO_DOT","STAR","SEP","WINDOWS_CHARS","constants","MAX_LENGTH","POSIX_REGEX_SOURCE","alnum","alpha","ascii","blank","cntrl","digit","graph","lower","print","punct","space","upper","word","xdigit","REGEX_BACKSLASH","REGEX_NON_SPECIAL_CHARS","REGEX_SPECIAL_CHARS","REGEX_SPECIAL_CHARS_BACKREF","REGEX_SPECIAL_CHARS_GLOBAL","REGEX_REMOVE_BACKSLASH","REPLACEMENTS","CHAR_0","CHAR_9","CHAR_UPPERCASE_A","CHAR_LOWERCASE_A","CHAR_UPPERCASE_Z","CHAR_LOWERCASE_Z","CHAR_LEFT_PARENTHESES","CHAR_RIGHT_PARENTHESES","CHAR_ASTERISK","CHAR_AMPERSAND","CHAR_AT","CHAR_BACKWARD_SLASH","CHAR_CARRIAGE_RETURN","CHAR_CIRCUMFLEX_ACCENT","CHAR_COLON","CHAR_COMMA","CHAR_DOT","CHAR_DOUBLE_QUOTE","CHAR_EQUAL","CHAR_EXCLAMATION_MARK","CHAR_FORM_FEED","CHAR_FORWARD_SLASH","CHAR_GRAVE_ACCENT","CHAR_HASH","CHAR_HYPHEN_MINUS","CHAR_LEFT_ANGLE_BRACKET","CHAR_LEFT_CURLY_BRACE","CHAR_LEFT_SQUARE_BRACKET","CHAR_LINE_FEED","CHAR_NO_BREAK_SPACE","CHAR_PERCENT","CHAR_PLUS","CHAR_QUESTION_MARK","CHAR_RIGHT_ANGLE_BRACKET","CHAR_RIGHT_CURLY_BRACE","CHAR_RIGHT_SQUARE_BRACKET","CHAR_SEMICOLON","CHAR_SINGLE_QUOTE","CHAR_SPACE","CHAR_TAB","CHAR_UNDERSCORE","CHAR_VERTICAL_LINE","CHAR_ZERO_WIDTH_NOBREAK_SPACE","extglobChars","chars","open","close","globChars","win32","require$$0","exports","isObject","val","Array","isArray","hasRegexChars","test","isRegexChar","escapeRegex","toPosixSlashes","removeBackslashes","supportsLookbehinds","process","segs","version","escapeLast","char","lastIdx","idx","lastIndexOf","removePrefix","output","wrapOutput","options","contains","negated","basename","windows","utils","require$$1","isPathSeparator","code","depth","token","isPrefix","isGlobstar","Infinity","scan_1","opts","scanToEnd","parts","slashes","tokens","prev","start","isBrace","isBracket","isGlob","isExtglob","braceEscaped","backslashes","negatedExtglob","finished","braces","eos","advance","next","noext","nonegate","noparen","push","base","glob","unescape","maxDepth","prevIndex","n","expandRange","sort","join","RegExp","ex","v","syntaxError","parse","max","maxLength","min","len","SyntaxError","bos","prepend","capture","PLATFORM_CHARS","EXTGLOB_CHARS","globstar","dot","nodot","qmarkNoDot","star","bash","noextglob","consumed","backtrack","brackets","parens","quotes","extglobs","stack","peek","remaining","consume","num","append","negate","count","increment","decrement","pop","tok","extglob","inner","extglobOpen","conditions","extglobClose","rest","extglobStar","includes","expression","fastpaths","m","esc","repeat","posix","pre","indexOf","keepQuotes","strictBrackets","nobracket","prevValue","literalBrackets","escaped","nobrace","outputIndex","tokensIndex","brace","dots","arr","range","unshift","comma","out","toks","regex","noglobstar","prior","before","isStart","afterStar","after","strictSlashes","end","suffix","slashDot","create","source","scan","require$$2","require$$3","picomatch","returnState","fns","arrayMatcher","isMatch","isState","compileRe","makeRe","isIgnored","ignore","ignoreOpts","onMatch","onResult","matcher","returnObject","result","onIgnore","format","matchBase","Boolean","picomatch$1","patterns","pattern","p","returnOutput","toRegex","parsed","flags","nocase","err","debug","AcceptedFileTypes","inputAccept","mimeTypes","mimeType","filter","forEach","fileType","parseInputAccept","isAccepted","fileName","isMimeTypeAccepted","isExtensionAccepted","getEntriesFromDirectory","async","Promise","resolve","reject","directoryEntry","createReader","readEntries","getFileFromFileEntry","fileEntry","getFilesFromFileSystemEntries","entry","isFile","isDirectory","entriesFromDirectory","DropArea","onUploadFiles","renderer","dragEvent","preventDefault","stopPropagation","dataTransfer","items","item","webkitGetAsEntry","getFilesFromDataTransfer","acceptedFiles","invalidFiles","acceptedFileTypes","error","console","uploadFiles","addEventListener","onDrop","BaseUpload$1","status","abort","delete","urlJoin","strArray","resultArray","shift","component","normalize","arguments","splice","S3Upload","BaseUpload","csrfToken","endpoint","s3UploadDir","super","uploadId","createdPromise","chunks","chunkState","uploading","onError","undefined","onProgress","onSuccess","initChunks","catch","xhr","encodeURIComponent","uploadIdEnc","headers","Headers","url","urljoin","fetch","method","then","response","json","abortMultipartUpload","getId","getInitialFile","id","original_name","getSize","createUpload","desiredChunkSize","ceil","minChunkSize","chunkSize","uploaded","busy","done","_ref3","accept","body","JSON","stringify","contentType","data","createMultipartUpload","uploadParts","handleError","need","every","completeUpload","candidates","uploadPart","_ref4","number","prepareUploadPart","_ref2","uploadPartBytes","onPartProgress","sent","totalUploaded","reduce","c","onPartComplete","etag","part","PartNumber","ETag","XMLHttpRequest","responseType","upload","ev","lengthComputable","loaded","target","getResponseHeader","send","a","b","completeMultipartUpload","deleteUpload","onload","setRequestHeader","BaseUploadedFile","PlaceholderFile","initialFile","UploadedS3File","ExistingFile","UploadedTusFile","uploadUrl","_hasbtoa","btoa","_hasBuffer","Buffer","_TE","TextDecoder","TextEncoder","b64chs","_fromCC","tab","fromCharCode","bind","_mkUriSafe","Uint8Array","from","src","m0","btoaPolyfill","bin","u32","c0","c1","c2","asc","pad","_btoa","toString","_fromUint8Array","u8a","strs","l","apply","subarray","cb_utob","cc","re_utob","utob","u","_encode","s","encode","urlsafe","gBase64","hasOwnProperty","decode","decodeURIComponent","querystringify$1","pairs","isNaN","query","parser","port","protocol","qs","controlOrWhitespace","CRHTLF","protocolre","windowsDriveLetter","trimLeft","rules","address","isSpecial","NaN","hash","lolcation","loc","location","window","global","self","finaldestination","Url","pathname","scheme","extractProtocol","forwardSlashes","otherSlashes","slashesCount","relative","extracted","instruction","instructions","charAt","concat","up","host","hostname","username","password","auth","origin","fn","ins","DetailedError","causingErr","req","res","originalRequest","originalResponse","causingError","requestId","getHeader","getMethod","getURL","getStatus","getBody","defaultOptions","metadata","fingerprint","uploadSize","onChunkComplete","onUploadUrlAvailable","overridePatchMethod","addRequestId","onBeforeRequest","onAfterResponse","onShouldRetry","defaultOnShouldRetry","retryDelays","parallelUploads","parallelUploadBoundaries","storeFingerprintForResuming","removeFingerprintOnSuccess","uploadLengthDeferred","uploadDataDuringCreation","urlStorage","fileReader","httpStack","_urlStorage","_req","_fingerprint","_urlStorageKey","_offset","_aborted","_size","_source","_retryAttempt","_retryTimeout","_offsetBeforeRetry","_parallelUploads","_parallelUploadUrls","terminate","openRequest","sendRequest","shouldRetry","delay","remainingDelays","newOptions","setTimeout","findPreviousUploads","findUploadsByFingerprint","resumeFromPreviousUpload","previousUpload","parallelUploadUrls","urlStorageKey","_emitError","optionName","openFile","_startParallelUpload","_startSingleUpload","totalSize","totalProgress","partCount","partSize","splitSizeIntoParts","uploads","lastPartProgress","newPartProgress","_emitProgress","_saveUploadInUrlStorage","all","_openRequest","setHeader","encodeMetadata","_sendRequest","inStatusCategory","_emitHttpError","resolveUrl","_emitSuccess","_resumeUpload","_createUpload","shouldTerminate","clearTimeout","_removeFromUrlStorage","bytesSent","bytesTotal","_emitChunkComplete","bytesAccepted","promise","_addChunkToRequest","_handleUploadResponse","_performUpload","offset","parseInt","setProgressHandler","valueSize","newSize","removeUpload","storedUpload","creationTime","Date","addUpload","Base64","category","createRequest","random","retryAttempt","online","navigator","onLine","isOnline","link","URL","hasStorage","originalValue","localStorage","getItem","setItem","removeItem","SECURITY_ERR","QUOTA_EXCEEDED_ERR","canStoreURLs","Request","_xhr","_method","_url","_headers","header","progressHandler","onprogress","Response","onerror","getUnderlyingObject","responseText","isReactNative","product","FileSource","_file","PhoneGap","Cordova","cordova","chunk","reader","FileReader","readAsArrayBuffer","blobOrArray","StreamSource","_buffer","_bufferOffset","_reader","_done","_readUntilEnoughDataOrDone","hasEnoughData","_getDataFromBuffer","read","Blob","hasAllDataBeenRead","cancel","getName","uri","blob","isFinite","findAllUploads","results","_findEntries","round","listAllUploads","exifHash","exif","hashCode","reactNativeFingerprint","lastModified","Upload","TusUpload","formId","bytesUploaded","request","_request","resourceId","handleAfterReponse","addCsrTokenToRequest","handleProgress","handleSucces","FileField","callbacks","eventEmitter","initial","multiple","supportDropArea","uploadFile","checkDropHint","handleInvalidFiles","getUpload","dataIndex","getAttribute","getUploadByIndex","removeExistingUpload","handleCancel","onClick","updatePlaceholderInput","emitEvent","disabled","nextUploadIndex","filesContainer","initDropArea","addInitialFiles","onChange","handleClick","initialFiles","addInitialFile","createUploadedFile","existingUpload","findUploadByName","newUploadIndex","handleSuccess","find","removeUploadFromList","onDelete","placeholdersInfo","getMetaDataField","getMetadataFieldName","eventName","emit","metaDataField","initUploadFields","getPrefix","getInputValue","querySelectorAll","uploaderDiv","matchesPrefix","getInitialFiles","dataTranslations","autoInitFileForms","initFormSet","optionsParam","totalFormsValue","formCount","subFormPrefix"],"mappings":"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","x_google_ignoreList":[1,2,3,4,6,8,9,10,11,12,13,14,15,19,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42]}