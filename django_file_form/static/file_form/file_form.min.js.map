{"version":3,"file":"file_form.min.js","sources":["../../../frontend/src/auto_init_file_forms.ts","../../../frontend/node_modules/@babel/runtime/helpers/esm/typeof.js","../../../frontend/node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../../../frontend/node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../../../frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../frontend/src/util.ts","../../../frontend/node_modules/escape-html/index.js","../../../frontend/src/render_upload_file.ts","../../../frontend/node_modules/mime/Mime.js","../../../frontend/node_modules/mime/lite.js","../../../frontend/node_modules/mime/types/standard.js","../../../frontend/node_modules/picomatch/lib/path.js","../../../frontend/node_modules/picomatch/lib/constants.js","../../../frontend/node_modules/picomatch/lib/utils.js","../../../frontend/node_modules/picomatch/lib/scan.js","../../../frontend/node_modules/picomatch/lib/parse.js","../../../frontend/node_modules/picomatch/lib/picomatch.js","../../../frontend/src/accepted_file_types.ts","../../../frontend/src/drop_area.ts","../../../frontend/src/uploads/base_upload.ts","../../../frontend/node_modules/url-join/lib/url-join.js","../../../frontend/src/uploads/s3_utils.ts","../../../frontend/src/uploads/s3_upload.ts","../../../frontend/src/uploads/tus_utils.ts","../../../frontend/src/uploads/uploaded_file.ts","../../../frontend/node_modules/js-base64/base64.mjs","../../../frontend/node_modules/requires-port/index.js","../../../frontend/node_modules/querystringify/index.js","../../../frontend/node_modules/url-parse/index.js","../../../frontend/node_modules/tus-js-client/lib/error.js","../../../frontend/node_modules/tus-js-client/lib/upload.js","../../../frontend/node_modules/tus-js-client/lib/uuid.js","../../../frontend/node_modules/tus-js-client/lib/browser/urlStorage.js","../../../frontend/node_modules/tus-js-client/lib/browser/httpStack.js","../../../frontend/node_modules/tus-js-client/lib/browser/isReactNative.js","../../../frontend/node_modules/tus-js-client/lib/browser/sources/FileSource.js","../../../frontend/node_modules/tus-js-client/lib/browser/sources/isCordova.js","../../../frontend/node_modules/tus-js-client/lib/browser/sources/readAsByteArray.js","../../../frontend/node_modules/tus-js-client/lib/browser/sources/StreamSource.js","../../../frontend/node_modules/tus-js-client/lib/browser/index.js","../../../frontend/node_modules/tus-js-client/lib/browser/fileReader.js","../../../frontend/node_modules/tus-js-client/lib/browser/uriToBlob.js","../../../frontend/node_modules/tus-js-client/lib/noopUrlStorage.js","../../../frontend/node_modules/tus-js-client/lib/browser/fileSignature.js","../../../frontend/src/uploads/tus_upload.ts","../../../frontend/src/file_field.ts","../../../frontend/src/init_upload_fields.ts","../../../frontend/src/file_form.ts","../../../frontend/src/init_form_set.ts"],"sourcesContent":["const findForm = (element: Element): HTMLElement | null => {\n  const parent = element.parentElement;\n\n  if (!parent) {\n    return null;\n  }\n\n  if (parent.tagName === \"FORM\") {\n    return parent;\n  }\n\n  return findForm(parent);\n};\n\nconst unique = (values: unknown[]): unknown[] =>\n  Array.from(new Set(values).values());\n\ndeclare const window: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n\nconst autoInitFileForms = (): void => {\n  const initUploadFields = window.initUploadFields as () => void; // eslint-disable-line  @typescript-eslint/no-unsafe-member-access\n\n  const forms = unique(\n    Array.from(document.querySelectorAll(\".dff-uploader\")).map(findForm)\n  );\n  forms.forEach(initUploadFields);\n};\n\nexport default autoInitFileForms;\n","export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","export const formatBytes = (bytes: number, decimals: number): string => {\n  if (bytes === 0) {\n    return \"0 Bytes\";\n  }\n\n  const k = 1024;\n  const dm = decimals <= 0 ? 0 : decimals || 2;\n  const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\"];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  const n = parseFloat((bytes / k ** i).toFixed(dm));\n  const size = sizes[i];\n\n  return `${n} ${size}`;\n};\n\nexport const getInputNameWithPrefix = (\n  fieldName: string,\n  prefix: string | null\n): string => (prefix ? `${prefix}-${fieldName}` : fieldName);\n\nconst getInputNameWithoutPrefix = (\n  fieldName: string,\n  prefix: string | null\n): string => (prefix ? fieldName.slice(prefix.length + 1) : fieldName);\n\nexport const findInput = (\n  form: Element,\n  fieldName: string,\n  prefix: string | null\n): HTMLInputElement | null => {\n  const inputNameWithPrefix = getInputNameWithPrefix(fieldName, prefix);\n  const input = form.querySelector(`[name=\"${inputNameWithPrefix}\"]`);\n\n  if (!input) {\n    return null;\n  }\n\n  return input as HTMLInputElement;\n};\n\nexport const getUploadsFieldName = (\n  fieldName: string,\n  prefix: string | null\n): string => `${getInputNameWithoutPrefix(fieldName, prefix)}-uploads`;\n\nexport const getInputValueForFormAndPrefix = (\n  form: Element,\n  fieldName: string,\n  prefix: string | null\n): string | undefined => findInput(form, fieldName, prefix)?.value;\n\nexport const getMetadataFieldName = (\n  fieldName: string,\n  prefix: string | null\n): string => `${getInputNameWithoutPrefix(fieldName, prefix)}-metadata`;\n","/*!\n * escape-html\n * Copyright(c) 2012-2013 TJ Holowaychuk\n * Copyright(c) 2015 Andreas Lubbe\n * Copyright(c) 2015 Tiancheng \"Timothy\" Gu\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = escapeHtml;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#39;';\n        break;\n      case 60: // <\n        escape = '&lt;';\n        break;\n      case 62: // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex, index)\n    : html;\n}\n","import escape from \"escape-html\";\nimport { formatBytes } from \"./util\";\n\nclass RenderUploadFile {\n  container: Element;\n  input: HTMLInputElement;\n  translations: { [key: string]: string };\n  errors: Element;\n\n  constructor({\n    parent,\n    input,\n    skipRequired,\n    translations\n  }: {\n    parent: Element;\n    input: HTMLInputElement;\n    skipRequired: boolean;\n    translations: { [key: string]: string };\n  }) {\n    this.container = this.createFilesContainer(parent);\n    this.errors = this.createErrorContainer(parent);\n    this.input = input;\n    this.translations = translations;\n\n    if (skipRequired) {\n      this.input.required = false;\n    }\n  }\n\n  public addNewUpload(filename: string, uploadIndex: number): HTMLElement {\n    const div = this.addFile(filename, uploadIndex);\n\n    const progressSpan = document.createElement(\"span\");\n    progressSpan.className = \"dff-progress\";\n\n    const innerSpan = document.createElement(\"span\");\n    innerSpan.className = \"dff-progress-inner\";\n\n    progressSpan.appendChild(innerSpan);\n    div.appendChild(progressSpan);\n\n    const cancelLink = document.createElement(\"a\");\n    cancelLink.className = \"dff-cancel\";\n    cancelLink.innerHTML = this.translations.Cancel || \"\";\n    cancelLink.setAttribute(\"data-index\", `${uploadIndex}`);\n    cancelLink.href = \"#\";\n    div.appendChild(cancelLink);\n\n    return div;\n  }\n\n  public addUploadedFile(\n    filename: string,\n    uploadIndex: number,\n    filesize?: number\n  ): HTMLElement {\n    const element = this.addFile(filename, uploadIndex);\n    this.setSuccess(uploadIndex, filesize);\n    return element;\n  }\n\n  public clearInput(): void {\n    const { input } = this;\n\n    input.value = \"\";\n  }\n\n  public deleteFile(index: number): void {\n    const div = this.findFileDiv(index);\n\n    if (div) {\n      div.remove();\n    }\n  }\n\n  public disableCancel(index: number): void {\n    const cancelSpan = this.findCancelSpan(index);\n\n    if (cancelSpan) {\n      cancelSpan.classList.add(\"dff-disabled\");\n    }\n  }\n\n  public disableDelete(index: number): void {\n    const deleteLink = this.findDeleteLink(index);\n\n    if (deleteLink) {\n      deleteLink.classList.add(\"dff-disabled\");\n    }\n  }\n\n  public findFileDiv(index: number): HTMLElement | null {\n    return this.container.querySelector(`.dff-file-id-${index}`);\n  }\n\n  public removeDropHint(): void {\n    const dropHint = this.container.querySelector(\".dff-drop-hint\");\n\n    if (dropHint) {\n      dropHint.remove();\n    }\n  }\n\n  public renderDropHint(): void {\n    if (this.container.querySelector(\".dff-drop-hint\")) {\n      return;\n    }\n\n    const dropHint = document.createElement(\"div\");\n    dropHint.className = \"dff-drop-hint\";\n    dropHint.innerHTML = this.translations[\"Drop your files here\"] || \"\";\n\n    this.container.appendChild(dropHint);\n  }\n\n  public setDeleteFailed(index: number): void {\n    this.setErrorMessage(index, this.translations[\"Delete failed\"] || \"\");\n\n    this.enableDelete(index);\n  }\n\n  public setError(index: number): void {\n    this.setErrorMessage(index, this.translations[\"Upload failed\"] || \"\");\n\n    const el = this.findFileDiv(index);\n    if (el) {\n      el.classList.add(\"dff-upload-fail\");\n    }\n\n    this.removeProgress(index);\n    this.removeCancel(index);\n  }\n\n  public setErrorInvalidFiles(files: File[]): void {\n    const errorsMessages = document.createElement(\"ul\");\n\n    for (const file of files) {\n      const msg = document.createElement(\"li\");\n      msg.innerText = `${file.name}: ${this.translations[\"Invalid file type\"]}`;\n      msg.className = \"dff-error\";\n      errorsMessages.appendChild(msg);\n    }\n\n    this.errors.replaceChildren(errorsMessages);\n    this.clearInput();\n  }\n\n  public setSuccess(index: number, size?: number): void {\n    const { translations } = this;\n\n    const el = this.findFileDiv(index);\n    if (el) {\n      el.classList.add(\"dff-upload-success\");\n\n      if (size != null) {\n        const fileSizeInfo = document.createElement(\"span\");\n        fileSizeInfo.innerHTML = formatBytes(size, 2);\n        fileSizeInfo.className = \"dff-filesize\";\n\n        el.appendChild(fileSizeInfo);\n      }\n\n      const deleteLink = document.createElement(\"a\");\n      deleteLink.innerHTML = translations.Delete || \"\";\n      deleteLink.className = \"dff-delete\";\n      deleteLink.setAttribute(\"data-index\", `${index}`);\n      deleteLink.href = \"#\";\n\n      el.appendChild(deleteLink);\n    }\n\n    this.removeProgress(index);\n    this.removeCancel(index);\n  }\n\n  public updateProgress(index: number, percentage: string): void {\n    const el = this.container.querySelector(`.dff-file-id-${index}`);\n    if (el) {\n      const innerProgressSpan = el.querySelector(\".dff-progress-inner\");\n\n      if (innerProgressSpan) {\n        (innerProgressSpan as HTMLElement).style.width = `${percentage}%`;\n      }\n    }\n  }\n\n  private createErrorContainer = (parent: Element): Element => {\n    const div = document.createElement(\"div\");\n    div.className = \"dff-invalid-files\";\n    parent.appendChild(div);\n    return div;\n  };\n\n  private createFilesContainer = (parent: Element): Element => {\n    const div = document.createElement(\"div\");\n    div.className = \"dff-files\";\n    parent.appendChild(div);\n\n    return div;\n  };\n\n  private addFile(filename: string, uploadIndex: number): HTMLElement {\n    const div = document.createElement(\"div\");\n    div.className = `dff-file dff-file-id-${uploadIndex}`;\n\n    const nameSpan = document.createElement(\"span\");\n    nameSpan.innerHTML = escape(filename);\n    nameSpan.className = \"dff-filename\";\n    nameSpan.setAttribute(\"data-index\", `${uploadIndex}`);\n\n    div.appendChild(nameSpan);\n    this.container.appendChild(div);\n\n    this.input.required = false;\n    return div;\n  }\n\n  private removeProgress(index: number): void {\n    const el = this.findFileDiv(index);\n\n    if (el) {\n      const progressSpan = el.querySelector(\".dff-progress\");\n\n      if (progressSpan) {\n        progressSpan.remove();\n      }\n    }\n  }\n\n  private removeCancel(index: number): void {\n    const cancelSpan = this.findCancelSpan(index);\n\n    if (cancelSpan) {\n      cancelSpan.remove();\n    }\n  }\n\n  private findCancelSpan(index: number): HTMLElement | null {\n    const el = this.findFileDiv(index);\n\n    if (!el) {\n      return null;\n    }\n\n    return el.querySelector<HTMLElement>(\".dff-cancel\");\n  }\n\n  private enableDelete(index: number): void {\n    const deleteLink = this.findDeleteLink(index);\n\n    if (deleteLink) {\n      deleteLink.classList.remove(\"dff-disabled\");\n    }\n  }\n\n  private findDeleteLink(index: number): HTMLElement | null {\n    const div = this.findFileDiv(index);\n    if (!div) {\n      return div;\n    }\n\n    return div.querySelector(\".dff-delete\");\n  }\n\n  private setErrorMessage(index: number, message: string): void {\n    const el = this.findFileDiv(index);\n    if (!el) {\n      return;\n    }\n\n    const originalMessageSpan = el.querySelector(\".dff-error\");\n    if (originalMessageSpan) {\n      originalMessageSpan.remove();\n    }\n\n    const span = document.createElement(\"span\");\n    span.classList.add(\"dff-error\");\n    span.innerHTML = message;\n\n    el.appendChild(span);\n  }\n}\n\nexport default RenderUploadFile;\n","'use strict';\n\n/**\n * @param typeMap [Object] Map of MIME type -> Array[extensions]\n * @param ...\n */\nfunction Mime() {\n  this._types = Object.create(null);\n  this._extensions = Object.create(null);\n\n  for (let i = 0; i < arguments.length; i++) {\n    this.define(arguments[i]);\n  }\n\n  this.define = this.define.bind(this);\n  this.getType = this.getType.bind(this);\n  this.getExtension = this.getExtension.bind(this);\n}\n\n/**\n * Define mimetype -> extension mappings.  Each key is a mime-type that maps\n * to an array of extensions associated with the type.  The first extension is\n * used as the default extension for the type.\n *\n * e.g. mime.define({'audio/ogg', ['oga', 'ogg', 'spx']});\n *\n * If a type declares an extension that has already been defined, an error will\n * be thrown.  To suppress this error and force the extension to be associated\n * with the new type, pass `force`=true.  Alternatively, you may prefix the\n * extension with \"*\" to map the type to extension, without mapping the\n * extension to the type.\n *\n * e.g. mime.define({'audio/wav', ['wav']}, {'audio/x-wav', ['*wav']});\n *\n *\n * @param map (Object) type definitions\n * @param force (Boolean) if true, force overriding of existing definitions\n */\nMime.prototype.define = function(typeMap, force) {\n  for (let type in typeMap) {\n    let extensions = typeMap[type].map(function(t) {\n      return t.toLowerCase();\n    });\n    type = type.toLowerCase();\n\n    for (let i = 0; i < extensions.length; i++) {\n      const ext = extensions[i];\n\n      // '*' prefix = not the preferred type for this extension.  So fixup the\n      // extension, and skip it.\n      if (ext[0] === '*') {\n        continue;\n      }\n\n      if (!force && (ext in this._types)) {\n        throw new Error(\n          'Attempt to change mapping for \"' + ext +\n          '\" extension from \"' + this._types[ext] + '\" to \"' + type +\n          '\". Pass `force=true` to allow this, otherwise remove \"' + ext +\n          '\" from the list of extensions for \"' + type + '\".'\n        );\n      }\n\n      this._types[ext] = type;\n    }\n\n    // Use first extension as default\n    if (force || !this._extensions[type]) {\n      const ext = extensions[0];\n      this._extensions[type] = (ext[0] !== '*') ? ext : ext.substr(1);\n    }\n  }\n};\n\n/**\n * Lookup a mime type based on extension\n */\nMime.prototype.getType = function(path) {\n  path = String(path);\n  let last = path.replace(/^.*[/\\\\]/, '').toLowerCase();\n  let ext = last.replace(/^.*\\./, '').toLowerCase();\n\n  let hasPath = last.length < path.length;\n  let hasDot = ext.length < last.length - 1;\n\n  return (hasDot || !hasPath) && this._types[ext] || null;\n};\n\n/**\n * Return file extension associated with a mime type\n */\nMime.prototype.getExtension = function(type) {\n  type = /^\\s*([^;\\s]*)/.test(type) && RegExp.$1;\n  return type && this._extensions[type.toLowerCase()] || null;\n};\n\nmodule.exports = Mime;\n","'use strict';\n\nlet Mime = require('./Mime');\nmodule.exports = new Mime(require('./types/standard'));\n","module.exports = {\"application/andrew-inset\":[\"ez\"],\"application/applixware\":[\"aw\"],\"application/atom+xml\":[\"atom\"],\"application/atomcat+xml\":[\"atomcat\"],\"application/atomdeleted+xml\":[\"atomdeleted\"],\"application/atomsvc+xml\":[\"atomsvc\"],\"application/atsc-dwd+xml\":[\"dwd\"],\"application/atsc-held+xml\":[\"held\"],\"application/atsc-rsat+xml\":[\"rsat\"],\"application/bdoc\":[\"bdoc\"],\"application/calendar+xml\":[\"xcs\"],\"application/ccxml+xml\":[\"ccxml\"],\"application/cdfx+xml\":[\"cdfx\"],\"application/cdmi-capability\":[\"cdmia\"],\"application/cdmi-container\":[\"cdmic\"],\"application/cdmi-domain\":[\"cdmid\"],\"application/cdmi-object\":[\"cdmio\"],\"application/cdmi-queue\":[\"cdmiq\"],\"application/cu-seeme\":[\"cu\"],\"application/dash+xml\":[\"mpd\"],\"application/davmount+xml\":[\"davmount\"],\"application/docbook+xml\":[\"dbk\"],\"application/dssc+der\":[\"dssc\"],\"application/dssc+xml\":[\"xdssc\"],\"application/ecmascript\":[\"es\",\"ecma\"],\"application/emma+xml\":[\"emma\"],\"application/emotionml+xml\":[\"emotionml\"],\"application/epub+zip\":[\"epub\"],\"application/exi\":[\"exi\"],\"application/express\":[\"exp\"],\"application/fdt+xml\":[\"fdt\"],\"application/font-tdpfr\":[\"pfr\"],\"application/geo+json\":[\"geojson\"],\"application/gml+xml\":[\"gml\"],\"application/gpx+xml\":[\"gpx\"],\"application/gxf\":[\"gxf\"],\"application/gzip\":[\"gz\"],\"application/hjson\":[\"hjson\"],\"application/hyperstudio\":[\"stk\"],\"application/inkml+xml\":[\"ink\",\"inkml\"],\"application/ipfix\":[\"ipfix\"],\"application/its+xml\":[\"its\"],\"application/java-archive\":[\"jar\",\"war\",\"ear\"],\"application/java-serialized-object\":[\"ser\"],\"application/java-vm\":[\"class\"],\"application/javascript\":[\"js\",\"mjs\"],\"application/json\":[\"json\",\"map\"],\"application/json5\":[\"json5\"],\"application/jsonml+json\":[\"jsonml\"],\"application/ld+json\":[\"jsonld\"],\"application/lgr+xml\":[\"lgr\"],\"application/lost+xml\":[\"lostxml\"],\"application/mac-binhex40\":[\"hqx\"],\"application/mac-compactpro\":[\"cpt\"],\"application/mads+xml\":[\"mads\"],\"application/manifest+json\":[\"webmanifest\"],\"application/marc\":[\"mrc\"],\"application/marcxml+xml\":[\"mrcx\"],\"application/mathematica\":[\"ma\",\"nb\",\"mb\"],\"application/mathml+xml\":[\"mathml\"],\"application/mbox\":[\"mbox\"],\"application/mediaservercontrol+xml\":[\"mscml\"],\"application/metalink+xml\":[\"metalink\"],\"application/metalink4+xml\":[\"meta4\"],\"application/mets+xml\":[\"mets\"],\"application/mmt-aei+xml\":[\"maei\"],\"application/mmt-usd+xml\":[\"musd\"],\"application/mods+xml\":[\"mods\"],\"application/mp21\":[\"m21\",\"mp21\"],\"application/mp4\":[\"mp4s\",\"m4p\"],\"application/msword\":[\"doc\",\"dot\"],\"application/mxf\":[\"mxf\"],\"application/n-quads\":[\"nq\"],\"application/n-triples\":[\"nt\"],\"application/node\":[\"cjs\"],\"application/octet-stream\":[\"bin\",\"dms\",\"lrf\",\"mar\",\"so\",\"dist\",\"distz\",\"pkg\",\"bpk\",\"dump\",\"elc\",\"deploy\",\"exe\",\"dll\",\"deb\",\"dmg\",\"iso\",\"img\",\"msi\",\"msp\",\"msm\",\"buffer\"],\"application/oda\":[\"oda\"],\"application/oebps-package+xml\":[\"opf\"],\"application/ogg\":[\"ogx\"],\"application/omdoc+xml\":[\"omdoc\"],\"application/onenote\":[\"onetoc\",\"onetoc2\",\"onetmp\",\"onepkg\"],\"application/oxps\":[\"oxps\"],\"application/p2p-overlay+xml\":[\"relo\"],\"application/patch-ops-error+xml\":[\"xer\"],\"application/pdf\":[\"pdf\"],\"application/pgp-encrypted\":[\"pgp\"],\"application/pgp-signature\":[\"asc\",\"sig\"],\"application/pics-rules\":[\"prf\"],\"application/pkcs10\":[\"p10\"],\"application/pkcs7-mime\":[\"p7m\",\"p7c\"],\"application/pkcs7-signature\":[\"p7s\"],\"application/pkcs8\":[\"p8\"],\"application/pkix-attr-cert\":[\"ac\"],\"application/pkix-cert\":[\"cer\"],\"application/pkix-crl\":[\"crl\"],\"application/pkix-pkipath\":[\"pkipath\"],\"application/pkixcmp\":[\"pki\"],\"application/pls+xml\":[\"pls\"],\"application/postscript\":[\"ai\",\"eps\",\"ps\"],\"application/provenance+xml\":[\"provx\"],\"application/pskc+xml\":[\"pskcxml\"],\"application/raml+yaml\":[\"raml\"],\"application/rdf+xml\":[\"rdf\",\"owl\"],\"application/reginfo+xml\":[\"rif\"],\"application/relax-ng-compact-syntax\":[\"rnc\"],\"application/resource-lists+xml\":[\"rl\"],\"application/resource-lists-diff+xml\":[\"rld\"],\"application/rls-services+xml\":[\"rs\"],\"application/route-apd+xml\":[\"rapd\"],\"application/route-s-tsid+xml\":[\"sls\"],\"application/route-usd+xml\":[\"rusd\"],\"application/rpki-ghostbusters\":[\"gbr\"],\"application/rpki-manifest\":[\"mft\"],\"application/rpki-roa\":[\"roa\"],\"application/rsd+xml\":[\"rsd\"],\"application/rss+xml\":[\"rss\"],\"application/rtf\":[\"rtf\"],\"application/sbml+xml\":[\"sbml\"],\"application/scvp-cv-request\":[\"scq\"],\"application/scvp-cv-response\":[\"scs\"],\"application/scvp-vp-request\":[\"spq\"],\"application/scvp-vp-response\":[\"spp\"],\"application/sdp\":[\"sdp\"],\"application/senml+xml\":[\"senmlx\"],\"application/sensml+xml\":[\"sensmlx\"],\"application/set-payment-initiation\":[\"setpay\"],\"application/set-registration-initiation\":[\"setreg\"],\"application/shf+xml\":[\"shf\"],\"application/sieve\":[\"siv\",\"sieve\"],\"application/smil+xml\":[\"smi\",\"smil\"],\"application/sparql-query\":[\"rq\"],\"application/sparql-results+xml\":[\"srx\"],\"application/srgs\":[\"gram\"],\"application/srgs+xml\":[\"grxml\"],\"application/sru+xml\":[\"sru\"],\"application/ssdl+xml\":[\"ssdl\"],\"application/ssml+xml\":[\"ssml\"],\"application/swid+xml\":[\"swidtag\"],\"application/tei+xml\":[\"tei\",\"teicorpus\"],\"application/thraud+xml\":[\"tfi\"],\"application/timestamped-data\":[\"tsd\"],\"application/toml\":[\"toml\"],\"application/trig\":[\"trig\"],\"application/ttml+xml\":[\"ttml\"],\"application/ubjson\":[\"ubj\"],\"application/urc-ressheet+xml\":[\"rsheet\"],\"application/urc-targetdesc+xml\":[\"td\"],\"application/voicexml+xml\":[\"vxml\"],\"application/wasm\":[\"wasm\"],\"application/widget\":[\"wgt\"],\"application/winhlp\":[\"hlp\"],\"application/wsdl+xml\":[\"wsdl\"],\"application/wspolicy+xml\":[\"wspolicy\"],\"application/xaml+xml\":[\"xaml\"],\"application/xcap-att+xml\":[\"xav\"],\"application/xcap-caps+xml\":[\"xca\"],\"application/xcap-diff+xml\":[\"xdf\"],\"application/xcap-el+xml\":[\"xel\"],\"application/xcap-ns+xml\":[\"xns\"],\"application/xenc+xml\":[\"xenc\"],\"application/xhtml+xml\":[\"xhtml\",\"xht\"],\"application/xliff+xml\":[\"xlf\"],\"application/xml\":[\"xml\",\"xsl\",\"xsd\",\"rng\"],\"application/xml-dtd\":[\"dtd\"],\"application/xop+xml\":[\"xop\"],\"application/xproc+xml\":[\"xpl\"],\"application/xslt+xml\":[\"*xsl\",\"xslt\"],\"application/xspf+xml\":[\"xspf\"],\"application/xv+xml\":[\"mxml\",\"xhvml\",\"xvml\",\"xvm\"],\"application/yang\":[\"yang\"],\"application/yin+xml\":[\"yin\"],\"application/zip\":[\"zip\"],\"audio/3gpp\":[\"*3gpp\"],\"audio/adpcm\":[\"adp\"],\"audio/amr\":[\"amr\"],\"audio/basic\":[\"au\",\"snd\"],\"audio/midi\":[\"mid\",\"midi\",\"kar\",\"rmi\"],\"audio/mobile-xmf\":[\"mxmf\"],\"audio/mp3\":[\"*mp3\"],\"audio/mp4\":[\"m4a\",\"mp4a\"],\"audio/mpeg\":[\"mpga\",\"mp2\",\"mp2a\",\"mp3\",\"m2a\",\"m3a\"],\"audio/ogg\":[\"oga\",\"ogg\",\"spx\",\"opus\"],\"audio/s3m\":[\"s3m\"],\"audio/silk\":[\"sil\"],\"audio/wav\":[\"wav\"],\"audio/wave\":[\"*wav\"],\"audio/webm\":[\"weba\"],\"audio/xm\":[\"xm\"],\"font/collection\":[\"ttc\"],\"font/otf\":[\"otf\"],\"font/ttf\":[\"ttf\"],\"font/woff\":[\"woff\"],\"font/woff2\":[\"woff2\"],\"image/aces\":[\"exr\"],\"image/apng\":[\"apng\"],\"image/avif\":[\"avif\"],\"image/bmp\":[\"bmp\"],\"image/cgm\":[\"cgm\"],\"image/dicom-rle\":[\"drle\"],\"image/emf\":[\"emf\"],\"image/fits\":[\"fits\"],\"image/g3fax\":[\"g3\"],\"image/gif\":[\"gif\"],\"image/heic\":[\"heic\"],\"image/heic-sequence\":[\"heics\"],\"image/heif\":[\"heif\"],\"image/heif-sequence\":[\"heifs\"],\"image/hej2k\":[\"hej2\"],\"image/hsj2\":[\"hsj2\"],\"image/ief\":[\"ief\"],\"image/jls\":[\"jls\"],\"image/jp2\":[\"jp2\",\"jpg2\"],\"image/jpeg\":[\"jpeg\",\"jpg\",\"jpe\"],\"image/jph\":[\"jph\"],\"image/jphc\":[\"jhc\"],\"image/jpm\":[\"jpm\"],\"image/jpx\":[\"jpx\",\"jpf\"],\"image/jxr\":[\"jxr\"],\"image/jxra\":[\"jxra\"],\"image/jxrs\":[\"jxrs\"],\"image/jxs\":[\"jxs\"],\"image/jxsc\":[\"jxsc\"],\"image/jxsi\":[\"jxsi\"],\"image/jxss\":[\"jxss\"],\"image/ktx\":[\"ktx\"],\"image/ktx2\":[\"ktx2\"],\"image/png\":[\"png\"],\"image/sgi\":[\"sgi\"],\"image/svg+xml\":[\"svg\",\"svgz\"],\"image/t38\":[\"t38\"],\"image/tiff\":[\"tif\",\"tiff\"],\"image/tiff-fx\":[\"tfx\"],\"image/webp\":[\"webp\"],\"image/wmf\":[\"wmf\"],\"message/disposition-notification\":[\"disposition-notification\"],\"message/global\":[\"u8msg\"],\"message/global-delivery-status\":[\"u8dsn\"],\"message/global-disposition-notification\":[\"u8mdn\"],\"message/global-headers\":[\"u8hdr\"],\"message/rfc822\":[\"eml\",\"mime\"],\"model/3mf\":[\"3mf\"],\"model/gltf+json\":[\"gltf\"],\"model/gltf-binary\":[\"glb\"],\"model/iges\":[\"igs\",\"iges\"],\"model/mesh\":[\"msh\",\"mesh\",\"silo\"],\"model/mtl\":[\"mtl\"],\"model/obj\":[\"obj\"],\"model/step+xml\":[\"stpx\"],\"model/step+zip\":[\"stpz\"],\"model/step-xml+zip\":[\"stpxz\"],\"model/stl\":[\"stl\"],\"model/vrml\":[\"wrl\",\"vrml\"],\"model/x3d+binary\":[\"*x3db\",\"x3dbz\"],\"model/x3d+fastinfoset\":[\"x3db\"],\"model/x3d+vrml\":[\"*x3dv\",\"x3dvz\"],\"model/x3d+xml\":[\"x3d\",\"x3dz\"],\"model/x3d-vrml\":[\"x3dv\"],\"text/cache-manifest\":[\"appcache\",\"manifest\"],\"text/calendar\":[\"ics\",\"ifb\"],\"text/coffeescript\":[\"coffee\",\"litcoffee\"],\"text/css\":[\"css\"],\"text/csv\":[\"csv\"],\"text/html\":[\"html\",\"htm\",\"shtml\"],\"text/jade\":[\"jade\"],\"text/jsx\":[\"jsx\"],\"text/less\":[\"less\"],\"text/markdown\":[\"markdown\",\"md\"],\"text/mathml\":[\"mml\"],\"text/mdx\":[\"mdx\"],\"text/n3\":[\"n3\"],\"text/plain\":[\"txt\",\"text\",\"conf\",\"def\",\"list\",\"log\",\"in\",\"ini\"],\"text/richtext\":[\"rtx\"],\"text/rtf\":[\"*rtf\"],\"text/sgml\":[\"sgml\",\"sgm\"],\"text/shex\":[\"shex\"],\"text/slim\":[\"slim\",\"slm\"],\"text/spdx\":[\"spdx\"],\"text/stylus\":[\"stylus\",\"styl\"],\"text/tab-separated-values\":[\"tsv\"],\"text/troff\":[\"t\",\"tr\",\"roff\",\"man\",\"me\",\"ms\"],\"text/turtle\":[\"ttl\"],\"text/uri-list\":[\"uri\",\"uris\",\"urls\"],\"text/vcard\":[\"vcard\"],\"text/vtt\":[\"vtt\"],\"text/xml\":[\"*xml\"],\"text/yaml\":[\"yaml\",\"yml\"],\"video/3gpp\":[\"3gp\",\"3gpp\"],\"video/3gpp2\":[\"3g2\"],\"video/h261\":[\"h261\"],\"video/h263\":[\"h263\"],\"video/h264\":[\"h264\"],\"video/iso.segment\":[\"m4s\"],\"video/jpeg\":[\"jpgv\"],\"video/jpm\":[\"*jpm\",\"jpgm\"],\"video/mj2\":[\"mj2\",\"mjp2\"],\"video/mp2t\":[\"ts\"],\"video/mp4\":[\"mp4\",\"mp4v\",\"mpg4\"],\"video/mpeg\":[\"mpeg\",\"mpg\",\"mpe\",\"m1v\",\"m2v\"],\"video/ogg\":[\"ogv\"],\"video/quicktime\":[\"qt\",\"mov\"],\"video/webm\":[\"webm\"]};","'use strict';\n\nconst basename = path => {\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now\n      if (!matchedSlash) {\n        start = i + 1;\n        break;\n      }\n    } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) {\n    return '';\n  }\n\n  return path.slice(start, end);\n};\n\nmodule.exports = { basename };\n","'use strict';\n\nconst WIN_SLASH = '\\\\\\\\/';\nconst WIN_NO_SLASH = `[^${WIN_SLASH}]`;\n\n/**\n * Posix glob regex\n */\n\nconst DOT_LITERAL = '\\\\.';\nconst PLUS_LITERAL = '\\\\+';\nconst QMARK_LITERAL = '\\\\?';\nconst SLASH_LITERAL = '\\\\/';\nconst ONE_CHAR = '(?=.)';\nconst QMARK = '[^/]';\nconst END_ANCHOR = `(?:${SLASH_LITERAL}|$)`;\nconst START_ANCHOR = `(?:^|${SLASH_LITERAL})`;\nconst DOTS_SLASH = `${DOT_LITERAL}{1,2}${END_ANCHOR}`;\nconst NO_DOT = `(?!${DOT_LITERAL})`;\nconst NO_DOTS = `(?!${START_ANCHOR}${DOTS_SLASH})`;\nconst NO_DOT_SLASH = `(?!${DOT_LITERAL}{0,1}${END_ANCHOR})`;\nconst NO_DOTS_SLASH = `(?!${DOTS_SLASH})`;\nconst QMARK_NO_DOT = `[^.${SLASH_LITERAL}]`;\nconst STAR = `${QMARK}*?`;\n\nconst POSIX_CHARS = {\n  DOT_LITERAL,\n  PLUS_LITERAL,\n  QMARK_LITERAL,\n  SLASH_LITERAL,\n  ONE_CHAR,\n  QMARK,\n  END_ANCHOR,\n  DOTS_SLASH,\n  NO_DOT,\n  NO_DOTS,\n  NO_DOT_SLASH,\n  NO_DOTS_SLASH,\n  QMARK_NO_DOT,\n  STAR,\n  START_ANCHOR\n};\n\n/**\n * Windows glob regex\n */\n\nconst WINDOWS_CHARS = {\n  ...POSIX_CHARS,\n\n  SLASH_LITERAL: `[${WIN_SLASH}]`,\n  QMARK: WIN_NO_SLASH,\n  STAR: `${WIN_NO_SLASH}*?`,\n  DOTS_SLASH: `${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$)`,\n  NO_DOT: `(?!${DOT_LITERAL})`,\n  NO_DOTS: `(?!(?:^|[${WIN_SLASH}])${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  NO_DOT_SLASH: `(?!${DOT_LITERAL}{0,1}(?:[${WIN_SLASH}]|$))`,\n  NO_DOTS_SLASH: `(?!${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  QMARK_NO_DOT: `[^.${WIN_SLASH}]`,\n  START_ANCHOR: `(?:^|[${WIN_SLASH}])`,\n  END_ANCHOR: `(?:[${WIN_SLASH}]|$)`\n};\n\n/**\n * POSIX Bracket Regex\n */\n\nconst POSIX_REGEX_SOURCE = {\n  alnum: 'a-zA-Z0-9',\n  alpha: 'a-zA-Z',\n  ascii: '\\\\x00-\\\\x7F',\n  blank: ' \\\\t',\n  cntrl: '\\\\x00-\\\\x1F\\\\x7F',\n  digit: '0-9',\n  graph: '\\\\x21-\\\\x7E',\n  lower: 'a-z',\n  print: '\\\\x20-\\\\x7E ',\n  punct: '\\\\-!\"#$%&\\'()\\\\*+,./:;<=>?@[\\\\]^_`{|}~',\n  space: ' \\\\t\\\\r\\\\n\\\\v\\\\f',\n  upper: 'A-Z',\n  word: 'A-Za-z0-9_',\n  xdigit: 'A-Fa-f0-9'\n};\n\nmodule.exports = {\n  MAX_LENGTH: 1024 * 64,\n  POSIX_REGEX_SOURCE,\n\n  // regular expressions\n  REGEX_BACKSLASH: /\\\\(?![*+?^${}(|)[\\]])/g,\n  REGEX_NON_SPECIAL_CHARS: /^[^@![\\].,$*+?^{}()|\\\\/]+/,\n  REGEX_SPECIAL_CHARS: /[-*+?.^${}(|)[\\]]/,\n  REGEX_SPECIAL_CHARS_BACKREF: /(\\\\?)((\\W)(\\3*))/g,\n  REGEX_SPECIAL_CHARS_GLOBAL: /([-*+?.^${}(|)[\\]])/g,\n  REGEX_REMOVE_BACKSLASH: /(?:\\[.*?[^\\\\]\\]|\\\\(?=.))/g,\n\n  // Replace globs with equivalent patterns to reduce parsing time.\n  REPLACEMENTS: {\n    '***': '*',\n    '**/**': '**',\n    '**/**/**': '**'\n  },\n\n  // Digits\n  CHAR_0: 48, /* 0 */\n  CHAR_9: 57, /* 9 */\n\n  // Alphabet chars.\n  CHAR_UPPERCASE_A: 65, /* A */\n  CHAR_LOWERCASE_A: 97, /* a */\n  CHAR_UPPERCASE_Z: 90, /* Z */\n  CHAR_LOWERCASE_Z: 122, /* z */\n\n  CHAR_LEFT_PARENTHESES: 40, /* ( */\n  CHAR_RIGHT_PARENTHESES: 41, /* ) */\n\n  CHAR_ASTERISK: 42, /* * */\n\n  // Non-alphabetic chars.\n  CHAR_AMPERSAND: 38, /* & */\n  CHAR_AT: 64, /* @ */\n  CHAR_BACKWARD_SLASH: 92, /* \\ */\n  CHAR_CARRIAGE_RETURN: 13, /* \\r */\n  CHAR_CIRCUMFLEX_ACCENT: 94, /* ^ */\n  CHAR_COLON: 58, /* : */\n  CHAR_COMMA: 44, /* , */\n  CHAR_DOT: 46, /* . */\n  CHAR_DOUBLE_QUOTE: 34, /* \" */\n  CHAR_EQUAL: 61, /* = */\n  CHAR_EXCLAMATION_MARK: 33, /* ! */\n  CHAR_FORM_FEED: 12, /* \\f */\n  CHAR_FORWARD_SLASH: 47, /* / */\n  CHAR_GRAVE_ACCENT: 96, /* ` */\n  CHAR_HASH: 35, /* # */\n  CHAR_HYPHEN_MINUS: 45, /* - */\n  CHAR_LEFT_ANGLE_BRACKET: 60, /* < */\n  CHAR_LEFT_CURLY_BRACE: 123, /* { */\n  CHAR_LEFT_SQUARE_BRACKET: 91, /* [ */\n  CHAR_LINE_FEED: 10, /* \\n */\n  CHAR_NO_BREAK_SPACE: 160, /* \\u00A0 */\n  CHAR_PERCENT: 37, /* % */\n  CHAR_PLUS: 43, /* + */\n  CHAR_QUESTION_MARK: 63, /* ? */\n  CHAR_RIGHT_ANGLE_BRACKET: 62, /* > */\n  CHAR_RIGHT_CURLY_BRACE: 125, /* } */\n  CHAR_RIGHT_SQUARE_BRACKET: 93, /* ] */\n  CHAR_SEMICOLON: 59, /* ; */\n  CHAR_SINGLE_QUOTE: 39, /* ' */\n  CHAR_SPACE: 32, /*   */\n  CHAR_TAB: 9, /* \\t */\n  CHAR_UNDERSCORE: 95, /* _ */\n  CHAR_VERTICAL_LINE: 124, /* | */\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279, /* \\uFEFF */\n\n  SEP: '/',\n\n  /**\n   * Create EXTGLOB_CHARS\n   */\n\n  extglobChars(chars) {\n    return {\n      '!': { type: 'negate', open: '(?:(?!(?:', close: `))${chars.STAR})` },\n      '?': { type: 'qmark', open: '(?:', close: ')?' },\n      '+': { type: 'plus', open: '(?:', close: ')+' },\n      '*': { type: 'star', open: '(?:', close: ')*' },\n      '@': { type: 'at', open: '(?:', close: ')' }\n    };\n  },\n\n  /**\n   * Create GLOB_CHARS\n   */\n\n  globChars(win32 = false) {\n    return win32 === true ? WINDOWS_CHARS : POSIX_CHARS;\n  }\n};\n","'use strict';\n\nconst {\n  REGEX_BACKSLASH,\n  REGEX_REMOVE_BACKSLASH,\n  REGEX_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_GLOBAL\n} = require('./constants');\n\nexports.isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\nexports.hasRegexChars = str => REGEX_SPECIAL_CHARS.test(str);\nexports.isRegexChar = str => str.length === 1 && exports.hasRegexChars(str);\nexports.escapeRegex = str => str.replace(REGEX_SPECIAL_CHARS_GLOBAL, '\\\\$1');\nexports.toPosixSlashes = str => str.replace(REGEX_BACKSLASH, '/');\n\nexports.removeBackslashes = str => {\n  return str.replace(REGEX_REMOVE_BACKSLASH, match => {\n    return match === '\\\\' ? '' : match;\n  });\n};\n\nexports.isWindows = options => {\n  if (options && typeof options.windows === 'boolean') {\n    return options.windows;\n  }\n  return false;\n};\n\nexports.escapeLast = (input, char, lastIdx) => {\n  const idx = input.lastIndexOf(char, lastIdx);\n  if (idx === -1) return input;\n  if (input[idx - 1] === '\\\\') return exports.escapeLast(input, char, idx - 1);\n  return `${input.slice(0, idx)}\\\\${input.slice(idx)}`;\n};\n\nexports.removePrefix = (input, state = {}) => {\n  let output = input;\n  if (output.startsWith('./')) {\n    output = output.slice(2);\n    state.prefix = './';\n  }\n  return output;\n};\n\nexports.wrapOutput = (input, state = {}, options = {}) => {\n  const prepend = options.contains ? '' : '^';\n  const append = options.contains ? '' : '$';\n\n  let output = `${prepend}(?:${input})${append}`;\n  if (state.negated === true) {\n    output = `(?:^(?!${output}).*$)`;\n  }\n  return output;\n};\n","'use strict';\n\nconst utils = require('./utils');\nconst {\n  CHAR_ASTERISK,             /* * */\n  CHAR_AT,                   /* @ */\n  CHAR_BACKWARD_SLASH,       /* \\ */\n  CHAR_COMMA,                /* , */\n  CHAR_DOT,                  /* . */\n  CHAR_EXCLAMATION_MARK,     /* ! */\n  CHAR_FORWARD_SLASH,        /* / */\n  CHAR_LEFT_CURLY_BRACE,     /* { */\n  CHAR_LEFT_PARENTHESES,     /* ( */\n  CHAR_LEFT_SQUARE_BRACKET,  /* [ */\n  CHAR_PLUS,                 /* + */\n  CHAR_QUESTION_MARK,        /* ? */\n  CHAR_RIGHT_CURLY_BRACE,    /* } */\n  CHAR_RIGHT_PARENTHESES,    /* ) */\n  CHAR_RIGHT_SQUARE_BRACKET  /* ] */\n} = require('./constants');\n\nconst isPathSeparator = code => {\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n};\n\nconst depth = token => {\n  if (token.isPrefix !== true) {\n    token.depth = token.isGlobstar ? Infinity : 1;\n  }\n};\n\n/**\n * Quickly scans a glob pattern and returns an object with a handful of\n * useful properties, like `isGlob`, `path` (the leading non-glob, if it exists),\n * `glob` (the actual pattern), `negated` (true if the path starts with `!` but not\n * with `!(`) and `negatedExtglob` (true if the path starts with `!(`).\n *\n * ```js\n * const pm = require('picomatch');\n * console.log(pm.scan('foo/bar/*.js'));\n * { isGlob: true, input: 'foo/bar/*.js', base: 'foo/bar', glob: '*.js' }\n * ```\n * @param {String} `str`\n * @param {Object} `options`\n * @return {Object} Returns an object with tokens and regex source string.\n * @api public\n */\n\nconst scan = (input, options) => {\n  const opts = options || {};\n\n  const length = input.length - 1;\n  const scanToEnd = opts.parts === true || opts.scanToEnd === true;\n  const slashes = [];\n  const tokens = [];\n  const parts = [];\n\n  let str = input;\n  let index = -1;\n  let start = 0;\n  let lastIndex = 0;\n  let isBrace = false;\n  let isBracket = false;\n  let isGlob = false;\n  let isExtglob = false;\n  let isGlobstar = false;\n  let braceEscaped = false;\n  let backslashes = false;\n  let negated = false;\n  let negatedExtglob = false;\n  let finished = false;\n  let braces = 0;\n  let prev;\n  let code;\n  let token = { value: '', depth: 0, isGlob: false };\n\n  const eos = () => index >= length;\n  const peek = () => str.charCodeAt(index + 1);\n  const advance = () => {\n    prev = code;\n    return str.charCodeAt(++index);\n  };\n\n  while (index < length) {\n    code = advance();\n    let next;\n\n    if (code === CHAR_BACKWARD_SLASH) {\n      backslashes = token.backslashes = true;\n      code = advance();\n\n      if (code === CHAR_LEFT_CURLY_BRACE) {\n        braceEscaped = true;\n      }\n      continue;\n    }\n\n    if (braceEscaped === true || code === CHAR_LEFT_CURLY_BRACE) {\n      braces++;\n\n      while (eos() !== true && (code = advance())) {\n        if (code === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (code === CHAR_LEFT_CURLY_BRACE) {\n          braces++;\n          continue;\n        }\n\n        if (braceEscaped !== true && code === CHAR_DOT && (code = advance()) === CHAR_DOT) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (braceEscaped !== true && code === CHAR_COMMA) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (code === CHAR_RIGHT_CURLY_BRACE) {\n          braces--;\n\n          if (braces === 0) {\n            braceEscaped = false;\n            isBrace = token.isBrace = true;\n            finished = true;\n            break;\n          }\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (code === CHAR_FORWARD_SLASH) {\n      slashes.push(index);\n      tokens.push(token);\n      token = { value: '', depth: 0, isGlob: false };\n\n      if (finished === true) continue;\n      if (prev === CHAR_DOT && index === (start + 1)) {\n        start += 2;\n        continue;\n      }\n\n      lastIndex = index + 1;\n      continue;\n    }\n\n    if (opts.noext !== true) {\n      const isExtglobChar = code === CHAR_PLUS\n        || code === CHAR_AT\n        || code === CHAR_ASTERISK\n        || code === CHAR_QUESTION_MARK\n        || code === CHAR_EXCLAMATION_MARK;\n\n      if (isExtglobChar === true && peek() === CHAR_LEFT_PARENTHESES) {\n        isGlob = token.isGlob = true;\n        isExtglob = token.isExtglob = true;\n        finished = true;\n        if (code === CHAR_EXCLAMATION_MARK && index === start) {\n          negatedExtglob = true;\n        }\n\n        if (scanToEnd === true) {\n          while (eos() !== true && (code = advance())) {\n            if (code === CHAR_BACKWARD_SLASH) {\n              backslashes = token.backslashes = true;\n              code = advance();\n              continue;\n            }\n\n            if (code === CHAR_RIGHT_PARENTHESES) {\n              isGlob = token.isGlob = true;\n              finished = true;\n              break;\n            }\n          }\n          continue;\n        }\n        break;\n      }\n    }\n\n    if (code === CHAR_ASTERISK) {\n      if (prev === CHAR_ASTERISK) isGlobstar = token.isGlobstar = true;\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_QUESTION_MARK) {\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_LEFT_SQUARE_BRACKET) {\n      while (eos() !== true && (next = advance())) {\n        if (next === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (next === CHAR_RIGHT_SQUARE_BRACKET) {\n          isBracket = token.isBracket = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n          break;\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (opts.nonegate !== true && code === CHAR_EXCLAMATION_MARK && index === start) {\n      negated = token.negated = true;\n      start++;\n      continue;\n    }\n\n    if (opts.noparen !== true && code === CHAR_LEFT_PARENTHESES) {\n      isGlob = token.isGlob = true;\n\n      if (scanToEnd === true) {\n        while (eos() !== true && (code = advance())) {\n          if (code === CHAR_LEFT_PARENTHESES) {\n            backslashes = token.backslashes = true;\n            code = advance();\n            continue;\n          }\n\n          if (code === CHAR_RIGHT_PARENTHESES) {\n            finished = true;\n            break;\n          }\n        }\n        continue;\n      }\n      break;\n    }\n\n    if (isGlob === true) {\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n  }\n\n  if (opts.noext === true) {\n    isExtglob = false;\n    isGlob = false;\n  }\n\n  let base = str;\n  let prefix = '';\n  let glob = '';\n\n  if (start > 0) {\n    prefix = str.slice(0, start);\n    str = str.slice(start);\n    lastIndex -= start;\n  }\n\n  if (base && isGlob === true && lastIndex > 0) {\n    base = str.slice(0, lastIndex);\n    glob = str.slice(lastIndex);\n  } else if (isGlob === true) {\n    base = '';\n    glob = str;\n  } else {\n    base = str;\n  }\n\n  if (base && base !== '' && base !== '/' && base !== str) {\n    if (isPathSeparator(base.charCodeAt(base.length - 1))) {\n      base = base.slice(0, -1);\n    }\n  }\n\n  if (opts.unescape === true) {\n    if (glob) glob = utils.removeBackslashes(glob);\n\n    if (base && backslashes === true) {\n      base = utils.removeBackslashes(base);\n    }\n  }\n\n  const state = {\n    prefix,\n    input,\n    start,\n    base,\n    glob,\n    isBrace,\n    isBracket,\n    isGlob,\n    isExtglob,\n    isGlobstar,\n    negated,\n    negatedExtglob\n  };\n\n  if (opts.tokens === true) {\n    state.maxDepth = 0;\n    if (!isPathSeparator(code)) {\n      tokens.push(token);\n    }\n    state.tokens = tokens;\n  }\n\n  if (opts.parts === true || opts.tokens === true) {\n    let prevIndex;\n\n    for (let idx = 0; idx < slashes.length; idx++) {\n      const n = prevIndex ? prevIndex + 1 : start;\n      const i = slashes[idx];\n      const value = input.slice(n, i);\n      if (opts.tokens) {\n        if (idx === 0 && start !== 0) {\n          tokens[idx].isPrefix = true;\n          tokens[idx].value = prefix;\n        } else {\n          tokens[idx].value = value;\n        }\n        depth(tokens[idx]);\n        state.maxDepth += tokens[idx].depth;\n      }\n      if (idx !== 0 || value !== '') {\n        parts.push(value);\n      }\n      prevIndex = i;\n    }\n\n    if (prevIndex && prevIndex + 1 < input.length) {\n      const value = input.slice(prevIndex + 1);\n      parts.push(value);\n\n      if (opts.tokens) {\n        tokens[tokens.length - 1].value = value;\n        depth(tokens[tokens.length - 1]);\n        state.maxDepth += tokens[tokens.length - 1].depth;\n      }\n    }\n\n    state.slashes = slashes;\n    state.parts = parts;\n  }\n\n  return state;\n};\n\nmodule.exports = scan;\n","'use strict';\n\nconst constants = require('./constants');\nconst utils = require('./utils');\n\n/**\n * Constants\n */\n\nconst {\n  MAX_LENGTH,\n  POSIX_REGEX_SOURCE,\n  REGEX_NON_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_BACKREF,\n  REPLACEMENTS\n} = constants;\n\n/**\n * Helpers\n */\n\nconst expandRange = (args, options) => {\n  if (typeof options.expandRange === 'function') {\n    return options.expandRange(...args, options);\n  }\n\n  args.sort();\n  const value = `[${args.join('-')}]`;\n\n  try {\n    /* eslint-disable-next-line no-new */\n    new RegExp(value);\n  } catch (ex) {\n    return args.map(v => utils.escapeRegex(v)).join('..');\n  }\n\n  return value;\n};\n\n/**\n * Create the message for a syntax error\n */\n\nconst syntaxError = (type, char) => {\n  return `Missing ${type}: \"${char}\" - use \"\\\\\\\\${char}\" to match literal characters`;\n};\n\n/**\n * Parse the given input string.\n * @param {String} input\n * @param {Object} options\n * @return {Object}\n */\n\nconst parse = (input, options) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  input = REPLACEMENTS[input] || input;\n\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n\n  let len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  const bos = { type: 'bos', value: '', output: opts.prepend || '' };\n  const tokens = [bos];\n\n  const capture = opts.capture ? '' : '?:';\n\n  const PLATFORM_CHARS = constants.globChars();\n  const EXTGLOB_CHARS = constants.extglobChars(PLATFORM_CHARS);\n\n  const {\n    DOT_LITERAL,\n    PLUS_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOT_SLASH,\n    NO_DOTS_SLASH,\n    QMARK,\n    QMARK_NO_DOT,\n    STAR,\n    START_ANCHOR\n  } = PLATFORM_CHARS;\n\n  const globstar = opts => {\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const nodot = opts.dot ? '' : NO_DOT;\n  const qmarkNoDot = opts.dot ? QMARK : QMARK_NO_DOT;\n  let star = opts.bash === true ? globstar(opts) : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  // minimatch options support\n  if (typeof opts.noext === 'boolean') {\n    opts.noextglob = opts.noext;\n  }\n\n  const state = {\n    input,\n    index: -1,\n    start: 0,\n    dot: opts.dot === true,\n    consumed: '',\n    output: '',\n    prefix: '',\n    backtrack: false,\n    negated: false,\n    brackets: 0,\n    braces: 0,\n    parens: 0,\n    quotes: 0,\n    globstar: false,\n    tokens\n  };\n\n  input = utils.removePrefix(input, state);\n  len = input.length;\n\n  const extglobs = [];\n  const braces = [];\n  const stack = [];\n  let prev = bos;\n  let value;\n\n  /**\n   * Tokenizing helpers\n   */\n\n  const eos = () => state.index === len - 1;\n  const peek = state.peek = (n = 1) => input[state.index + n];\n  const advance = state.advance = () => input[++state.index] || '';\n  const remaining = () => input.slice(state.index + 1);\n  const consume = (value = '', num = 0) => {\n    state.consumed += value;\n    state.index += num;\n  };\n\n  const append = token => {\n    state.output += token.output != null ? token.output : token.value;\n    consume(token.value);\n  };\n\n  const negate = () => {\n    let count = 1;\n\n    while (peek() === '!' && (peek(2) !== '(' || peek(3) === '?')) {\n      advance();\n      state.start++;\n      count++;\n    }\n\n    if (count % 2 === 0) {\n      return false;\n    }\n\n    state.negated = true;\n    state.start++;\n    return true;\n  };\n\n  const increment = type => {\n    state[type]++;\n    stack.push(type);\n  };\n\n  const decrement = type => {\n    state[type]--;\n    stack.pop();\n  };\n\n  /**\n   * Push tokens onto the tokens array. This helper speeds up\n   * tokenizing by 1) helping us avoid backtracking as much as possible,\n   * and 2) helping us avoid creating extra tokens when consecutive\n   * characters are plain text. This improves performance and simplifies\n   * lookbehinds.\n   */\n\n  const push = tok => {\n    if (prev.type === 'globstar') {\n      const isBrace = state.braces > 0 && (tok.type === 'comma' || tok.type === 'brace');\n      const isExtglob = tok.extglob === true || (extglobs.length && (tok.type === 'pipe' || tok.type === 'paren'));\n\n      if (tok.type !== 'slash' && tok.type !== 'paren' && !isBrace && !isExtglob) {\n        state.output = state.output.slice(0, -prev.output.length);\n        prev.type = 'star';\n        prev.value = '*';\n        prev.output = star;\n        state.output += prev.output;\n      }\n    }\n\n    if (extglobs.length && tok.type !== 'paren') {\n      extglobs[extglobs.length - 1].inner += tok.value;\n    }\n\n    if (tok.value || tok.output) append(tok);\n    if (prev && prev.type === 'text' && tok.type === 'text') {\n      prev.value += tok.value;\n      prev.output = (prev.output || '') + tok.value;\n      return;\n    }\n\n    tok.prev = prev;\n    tokens.push(tok);\n    prev = tok;\n  };\n\n  const extglobOpen = (type, value) => {\n    const token = { ...EXTGLOB_CHARS[value], conditions: 1, inner: '' };\n\n    token.prev = prev;\n    token.parens = state.parens;\n    token.output = state.output;\n    const output = (opts.capture ? '(' : '') + token.open;\n\n    increment('parens');\n    push({ type, value, output: state.output ? '' : ONE_CHAR });\n    push({ type: 'paren', extglob: true, value: advance(), output });\n    extglobs.push(token);\n  };\n\n  const extglobClose = token => {\n    let output = token.close + (opts.capture ? ')' : '');\n    let rest;\n\n    if (token.type === 'negate') {\n      let extglobStar = star;\n\n      if (token.inner && token.inner.length > 1 && token.inner.includes('/')) {\n        extglobStar = globstar(opts);\n      }\n\n      if (extglobStar !== star || eos() || /^\\)+$/.test(remaining())) {\n        output = token.close = `)$))${extglobStar}`;\n      }\n\n      if (token.inner.includes('*') && (rest = remaining()) && /^\\.[^\\\\/.]+$/.test(rest)) {\n        // Any non-magical string (`.ts`) or even nested expression (`.{ts,tsx}`) can follow after the closing parenthesis.\n        // In this case, we need to parse the string and use it in the output of the original pattern.\n        // Suitable patterns: `/!(*.d).ts`, `/!(*.d).{ts,tsx}`, `**/!(*-dbg).@(js)`.\n        //\n        // Disabling the `fastpaths` option due to a problem with parsing strings as `.ts` in the pattern like `**/!(*.d).ts`.\n        const expression = parse(rest, { ...options, fastpaths: false }).output;\n\n        output = token.close = `)${expression})${extglobStar})`;\n      }\n\n      if (token.prev.type === 'bos') {\n        state.negatedExtglob = true;\n      }\n    }\n\n    push({ type: 'paren', extglob: true, value, output });\n    decrement('parens');\n  };\n\n  /**\n   * Fast paths\n   */\n\n  if (opts.fastpaths !== false && !/(^[*!]|[/()[\\]{}\"])/.test(input)) {\n    let backslashes = false;\n\n    let output = input.replace(REGEX_SPECIAL_CHARS_BACKREF, (m, esc, chars, first, rest, index) => {\n      if (first === '\\\\') {\n        backslashes = true;\n        return m;\n      }\n\n      if (first === '?') {\n        if (esc) {\n          return esc + first + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        if (index === 0) {\n          return qmarkNoDot + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        return QMARK.repeat(chars.length);\n      }\n\n      if (first === '.') {\n        return DOT_LITERAL.repeat(chars.length);\n      }\n\n      if (first === '*') {\n        if (esc) {\n          return esc + first + (rest ? star : '');\n        }\n        return star;\n      }\n      return esc ? m : `\\\\${m}`;\n    });\n\n    if (backslashes === true) {\n      if (opts.unescape === true) {\n        output = output.replace(/\\\\/g, '');\n      } else {\n        output = output.replace(/\\\\+/g, m => {\n          return m.length % 2 === 0 ? '\\\\\\\\' : (m ? '\\\\' : '');\n        });\n      }\n    }\n\n    if (output === input && opts.contains === true) {\n      state.output = input;\n      return state;\n    }\n\n    state.output = utils.wrapOutput(output, state, options);\n    return state;\n  }\n\n  /**\n   * Tokenize input until we reach end-of-string\n   */\n\n  while (!eos()) {\n    value = advance();\n\n    if (value === '\\u0000') {\n      continue;\n    }\n\n    /**\n     * Escaped characters\n     */\n\n    if (value === '\\\\') {\n      const next = peek();\n\n      if (next === '/' && opts.bash !== true) {\n        continue;\n      }\n\n      if (next === '.' || next === ';') {\n        continue;\n      }\n\n      if (!next) {\n        value += '\\\\';\n        push({ type: 'text', value });\n        continue;\n      }\n\n      // collapse slashes to reduce potential for exploits\n      const match = /^\\\\+/.exec(remaining());\n      let slashes = 0;\n\n      if (match && match[0].length > 2) {\n        slashes = match[0].length;\n        state.index += slashes;\n        if (slashes % 2 !== 0) {\n          value += '\\\\';\n        }\n      }\n\n      if (opts.unescape === true) {\n        value = advance();\n      } else {\n        value += advance();\n      }\n\n      if (state.brackets === 0) {\n        push({ type: 'text', value });\n        continue;\n      }\n    }\n\n    /**\n     * If we're inside a regex character class, continue\n     * until we reach the closing bracket.\n     */\n\n    if (state.brackets > 0 && (value !== ']' || prev.value === '[' || prev.value === '[^')) {\n      if (opts.posix !== false && value === ':') {\n        const inner = prev.value.slice(1);\n        if (inner.includes('[')) {\n          prev.posix = true;\n\n          if (inner.includes(':')) {\n            const idx = prev.value.lastIndexOf('[');\n            const pre = prev.value.slice(0, idx);\n            const rest = prev.value.slice(idx + 2);\n            const posix = POSIX_REGEX_SOURCE[rest];\n            if (posix) {\n              prev.value = pre + posix;\n              state.backtrack = true;\n              advance();\n\n              if (!bos.output && tokens.indexOf(prev) === 1) {\n                bos.output = ONE_CHAR;\n              }\n              continue;\n            }\n          }\n        }\n      }\n\n      if ((value === '[' && peek() !== ':') || (value === '-' && peek() === ']')) {\n        value = `\\\\${value}`;\n      }\n\n      if (value === ']' && (prev.value === '[' || prev.value === '[^')) {\n        value = `\\\\${value}`;\n      }\n\n      if (opts.posix === true && value === '!' && prev.value === '[') {\n        value = '^';\n      }\n\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * If we're inside a quoted string, continue\n     * until we reach the closing double quote.\n     */\n\n    if (state.quotes === 1 && value !== '\"') {\n      value = utils.escapeRegex(value);\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * Double quotes\n     */\n\n    if (value === '\"') {\n      state.quotes = state.quotes === 1 ? 0 : 1;\n      if (opts.keepQuotes === true) {\n        push({ type: 'text', value });\n      }\n      continue;\n    }\n\n    /**\n     * Parentheses\n     */\n\n    if (value === '(') {\n      increment('parens');\n      push({ type: 'paren', value });\n      continue;\n    }\n\n    if (value === ')') {\n      if (state.parens === 0 && opts.strictBrackets === true) {\n        throw new SyntaxError(syntaxError('opening', '('));\n      }\n\n      const extglob = extglobs[extglobs.length - 1];\n      if (extglob && state.parens === extglob.parens + 1) {\n        extglobClose(extglobs.pop());\n        continue;\n      }\n\n      push({ type: 'paren', value, output: state.parens ? ')' : '\\\\)' });\n      decrement('parens');\n      continue;\n    }\n\n    /**\n     * Square brackets\n     */\n\n    if (value === '[') {\n      if (opts.nobracket === true || !remaining().includes(']')) {\n        if (opts.nobracket !== true && opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('closing', ']'));\n        }\n\n        value = `\\\\${value}`;\n      } else {\n        increment('brackets');\n      }\n\n      push({ type: 'bracket', value });\n      continue;\n    }\n\n    if (value === ']') {\n      if (opts.nobracket === true || (prev && prev.type === 'bracket' && prev.value.length === 1)) {\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      if (state.brackets === 0) {\n        if (opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('opening', '['));\n        }\n\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      decrement('brackets');\n\n      const prevValue = prev.value.slice(1);\n      if (prev.posix !== true && prevValue[0] === '^' && !prevValue.includes('/')) {\n        value = `/${value}`;\n      }\n\n      prev.value += value;\n      append({ value });\n\n      // when literal brackets are explicitly disabled\n      // assume we should match with a regex character class\n      if (opts.literalBrackets === false || utils.hasRegexChars(prevValue)) {\n        continue;\n      }\n\n      const escaped = utils.escapeRegex(prev.value);\n      state.output = state.output.slice(0, -prev.value.length);\n\n      // when literal brackets are explicitly enabled\n      // assume we should escape the brackets to match literal characters\n      if (opts.literalBrackets === true) {\n        state.output += escaped;\n        prev.value = escaped;\n        continue;\n      }\n\n      // when the user specifies nothing, try to match both\n      prev.value = `(${capture}${escaped}|${prev.value})`;\n      state.output += prev.value;\n      continue;\n    }\n\n    /**\n     * Braces\n     */\n\n    if (value === '{' && opts.nobrace !== true) {\n      increment('braces');\n\n      const open = {\n        type: 'brace',\n        value,\n        output: '(',\n        outputIndex: state.output.length,\n        tokensIndex: state.tokens.length\n      };\n\n      braces.push(open);\n      push(open);\n      continue;\n    }\n\n    if (value === '}') {\n      const brace = braces[braces.length - 1];\n\n      if (opts.nobrace === true || !brace) {\n        push({ type: 'text', value, output: value });\n        continue;\n      }\n\n      let output = ')';\n\n      if (brace.dots === true) {\n        const arr = tokens.slice();\n        const range = [];\n\n        for (let i = arr.length - 1; i >= 0; i--) {\n          tokens.pop();\n          if (arr[i].type === 'brace') {\n            break;\n          }\n          if (arr[i].type !== 'dots') {\n            range.unshift(arr[i].value);\n          }\n        }\n\n        output = expandRange(range, opts);\n        state.backtrack = true;\n      }\n\n      if (brace.comma !== true && brace.dots !== true) {\n        const out = state.output.slice(0, brace.outputIndex);\n        const toks = state.tokens.slice(brace.tokensIndex);\n        brace.value = brace.output = '\\\\{';\n        value = output = '\\\\}';\n        state.output = out;\n        for (const t of toks) {\n          state.output += (t.output || t.value);\n        }\n      }\n\n      push({ type: 'brace', value, output });\n      decrement('braces');\n      braces.pop();\n      continue;\n    }\n\n    /**\n     * Pipes\n     */\n\n    if (value === '|') {\n      if (extglobs.length > 0) {\n        extglobs[extglobs.length - 1].conditions++;\n      }\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Commas\n     */\n\n    if (value === ',') {\n      let output = value;\n\n      const brace = braces[braces.length - 1];\n      if (brace && stack[stack.length - 1] === 'braces') {\n        brace.comma = true;\n        output = '|';\n      }\n\n      push({ type: 'comma', value, output });\n      continue;\n    }\n\n    /**\n     * Slashes\n     */\n\n    if (value === '/') {\n      // if the beginning of the glob is \"./\", advance the start\n      // to the current index, and don't add the \"./\" characters\n      // to the state. This greatly simplifies lookbehinds when\n      // checking for BOS characters like \"!\" and \".\" (not \"./\")\n      if (prev.type === 'dot' && state.index === state.start + 1) {\n        state.start = state.index + 1;\n        state.consumed = '';\n        state.output = '';\n        tokens.pop();\n        prev = bos; // reset \"prev\" to the first token\n        continue;\n      }\n\n      push({ type: 'slash', value, output: SLASH_LITERAL });\n      continue;\n    }\n\n    /**\n     * Dots\n     */\n\n    if (value === '.') {\n      if (state.braces > 0 && prev.type === 'dot') {\n        if (prev.value === '.') prev.output = DOT_LITERAL;\n        const brace = braces[braces.length - 1];\n        prev.type = 'dots';\n        prev.output += value;\n        prev.value += value;\n        brace.dots = true;\n        continue;\n      }\n\n      if ((state.braces + state.parens) === 0 && prev.type !== 'bos' && prev.type !== 'slash') {\n        push({ type: 'text', value, output: DOT_LITERAL });\n        continue;\n      }\n\n      push({ type: 'dot', value, output: DOT_LITERAL });\n      continue;\n    }\n\n    /**\n     * Question marks\n     */\n\n    if (value === '?') {\n      const isGroup = prev && prev.value === '(';\n      if (!isGroup && opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('qmark', value);\n        continue;\n      }\n\n      if (prev && prev.type === 'paren') {\n        const next = peek();\n        let output = value;\n\n        if ((prev.value === '(' && !/[!=<:]/.test(next)) || (next === '<' && !/<([!=]|\\w+>)/.test(remaining()))) {\n          output = `\\\\${value}`;\n        }\n\n        push({ type: 'text', value, output });\n        continue;\n      }\n\n      if (opts.dot !== true && (prev.type === 'slash' || prev.type === 'bos')) {\n        push({ type: 'qmark', value, output: QMARK_NO_DOT });\n        continue;\n      }\n\n      push({ type: 'qmark', value, output: QMARK });\n      continue;\n    }\n\n    /**\n     * Exclamation\n     */\n\n    if (value === '!') {\n      if (opts.noextglob !== true && peek() === '(') {\n        if (peek(2) !== '?' || !/[!=<:]/.test(peek(3))) {\n          extglobOpen('negate', value);\n          continue;\n        }\n      }\n\n      if (opts.nonegate !== true && state.index === 0) {\n        negate();\n        continue;\n      }\n    }\n\n    /**\n     * Plus\n     */\n\n    if (value === '+') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('plus', value);\n        continue;\n      }\n\n      if ((prev && prev.value === '(') || opts.regex === false) {\n        push({ type: 'plus', value, output: PLUS_LITERAL });\n        continue;\n      }\n\n      if ((prev && (prev.type === 'bracket' || prev.type === 'paren' || prev.type === 'brace')) || state.parens > 0) {\n        push({ type: 'plus', value });\n        continue;\n      }\n\n      push({ type: 'plus', value: PLUS_LITERAL });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value === '@') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        push({ type: 'at', extglob: true, value, output: '' });\n        continue;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value !== '*') {\n      if (value === '$' || value === '^') {\n        value = `\\\\${value}`;\n      }\n\n      const match = REGEX_NON_SPECIAL_CHARS.exec(remaining());\n      if (match) {\n        value += match[0];\n        state.index += match[0].length;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Stars\n     */\n\n    if (prev && (prev.type === 'globstar' || prev.star === true)) {\n      prev.type = 'star';\n      prev.star = true;\n      prev.value += value;\n      prev.output = star;\n      state.backtrack = true;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    let rest = remaining();\n    if (opts.noextglob !== true && /^\\([^?]/.test(rest)) {\n      extglobOpen('star', value);\n      continue;\n    }\n\n    if (prev.type === 'star') {\n      if (opts.noglobstar === true) {\n        consume(value);\n        continue;\n      }\n\n      const prior = prev.prev;\n      const before = prior.prev;\n      const isStart = prior.type === 'slash' || prior.type === 'bos';\n      const afterStar = before && (before.type === 'star' || before.type === 'globstar');\n\n      if (opts.bash === true && (!isStart || (rest[0] && rest[0] !== '/'))) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      const isBrace = state.braces > 0 && (prior.type === 'comma' || prior.type === 'brace');\n      const isExtglob = extglobs.length && (prior.type === 'pipe' || prior.type === 'paren');\n      if (!isStart && prior.type !== 'paren' && !isBrace && !isExtglob) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      // strip consecutive `/**/`\n      while (rest.slice(0, 3) === '/**') {\n        const after = input[state.index + 4];\n        if (after && after !== '/') {\n          break;\n        }\n        rest = rest.slice(3);\n        consume('/**', 3);\n      }\n\n      if (prior.type === 'bos' && eos()) {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = globstar(opts);\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && !afterStar && eos()) {\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = globstar(opts) + (opts.strictSlashes ? ')' : '|$)');\n        prev.value += value;\n        state.globstar = true;\n        state.output += prior.output + prev.output;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && rest[0] === '/') {\n        const end = rest[1] !== void 0 ? '|$' : '';\n\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = `${globstar(opts)}${SLASH_LITERAL}|${SLASH_LITERAL}${end})`;\n        prev.value += value;\n\n        state.output += prior.output + prev.output;\n        state.globstar = true;\n\n        consume(value + advance());\n\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      if (prior.type === 'bos' && rest[0] === '/') {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = `(?:^|${SLASH_LITERAL}|${globstar(opts)}${SLASH_LITERAL})`;\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value + advance());\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      // remove single star from output\n      state.output = state.output.slice(0, -prev.output.length);\n\n      // reset previous token to globstar\n      prev.type = 'globstar';\n      prev.output = globstar(opts);\n      prev.value += value;\n\n      // reset output with globstar\n      state.output += prev.output;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    const token = { type: 'star', value, output: star };\n\n    if (opts.bash === true) {\n      token.output = '.*?';\n      if (prev.type === 'bos' || prev.type === 'slash') {\n        token.output = nodot + token.output;\n      }\n      push(token);\n      continue;\n    }\n\n    if (prev && (prev.type === 'bracket' || prev.type === 'paren') && opts.regex === true) {\n      token.output = value;\n      push(token);\n      continue;\n    }\n\n    if (state.index === state.start || prev.type === 'slash' || prev.type === 'dot') {\n      if (prev.type === 'dot') {\n        state.output += NO_DOT_SLASH;\n        prev.output += NO_DOT_SLASH;\n\n      } else if (opts.dot === true) {\n        state.output += NO_DOTS_SLASH;\n        prev.output += NO_DOTS_SLASH;\n\n      } else {\n        state.output += nodot;\n        prev.output += nodot;\n      }\n\n      if (peek() !== '*') {\n        state.output += ONE_CHAR;\n        prev.output += ONE_CHAR;\n      }\n    }\n\n    push(token);\n  }\n\n  while (state.brackets > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ']'));\n    state.output = utils.escapeLast(state.output, '[');\n    decrement('brackets');\n  }\n\n  while (state.parens > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ')'));\n    state.output = utils.escapeLast(state.output, '(');\n    decrement('parens');\n  }\n\n  while (state.braces > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', '}'));\n    state.output = utils.escapeLast(state.output, '{');\n    decrement('braces');\n  }\n\n  if (opts.strictSlashes !== true && (prev.type === 'star' || prev.type === 'bracket')) {\n    push({ type: 'maybe_slash', value: '', output: `${SLASH_LITERAL}?` });\n  }\n\n  // rebuild the output if we had to backtrack at any point\n  if (state.backtrack === true) {\n    state.output = '';\n\n    for (const token of state.tokens) {\n      state.output += token.output != null ? token.output : token.value;\n\n      if (token.suffix) {\n        state.output += token.suffix;\n      }\n    }\n  }\n\n  return state;\n};\n\n/**\n * Fast paths for creating regular expressions for common glob patterns.\n * This can significantly speed up processing and has very little downside\n * impact when none of the fast paths match.\n */\n\nparse.fastpaths = (input, options) => {\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n  const len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  input = REPLACEMENTS[input] || input;\n\n  // create constants based on platform, for windows or posix\n  const {\n    DOT_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOTS,\n    NO_DOTS_SLASH,\n    STAR,\n    START_ANCHOR\n  } = constants.globChars();\n\n  const nodot = opts.dot ? NO_DOTS : NO_DOT;\n  const slashDot = opts.dot ? NO_DOTS_SLASH : NO_DOT;\n  const capture = opts.capture ? '' : '?:';\n  const state = { negated: false, prefix: '' };\n  let star = opts.bash === true ? '.*?' : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  const globstar = opts => {\n    if (opts.noglobstar === true) return star;\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const create = str => {\n    switch (str) {\n      case '*':\n        return `${nodot}${ONE_CHAR}${star}`;\n\n      case '.*':\n        return `${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*.*':\n        return `${nodot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*/*':\n        return `${nodot}${star}${SLASH_LITERAL}${ONE_CHAR}${slashDot}${star}`;\n\n      case '**':\n        return nodot + globstar(opts);\n\n      case '**/*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${ONE_CHAR}${star}`;\n\n      case '**/*.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '**/.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      default: {\n        const match = /^(.*?)\\.(\\w+)$/.exec(str);\n        if (!match) return;\n\n        const source = create(match[1]);\n        if (!source) return;\n\n        return source + DOT_LITERAL + match[2];\n      }\n    }\n  };\n\n  const output = utils.removePrefix(input, state);\n  let source = create(output);\n\n  if (source && opts.strictSlashes !== true) {\n    source += `${SLASH_LITERAL}?`;\n  }\n\n  return source;\n};\n\nmodule.exports = parse;\n","'use strict';\n\nconst path = require('./path');\nconst scan = require('./scan');\nconst parse = require('./parse');\nconst utils = require('./utils');\nconst constants = require('./constants');\nconst isObject = val => val && typeof val === 'object' && !Array.isArray(val);\n\n/**\n * Creates a matcher function from one or more glob patterns. The\n * returned function takes a string to match as its first argument,\n * and returns true if the string is a match. The returned matcher\n * function also takes a boolean as the second argument that, when true,\n * returns an object with additional information.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch(glob[, options]);\n *\n * const isMatch = picomatch('*.!(*a)');\n * console.log(isMatch('a.a')); //=> false\n * console.log(isMatch('a.b')); //=> true\n * ```\n * @name picomatch\n * @param {String|Array} `globs` One or more glob patterns.\n * @param {Object=} `options`\n * @return {Function=} Returns a matcher function.\n * @api public\n */\n\nconst picomatch = (glob, options, returnState = false) => {\n  if (Array.isArray(glob)) {\n    const fns = glob.map(input => picomatch(input, options, returnState));\n    const arrayMatcher = str => {\n      for (const isMatch of fns) {\n        const state = isMatch(str);\n        if (state) return state;\n      }\n      return false;\n    };\n    return arrayMatcher;\n  }\n\n  const isState = isObject(glob) && glob.tokens && glob.input;\n\n  if (glob === '' || (typeof glob !== 'string' && !isState)) {\n    throw new TypeError('Expected pattern to be a non-empty string');\n  }\n\n  const opts = options || {};\n  const posix = utils.isWindows(options);\n  const regex = isState\n    ? picomatch.compileRe(glob, options)\n    : picomatch.makeRe(glob, options, false, true);\n\n  const state = regex.state;\n  delete regex.state;\n\n  let isIgnored = () => false;\n  if (opts.ignore) {\n    const ignoreOpts = { ...options, ignore: null, onMatch: null, onResult: null };\n    isIgnored = picomatch(opts.ignore, ignoreOpts, returnState);\n  }\n\n  const matcher = (input, returnObject = false) => {\n    const { isMatch, match, output } = picomatch.test(input, regex, options, { glob, posix });\n    const result = { glob, state, regex, posix, input, output, match, isMatch };\n\n    if (typeof opts.onResult === 'function') {\n      opts.onResult(result);\n    }\n\n    if (isMatch === false) {\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (isIgnored(input)) {\n      if (typeof opts.onIgnore === 'function') {\n        opts.onIgnore(result);\n      }\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (typeof opts.onMatch === 'function') {\n      opts.onMatch(result);\n    }\n    return returnObject ? result : true;\n  };\n\n  if (returnState) {\n    matcher.state = state;\n  }\n\n  return matcher;\n};\n\n/**\n * Test `input` with the given `regex`. This is used by the main\n * `picomatch()` function to test the input string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.test(input, regex[, options]);\n *\n * console.log(picomatch.test('foo/bar', /^(?:([^/]*?)\\/([^/]*?))$/));\n * // { isMatch: true, match: [ 'foo/', 'foo', 'bar' ], output: 'foo/bar' }\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp} `regex`\n * @return {Object} Returns an object with matching info.\n * @api public\n */\n\npicomatch.test = (input, regex, options, { glob, posix } = {}) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected input to be a string');\n  }\n\n  if (input === '') {\n    return { isMatch: false, output: '' };\n  }\n\n  const opts = options || {};\n  const format = opts.format || (posix ? utils.toPosixSlashes : null);\n  let match = input === glob;\n  let output = (match && format) ? format(input) : input;\n\n  if (match === false) {\n    output = format ? format(input) : input;\n    match = output === glob;\n  }\n\n  if (match === false || opts.capture === true) {\n    if (opts.matchBase === true || opts.basename === true) {\n      match = picomatch.matchBase(input, regex, options, posix);\n    } else {\n      match = regex.exec(output);\n    }\n  }\n\n  return { isMatch: Boolean(match), match, output };\n};\n\n/**\n * Match the basename of a filepath.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.matchBase(input, glob[, options]);\n * console.log(picomatch.matchBase('foo/bar.js', '*.js'); // true\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp|String} `glob` Glob pattern or regex created by [.makeRe](#makeRe).\n * @return {Boolean}\n * @api public\n */\n\npicomatch.matchBase = (input, glob, options, posix = utils.isWindows(options)) => {\n  const regex = glob instanceof RegExp ? glob : picomatch.makeRe(glob, options);\n  return regex.test(path.basename(input));\n};\n\n/**\n * Returns true if **any** of the given glob `patterns` match the specified `string`.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.isMatch(string, patterns[, options]);\n *\n * console.log(picomatch.isMatch('a.a', ['b.*', '*.a'])); //=> true\n * console.log(picomatch.isMatch('a.a', 'b.*')); //=> false\n * ```\n * @param {String|Array} str The string to test.\n * @param {String|Array} patterns One or more glob patterns to use for matching.\n * @param {Object} [options] See available [options](#options).\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\npicomatch.isMatch = (str, patterns, options) => picomatch(patterns, options)(str);\n\n/**\n * Parse a glob pattern to create the source string for a regular\n * expression.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const result = picomatch.parse(pattern[, options]);\n * ```\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {Object} Returns an object with useful properties and output to be used as a regex source string.\n * @api public\n */\n\npicomatch.parse = (pattern, options) => {\n  if (Array.isArray(pattern)) return pattern.map(p => picomatch.parse(p, options));\n  return parse(pattern, { ...options, fastpaths: false });\n};\n\n/**\n * Scan a glob pattern to separate the pattern into segments.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.scan(input[, options]);\n *\n * const result = picomatch.scan('!./foo/*.js');\n * console.log(result);\n * { prefix: '!./',\n *   input: '!./foo/*.js',\n *   start: 3,\n *   base: 'foo',\n *   glob: '*.js',\n *   isBrace: false,\n *   isBracket: false,\n *   isGlob: true,\n *   isExtglob: false,\n *   isGlobstar: false,\n *   negated: true }\n * ```\n * @param {String} `input` Glob pattern to scan.\n * @param {Object} `options`\n * @return {Object} Returns an object with\n * @api public\n */\n\npicomatch.scan = (input, options) => scan(input, options);\n\n/**\n * Compile a regular expression from the `state` object returned by the\n * [parse()](#parse) method.\n *\n * @param {Object} `state`\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Intended for implementors, this argument allows you to return the raw output from the parser.\n * @param {Boolean} `returnState` Adds the state to a `state` property on the returned regex. Useful for implementors and debugging.\n * @return {RegExp}\n * @api public\n */\n\npicomatch.compileRe = (state, options, returnOutput = false, returnState = false) => {\n  if (returnOutput === true) {\n    return state.output;\n  }\n\n  const opts = options || {};\n  const prepend = opts.contains ? '' : '^';\n  const append = opts.contains ? '' : '$';\n\n  let source = `${prepend}(?:${state.output})${append}`;\n  if (state && state.negated === true) {\n    source = `^(?!${source}).*$`;\n  }\n\n  const regex = picomatch.toRegex(source, options);\n  if (returnState === true) {\n    regex.state = state;\n  }\n\n  return regex;\n};\n\n/**\n * Create a regular expression from a parsed glob pattern.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const state = picomatch.parse('*.js');\n * // picomatch.compileRe(state[, options]);\n *\n * console.log(picomatch.compileRe(state));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `state` The object returned from the `.parse` method.\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Implementors may use this argument to return the compiled output, instead of a regular expression. This is not exposed on the options to prevent end-users from mutating the result.\n * @param {Boolean} `returnState` Implementors may use this argument to return the state from the parsed glob with the returned regular expression.\n * @return {RegExp} Returns a regex created from the given pattern.\n * @api public\n */\n\npicomatch.makeRe = (input, options = {}, returnOutput = false, returnState = false) => {\n  if (!input || typeof input !== 'string') {\n    throw new TypeError('Expected a non-empty string');\n  }\n\n  let parsed = { negated: false, fastpaths: true };\n\n  if (options.fastpaths !== false && (input[0] === '.' || input[0] === '*')) {\n    parsed.output = parse.fastpaths(input, options);\n  }\n\n  if (!parsed.output) {\n    parsed = parse(input, options);\n  }\n\n  return picomatch.compileRe(parsed, options, returnOutput, returnState);\n};\n\n/**\n * Create a regular expression from the given regex source string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.toRegex(source[, options]);\n *\n * const { output } = picomatch.parse('*.js');\n * console.log(picomatch.toRegex(output));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `source` Regular expression source string.\n * @param {Object} `options`\n * @return {RegExp}\n * @api public\n */\n\npicomatch.toRegex = (source, options) => {\n  try {\n    const opts = options || {};\n    return new RegExp(source, opts.flags || (opts.nocase ? 'i' : ''));\n  } catch (err) {\n    if (options && options.debug === true) throw err;\n    return /$^/;\n  }\n};\n\n/**\n * Picomatch constants.\n * @return {Object}\n */\n\npicomatch.constants = constants;\n\n/**\n * Expose \"picomatch\"\n */\n\nmodule.exports = picomatch;\n","import mime from \"mime/lite\";\nimport picomatch from \"picomatch\";\n\nconst parseInputAccept = (inputAccept: string): [string[], string[]] => {\n  const extensions: string[] = [];\n  const mimeTypes: string[] = [];\n\n  inputAccept\n    .split(\",\")\n    .map(mimeType => mimeType.trim())\n    .filter(Boolean)\n    .forEach(fileType => {\n      if (fileType.startsWith(\".\")) {\n        extensions.push(`*${fileType}`);\n      } else {\n        mimeTypes.push(fileType);\n      }\n    });\n\n  return [extensions, mimeTypes];\n};\n\nclass AcceptedFileTypes {\n  private extensions: string[];\n  private mimeTypes: string[];\n\n  constructor(inputAccept: string) {\n    const [extensions, mimeTypes] = parseInputAccept(inputAccept);\n\n    this.extensions = extensions;\n    this.mimeTypes = mimeTypes;\n  }\n\n  public isAccepted(fileName: string): boolean {\n    if (this.extensions.length === 0 && this.mimeTypes.length === 0) {\n      return true;\n    }\n    return (\n      this.isMimeTypeAccepted(mime.getType(fileName)) ||\n      this.isExtensionAccepted(fileName)\n    );\n  }\n\n  private isMimeTypeAccepted(mimeType: string | null): boolean {\n    if (!mimeType || this.mimeTypes.length === 0) {\n      return false;\n    }\n\n    return picomatch.isMatch(mimeType, this.mimeTypes);\n  }\n\n  private isExtensionAccepted(fileName: string): boolean {\n    if (this.extensions.length === 0) {\n      return false;\n    }\n\n    return picomatch.isMatch(fileName, this.extensions);\n  }\n}\n\nexport default AcceptedFileTypes;\n","import AcceptedFileTypes from \"./accepted_file_types\";\nimport RenderUploadFile from \"./render_upload_file\";\n\nconst getEntriesFromDirectory = async (\n  directoryEntry: FileSystemDirectoryEntry\n): Promise<FileSystemEntry[]> =>\n  new Promise((resolve, reject) =>\n    directoryEntry.createReader().readEntries(resolve, reject)\n  );\n\nconst getFileFromFileEntry = async (\n  fileEntry: FileSystemFileEntry\n): Promise<File> =>\n  new Promise((resolve, reject) => fileEntry.file(resolve, reject));\n\nconst getFilesFromFileSystemEntries = async (\n  entries: FileSystemEntry[]\n): Promise<File[]> => {\n  const result = [];\n\n  for await (const entry of entries) {\n    if (entry.isFile) {\n      const file = await getFileFromFileEntry(entry as FileSystemFileEntry);\n      result.push(file);\n    } else if (entry.isDirectory) {\n      const entriesFromDirectory = await getEntriesFromDirectory(\n        entry as FileSystemDirectoryEntry\n      );\n      const files = await getFilesFromFileSystemEntries(entriesFromDirectory);\n      files.forEach(file => result.push(file));\n    }\n  }\n\n  return result;\n};\n\nconst getFilesFromDataTransfer = async (\n  dataTransfer: DataTransfer\n): Promise<File[]> => {\n  if (dataTransfer.items) {\n    const entries = [...dataTransfer.items].map(\n      item => item.webkitGetAsEntry() as FileSystemEntry\n    );\n\n    const files = await getFilesFromFileSystemEntries(entries);\n    return files;\n  } else {\n    // backwards compatibility\n    return [...dataTransfer.files];\n  }\n};\n\nclass DropArea {\n  acceptedFileTypes: AcceptedFileTypes;\n  container: Element;\n  onUploadFiles: (files: File[]) => Promise<void>;\n  renderer: RenderUploadFile;\n\n  constructor({\n    container,\n    inputAccept,\n    onUploadFiles,\n    renderer\n  }: {\n    container: Element;\n    inputAccept: string;\n    onUploadFiles: (files: File[]) => Promise<void>;\n    renderer: RenderUploadFile;\n  }) {\n    this.container = container;\n    this.onUploadFiles = onUploadFiles;\n    this.acceptedFileTypes = new AcceptedFileTypes(inputAccept);\n    this.renderer = renderer;\n\n    container.addEventListener(\"dragenter\", () => {\n      container.classList.add(\"dff-dropping\");\n    });\n    container.addEventListener(\"dragleave\", () => {\n      container.classList.remove(\"dff-dropping\");\n    });\n    container.addEventListener(\"dragover\", e => {\n      container.classList.add(\"dff-dropping\");\n      e.preventDefault();\n    });\n    container.addEventListener(\"drop\", this.onDrop);\n  }\n\n  onDrop = (e: Event): void => {\n    const dragEvent = e as DragEvent;\n    this.container.classList.remove(\"dff-dropping\");\n    dragEvent.preventDefault();\n    dragEvent.stopPropagation();\n\n    const uploadFiles = async (): Promise<void> => {\n      try {\n        if (dragEvent.dataTransfer) {\n          const files = await getFilesFromDataTransfer(dragEvent.dataTransfer);\n          const acceptedFiles: File[] = [];\n          const invalidFiles: File[] = [];\n\n          for (const file of files) {\n            if (this.acceptedFileTypes.isAccepted(file.name)) {\n              acceptedFiles.push(file);\n            } else {\n              invalidFiles.push(file);\n            }\n          }\n\n          this.renderer.setErrorInvalidFiles(invalidFiles);\n          void this.onUploadFiles(acceptedFiles);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    void uploadFiles();\n  };\n}\n\nexport default DropArea;\n","type UploadStatus = \"done\" | \"error\" | \"uploading\";\nexport type UploadType =\n  | \"existing\"\n  | \"placeholder\"\n  | \"s3\"\n  | \"tus\"\n  | \"uploadedS3\"\n  | \"uploadedTus\";\n\nexport interface InitialExistingFile {\n  name: string;\n  size: number;\n  type: \"existing\";\n}\n\nexport interface InitialPlaceholderFile {\n  id: string;\n  name: string;\n  size: number;\n  type: \"placeholder\";\n}\n\nexport interface InitialS3File {\n  id: string;\n  name: string;\n  original_name: string;\n  size: number;\n  type: \"s3\";\n}\n\nexport interface InitialTusFile {\n  id: string;\n  name: string;\n  size: number;\n  type: \"tus\";\n  url: string;\n}\n\nexport type InitialFile =\n  | InitialExistingFile\n  | InitialPlaceholderFile\n  | InitialS3File\n  | InitialTusFile;\n\ninterface UploadParameters {\n  name: string;\n  status: UploadStatus;\n  type: UploadType;\n  uploadIndex: number;\n}\n\nabstract class BaseUpload {\n  name: string;\n  status: UploadStatus;\n  type: UploadType;\n  uploadIndex: number;\n\n  constructor({ name, status, type, uploadIndex }: UploadParameters) {\n    this.name = name;\n    this.status = status;\n    this.type = type;\n    this.uploadIndex = uploadIndex;\n  }\n\n  public async abort(): Promise<void> {\n    //\n  }\n  public async delete(): Promise<void> {\n    //\n  }\n\n  public abstract getId(): string | undefined;\n  public abstract getInitialFile(): InitialFile;\n  public abstract getSize(): number | undefined;\n}\n\nexport default BaseUpload;\n","function normalize (strArray) {\n  var resultArray = [];\n  if (strArray.length === 0) { return ''; }\n\n  if (typeof strArray[0] !== 'string') {\n    throw new TypeError('Url must be a string. Received ' + strArray[0]);\n  }\n\n  // If the first part is a plain protocol, we combine it with the next part.\n  if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n    var first = strArray.shift();\n    strArray[0] = first + strArray[0];\n  }\n\n  // There must be two or three slashes in the file protocol, two slashes in anything else.\n  if (strArray[0].match(/^file:\\/\\/\\//)) {\n    strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n  } else {\n    strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n  }\n\n  for (var i = 0; i < strArray.length; i++) {\n    var component = strArray[i];\n\n    if (typeof component !== 'string') {\n      throw new TypeError('Url must be a string. Received ' + component);\n    }\n\n    if (component === '') { continue; }\n\n    if (i > 0) {\n      // Removing the starting slashes for each component but the first.\n      component = component.replace(/^[\\/]+/, '');\n    }\n    if (i < strArray.length - 1) {\n      // Removing the ending slashes for each component but the last.\n      component = component.replace(/[\\/]+$/, '');\n    } else {\n      // For the last component we will combine multiple slashes to a single one.\n      component = component.replace(/[\\/]+$/, '/');\n    }\n\n    resultArray.push(component);\n\n  }\n\n  var str = resultArray.join('/');\n  // Each input component is now separated by a single slash except the possible first plain protocol part.\n\n  // remove trailing slash before parameters or hash\n  str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n  // replace ? in parameters with &\n  var parts = str.split('?');\n  str = parts.shift() + (parts.length > 0 ? '?': '') + parts.join('&');\n\n  return str;\n}\n\nexport default function urlJoin() {\n  var input;\n\n  if (typeof arguments[0] === 'object') {\n    input = arguments[0];\n  } else {\n    input = [].slice.call(arguments);\n  }\n\n  return normalize(input);\n}\n","import urljoin from \"url-join\";\n\nexport interface LocationInfo {\n  location: string;\n}\n\nexport interface MultipartUpload {\n  key: string;\n  uploadId: string;\n  endpoint: string;\n}\n\nexport interface Part {\n  ETag: string;\n  PartNumber: number;\n}\n\nexport interface UrlInfo {\n  url: string;\n}\n\nexport const MB = 1024 * 1024;\n\ninterface AbortMultipartUploadParameters {\n  csrfToken: string;\n  endpoint: string;\n  key: string;\n  uploadId: string;\n}\n\nexport const abortMultipartUpload = ({\n  csrfToken,\n  key,\n  uploadId,\n  endpoint\n}: AbortMultipartUploadParameters): Promise<unknown> => {\n  const filename = encodeURIComponent(key);\n  const uploadIdEnc = encodeURIComponent(uploadId);\n  const headers = new Headers({\n    \"X-CSRFToken\": csrfToken\n  });\n  const url = urljoin(endpoint, uploadIdEnc, `?key=${filename}`);\n  return fetch(url, {\n    method: \"delete\",\n    headers: headers\n  }).then(response => {\n    return response.json();\n  });\n};\n\ninterface CompleteMultipartUploadParameters {\n  csrfToken: string;\n  endpoint: string;\n  key: string;\n  parts: Part[];\n  uploadId: string;\n}\n\nexport const completeMultipartUpload = ({\n  csrfToken,\n  key,\n  uploadId,\n  parts,\n  endpoint\n}: CompleteMultipartUploadParameters): Promise<LocationInfo> => {\n  const filename = encodeURIComponent(key);\n  const uploadIdEnc = encodeURIComponent(uploadId);\n  const headers = new Headers({\n    \"X-CSRFToken\": csrfToken\n  });\n  const url = urljoin(endpoint, uploadIdEnc, \"complete\", `?key=${filename}`);\n  return fetch(url, {\n    method: \"post\",\n    headers: headers,\n    body: JSON.stringify({\n      parts: parts\n    })\n  })\n    .then(response => {\n      return response.json();\n    })\n    .then(data => {\n      return data as LocationInfo;\n    });\n};\n\ninterface CreateMultipartUploadParameters {\n  csrfToken: string;\n  endpoint: string;\n  file: File;\n  s3UploadDir: string;\n}\n\nexport const createMultipartUpload = ({\n  csrfToken,\n  endpoint,\n  file,\n  s3UploadDir\n}: CreateMultipartUploadParameters): Promise<MultipartUpload> => {\n  const headers = new Headers({\n    accept: \"application/json\",\n    \"content-type\": \"application/json\",\n    \"X-CSRFToken\": csrfToken\n  });\n  return fetch(endpoint, {\n    method: \"post\",\n    headers: headers,\n    body: JSON.stringify({\n      filename: file.name,\n      contentType: file.type,\n      s3UploadDir: s3UploadDir\n    })\n  })\n    .then(response => {\n      return response.json();\n    })\n    .then(data => {\n      return data as MultipartUpload;\n    });\n};\n\nexport const getChunkSize = (file: File): number =>\n  Math.ceil(file.size / 10000);\n\ninterface PrepareUploadPartParameters {\n  csrfToken: string;\n  endpoint: string;\n  key: string;\n  number: number;\n  uploadId: string;\n}\n\nexport const prepareUploadPart = ({\n  csrfToken,\n  endpoint,\n  key,\n  number,\n  uploadId\n}: PrepareUploadPartParameters): Promise<UrlInfo> => {\n  const filename = encodeURIComponent(key);\n  const headers = new Headers({ \"X-CSRFToken\": csrfToken });\n  const url = urljoin(endpoint, uploadId, `${number}`, `?key=${filename}`);\n  return fetch(url, {\n    method: \"get\",\n    headers: headers\n  })\n    .then(response => {\n      return response.json();\n    })\n    .then(data => {\n      return data as UrlInfo;\n    });\n};\n\nexport const remove = (arr: unknown[], el: unknown): void => {\n  const i = arr.indexOf(el);\n  if (i !== -1) {\n    arr.splice(i, 1);\n  }\n};\n","// The following code is adapted from https://github.com/transloadit/uppy/blob/master/packages/%40uppy/aws-s3-multipart/src/MultipartUploader.js\n// which is released under a MIT License (https://github.com/transloadit/uppy/blob/master/LICENSE)\n\nimport BaseUpload, { InitialFile } from \"./base_upload\";\nimport {\n  abortMultipartUpload,\n  completeMultipartUpload,\n  createMultipartUpload,\n  getChunkSize,\n  MB,\n  MultipartUpload,\n  Part,\n  prepareUploadPart,\n  remove,\n  UrlInfo\n} from \"./s3_utils\";\n\ninterface ChunkState {\n  busy: boolean;\n  done: boolean;\n  etag?: string;\n  uploaded: number;\n}\n\ninterface S3UploadParameters {\n  csrfToken: string;\n  endpoint: string;\n  file: File;\n  s3UploadDir: string;\n  uploadIndex: number;\n}\n\nclass S3Upload extends BaseUpload {\n  public onError?: (error: Error) => void;\n  public onProgress?: (bytesUploaded: number, bytesTotal: number) => void;\n  public onSuccess?: () => void;\n\n  private chunkState: ChunkState[];\n  private chunks: Blob[];\n  private createdPromise: Promise<MultipartUpload>;\n  private csrfToken: string;\n  private endpoint: string;\n  private file: File;\n  private key: string | null;\n  private parts: Part[];\n  private s3UploadDir: string;\n  private uploadId: string | null;\n  private uploading: XMLHttpRequest[];\n\n  constructor({\n    csrfToken,\n    endpoint,\n    file,\n    s3UploadDir,\n    uploadIndex\n  }: S3UploadParameters) {\n    super({ name: file.name, status: \"uploading\", type: \"s3\", uploadIndex });\n\n    this.csrfToken = csrfToken;\n    this.endpoint = endpoint;\n    this.file = file;\n    this.s3UploadDir = s3UploadDir;\n\n    this.key = null;\n    this.uploadId = null;\n    this.parts = [];\n\n    // Do `this.createdPromise.then(OP)` to execute an operation `OP` _only_ if the\n    // upload was created already. That also ensures that the sequencing is right\n    // (so the `OP` definitely happens if the upload is created).\n    //\n    // This mostly exists to make `abortUpload` work well: only sending the abort request if\n    // the upload was already created, and if the createMultipartUpload request is still in flight,\n    // aborting it immediately after it finishes.\n    this.createdPromise = Promise.reject(); // eslint-disable-line prefer-promise-reject-errors\n    this.chunks = [];\n    this.chunkState = [];\n    this.uploading = [];\n    this.onError = undefined;\n    this.onProgress = undefined;\n    this.onSuccess = undefined;\n\n    this.initChunks();\n\n    this.createdPromise.catch(() => ({})); // silence uncaught rejection warning\n  }\n\n  public async abort(): Promise<void> {\n    this.uploading.slice().forEach(xhr => {\n      xhr.abort();\n    });\n    this.uploading = [];\n\n    await this.createdPromise;\n\n    if (this.key && this.uploadId) {\n      await abortMultipartUpload({\n        csrfToken: this.csrfToken,\n        endpoint: this.endpoint,\n        key: this.key,\n        uploadId: this.uploadId\n      });\n    }\n  }\n\n  public async delete(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  public getId(): string | undefined {\n    return this.uploadId || undefined;\n  }\n\n  public getInitialFile(): InitialFile {\n    return {\n      id: this.uploadId || \"\",\n      name: this.key || \"\",\n      size: this.file.size,\n      original_name: this.file.name,\n      type: \"s3\"\n    };\n  }\n\n  public getSize(): number {\n    return this.file.size;\n  }\n\n  public start(): void {\n    void this.createUpload();\n  }\n\n  private initChunks(): void {\n    const chunks: Blob[] = [];\n    const desiredChunkSize = getChunkSize(this.file);\n    // at least 5MB per request, at most 10k requests\n    const minChunkSize = Math.max(5 * MB, Math.ceil(this.file.size / 10000));\n    const chunkSize = Math.max(desiredChunkSize, minChunkSize);\n\n    for (let i = 0; i < this.file.size; i += chunkSize) {\n      const end = Math.min(this.file.size, i + chunkSize);\n      chunks.push(this.file.slice(i, end));\n    }\n\n    this.chunks = chunks;\n    this.chunkState = chunks.map(() => ({\n      uploaded: 0,\n      busy: false,\n      done: false\n    }));\n  }\n\n  private createUpload(): Promise<void> {\n    this.createdPromise = createMultipartUpload({\n      csrfToken: this.csrfToken,\n      endpoint: this.endpoint,\n      file: this.file,\n      s3UploadDir: this.s3UploadDir\n    });\n    return this.createdPromise\n      .then((result: MultipartUpload) => {\n        const valid =\n          typeof result === \"object\" &&\n          result &&\n          typeof result.uploadId === \"string\" &&\n          typeof result.key === \"string\";\n        if (!valid) {\n          throw new TypeError(\n            \"AwsS3/Multipart: Got incorrect result from `createMultipartUpload()`, expected an object `{ uploadId, key }`.\"\n          );\n        }\n\n        this.key = result.key;\n        this.uploadId = result.uploadId;\n\n        this.uploadParts();\n      })\n      .catch((err: Error) => {\n        this.handleError(err);\n      });\n  }\n\n  private uploadParts(): void {\n    const need = 1 - this.uploading.length;\n    if (need === 0) {\n      return;\n    }\n\n    // All parts are uploaded.\n    if (this.chunkState.every(state => state.done)) {\n      void this.completeUpload();\n      return;\n    }\n\n    const candidates = [];\n    for (let i = 0; i < this.chunkState.length; i++) {\n      const state = this.chunkState[i];\n\n      if (!state || state.done || state.busy) {\n        continue;\n      }\n\n      candidates.push(i);\n      if (candidates.length >= need) {\n        break;\n      }\n    }\n\n    candidates.forEach(index => {\n      void this.uploadPart(index);\n    });\n  }\n\n  private uploadPart(index: number): Promise<void> {\n    const state = this.chunkState[index];\n\n    if (state) {\n      state.busy = true;\n    }\n\n    if (!this.key || !this.uploadId) {\n      return Promise.resolve();\n    }\n\n    return prepareUploadPart({\n      csrfToken: this.csrfToken,\n      endpoint: this.endpoint,\n      key: this.key,\n      number: index + 1,\n      uploadId: this.uploadId\n    })\n      .then(result => {\n        const valid =\n          typeof result === \"object\" &&\n          result &&\n          typeof result.url === \"string\";\n        if (!valid) {\n          throw new TypeError(\n            \"AwsS3/Multipart: Got incorrect result from `prepareUploadPart()`, expected an object `{ url }`.\"\n          );\n        }\n        return result;\n      })\n      .then(\n        ({ url }: UrlInfo) => {\n          this.uploadPartBytes(index, url);\n        },\n        err => {\n          this.handleError(err as Error);\n        }\n      );\n  }\n\n  private onPartProgress(index: number, sent: number): void {\n    const state = this.chunkState[index];\n\n    if (state) {\n      state.uploaded = sent;\n    }\n\n    if (this.onProgress) {\n      const totalUploaded = this.chunkState.reduce((n, c) => n + c.uploaded, 0);\n      this.onProgress(totalUploaded, this.file.size);\n    }\n  }\n\n  private onPartComplete(index: number, etag: string): void {\n    const state = this.chunkState[index];\n\n    if (state) {\n      state.etag = etag;\n      state.done = true;\n    }\n\n    const part = {\n      PartNumber: index + 1,\n      ETag: etag\n    };\n    this.parts.push(part);\n\n    this.uploadParts();\n  }\n\n  private uploadPartBytes(index: number, url: string): void {\n    const body = this.chunks[index];\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"PUT\", url, true);\n    xhr.responseType = \"text\";\n\n    this.uploading.push(xhr);\n\n    xhr.upload.addEventListener(\"progress\", ev => {\n      if (!ev.lengthComputable) {\n        return;\n      }\n\n      this.onPartProgress(index, ev.loaded);\n    });\n\n    xhr.addEventListener(\"abort\", ev => {\n      remove(this.uploading, ev.target);\n\n      const state = this.chunkState[index];\n\n      if (state) {\n        state.busy = false;\n      }\n    });\n\n    xhr.addEventListener(\"load\", ev => {\n      const target = ev.target as XMLHttpRequest;\n      remove(this.uploading, target);\n\n      const state = this.chunkState[index];\n\n      if (state) {\n        state.busy = false;\n      }\n\n      if (target.status < 200 || target.status >= 300) {\n        this.handleError(new Error(\"Non 2xx\"));\n        return;\n      }\n\n      this.onPartProgress(index, body?.size || 0);\n\n      // NOTE This must be allowed by CORS.\n      const etag = target.getResponseHeader(\"ETag\");\n      if (etag === null) {\n        this.handleError(\n          new Error(\n            \"AwsS3/Multipart: Could not read the ETag header. This likely means CORS is not configured correctly on the S3 Bucket. See https://uppy.io/docs/aws-s3-multipart#S3-Bucket-Configuration for instructions.\"\n          )\n        );\n        return;\n      }\n\n      this.onPartComplete(index, etag);\n    });\n\n    xhr.addEventListener(\"error\", ev => {\n      remove(this.uploading, ev.target);\n\n      const state = this.chunkState[index];\n\n      if (state) {\n        state.busy = false;\n      }\n\n      const error = new Error(\"Unknown error\");\n      // error.source = ev.target\n      this.handleError(error);\n    });\n    xhr.send(body);\n  }\n\n  private completeUpload(): Promise<void> {\n    // Parts may not have completed uploading in sorted order, if limit > 1.\n    this.parts.sort((a, b) => a.PartNumber - b.PartNumber);\n\n    if (!this.uploadId || !this.key) {\n      return Promise.resolve();\n    }\n\n    return completeMultipartUpload({\n      csrfToken: this.csrfToken,\n      endpoint: this.endpoint,\n      key: this.key,\n      uploadId: this.uploadId,\n      parts: this.parts\n    }).then(\n      () => {\n        if (this.onSuccess) {\n          this.onSuccess();\n        }\n      },\n      err => {\n        this.handleError(err as Error);\n      }\n    );\n  }\n\n  private handleError(error: Error): void {\n    if (this.onError) {\n      this.onError(error);\n    } else {\n      throw error;\n    }\n  }\n}\n\nexport default S3Upload;\n","export const deleteUpload = async (\n  url: string,\n  csrfToken: string\n): Promise<void> =>\n  new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"DELETE\", url);\n\n    xhr.onload = (): void => {\n      if (xhr.status === 204) {\n        resolve();\n      } else {\n        reject();\n      }\n    };\n    xhr.setRequestHeader(\"Tus-Resumable\", \"1.0.0\");\n    xhr.setRequestHeader(\"X-CSRFToken\", csrfToken);\n    xhr.send(null);\n  });\n","import BaseUpload, {\n  InitialExistingFile,\n  InitialFile,\n  InitialPlaceholderFile,\n  InitialS3File,\n  InitialTusFile,\n  UploadType\n} from \"./base_upload\";\nimport { deleteUpload } from \"./tus_utils\";\n\ninterface BaseUploadedFileParameters {\n  name: string;\n  size: number;\n  type: UploadType;\n  uploadIndex: number;\n}\n\nexport abstract class BaseUploadedFile extends BaseUpload {\n  size: number;\n\n  constructor({ name, size, type, uploadIndex }: BaseUploadedFileParameters) {\n    super({ name, status: \"done\", type, uploadIndex });\n\n    this.size = size;\n  }\n\n  public async abort(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  public async delete(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  public getSize(): number | undefined {\n    return this.size;\n  }\n}\n\nclass PlaceholderFile extends BaseUploadedFile {\n  id: string;\n\n  constructor(initialFile: InitialPlaceholderFile, uploadIndex: number) {\n    super({\n      name: initialFile.name,\n      size: initialFile.size,\n      type: \"placeholder\",\n      uploadIndex\n    });\n\n    this.id = initialFile.id;\n  }\n\n  public getId(): string | undefined {\n    return undefined;\n  }\n\n  public getInitialFile(): InitialPlaceholderFile {\n    return {\n      id: this.id,\n      name: this.name,\n      size: this.size,\n      type: \"placeholder\"\n    };\n  }\n}\n\nexport class UploadedS3File extends BaseUploadedFile {\n  id: string;\n  key: string;\n\n  constructor(initialFile: InitialS3File, uploadIndex: number) {\n    super({\n      name: initialFile.original_name || initialFile.name,\n      size: initialFile.size,\n      type: \"uploadedS3\",\n      uploadIndex\n    });\n\n    this.id = initialFile.id;\n    this.key = initialFile.name;\n  }\n\n  public getId(): string | undefined {\n    return this.id;\n  }\n\n  getInitialFile(): InitialS3File {\n    return {\n      id: this.id,\n      name: this.key,\n      original_name: this.name,\n      size: this.size,\n      type: \"s3\"\n    };\n  }\n}\n\nexport class ExistingFile extends BaseUploadedFile {\n  constructor(initialFile: InitialExistingFile, uploadIndex: number) {\n    super({\n      name: initialFile.name,\n      size: initialFile.size,\n      type: \"existing\",\n      uploadIndex\n    });\n  }\n\n  public getId(): string | undefined {\n    return undefined;\n  }\n\n  public getInitialFile(): InitialExistingFile {\n    return {\n      name: this.name,\n      size: this.size,\n      type: \"existing\"\n    };\n  }\n}\n\ninterface UploadedTusFileParameters {\n  csrfToken: string;\n  initialFile: InitialTusFile;\n  uploadIndex: number;\n  uploadUrl: string;\n}\n\nexport class UploadedTusFile extends BaseUploadedFile {\n  csrfToken: string;\n  id: string;\n  url: string;\n\n  constructor({\n    csrfToken,\n    initialFile,\n    uploadIndex,\n    uploadUrl\n  }: UploadedTusFileParameters) {\n    super({\n      name: initialFile.name,\n      size: initialFile.size,\n      type: \"uploadedTus\",\n      uploadIndex\n    });\n\n    this.csrfToken = csrfToken;\n    this.id = initialFile.id;\n    this.url = `${uploadUrl}${initialFile.id}`;\n  }\n\n  public async delete(): Promise<void> {\n    await deleteUpload(this.url, this.csrfToken);\n  }\n\n  public getId(): string | undefined {\n    return this.id;\n  }\n\n  getInitialFile(): InitialTusFile {\n    return {\n      id: this.id,\n      name: this.name,\n      size: this.size,\n      type: \"tus\",\n      url: \"\"\n    };\n  }\n}\n\ninterface UploadedFileParameters {\n  csrfToken: string;\n  initialFile: InitialFile;\n  uploadIndex: number;\n  uploadUrl: string;\n}\n\nexport const createUploadedFile = ({\n  csrfToken,\n  initialFile,\n  uploadIndex,\n  uploadUrl\n}: UploadedFileParameters): BaseUploadedFile => {\n  switch (initialFile.type) {\n    case \"existing\":\n      return new ExistingFile(initialFile, uploadIndex);\n\n    case \"placeholder\":\n      return new PlaceholderFile(initialFile, uploadIndex);\n\n    case \"s3\":\n      return new UploadedS3File(initialFile, uploadIndex);\n\n    case \"tus\":\n      return new UploadedTusFile({\n        csrfToken,\n        initialFile,\n        uploadUrl,\n        uploadIndex\n      });\n  }\n};\n","/**\n *  base64.ts\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n *\n * @author Dan Kogai (https://github.com/dankogai)\n */\nconst version = '3.7.5';\n/**\n * @deprecated use lowercase `version`.\n */\nconst VERSION = version;\nconst _hasatob = typeof atob === 'function';\nconst _hasbtoa = typeof btoa === 'function';\nconst _hasBuffer = typeof Buffer === 'function';\nconst _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;\nconst _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;\nconst b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nconst b64chs = Array.prototype.slice.call(b64ch);\nconst b64tab = ((a) => {\n    let tab = {};\n    a.forEach((c, i) => tab[c] = i);\n    return tab;\n})(b64chs);\nconst b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\nconst _fromCC = String.fromCharCode.bind(String);\nconst _U8Afrom = typeof Uint8Array.from === 'function'\n    ? Uint8Array.from.bind(Uint8Array)\n    : (it) => new Uint8Array(Array.prototype.slice.call(it, 0));\nconst _mkUriSafe = (src) => src\n    .replace(/=/g, '').replace(/[+\\/]/g, (m0) => m0 == '+' ? '-' : '_');\nconst _tidyB64 = (s) => s.replace(/[^A-Za-z0-9\\+\\/]/g, '');\n/**\n * polyfill version of `btoa`\n */\nconst btoaPolyfill = (bin) => {\n    // console.log('polyfilled');\n    let u32, c0, c1, c2, asc = '';\n    const pad = bin.length % 3;\n    for (let i = 0; i < bin.length;) {\n        if ((c0 = bin.charCodeAt(i++)) > 255 ||\n            (c1 = bin.charCodeAt(i++)) > 255 ||\n            (c2 = bin.charCodeAt(i++)) > 255)\n            throw new TypeError('invalid character found');\n        u32 = (c0 << 16) | (c1 << 8) | c2;\n        asc += b64chs[u32 >> 18 & 63]\n            + b64chs[u32 >> 12 & 63]\n            + b64chs[u32 >> 6 & 63]\n            + b64chs[u32 & 63];\n    }\n    return pad ? asc.slice(0, pad - 3) + \"===\".substring(pad) : asc;\n};\n/**\n * does what `window.btoa` of web browsers do.\n * @param {String} bin binary string\n * @returns {string} Base64-encoded string\n */\nconst _btoa = _hasbtoa ? (bin) => btoa(bin)\n    : _hasBuffer ? (bin) => Buffer.from(bin, 'binary').toString('base64')\n        : btoaPolyfill;\nconst _fromUint8Array = _hasBuffer\n    ? (u8a) => Buffer.from(u8a).toString('base64')\n    : (u8a) => {\n        // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\n        const maxargs = 0x1000;\n        let strs = [];\n        for (let i = 0, l = u8a.length; i < l; i += maxargs) {\n            strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));\n        }\n        return _btoa(strs.join(''));\n    };\n/**\n * converts a Uint8Array to a Base64 string.\n * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 §5\n * @returns {string} Base64 string\n */\nconst fromUint8Array = (u8a, urlsafe = false) => urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const utob = (src: string) => unescape(encodeURIComponent(src));\n// reverting good old fationed regexp\nconst cb_utob = (c) => {\n    if (c.length < 2) {\n        var cc = c.charCodeAt(0);\n        return cc < 0x80 ? c\n            : cc < 0x800 ? (_fromCC(0xc0 | (cc >>> 6))\n                + _fromCC(0x80 | (cc & 0x3f)))\n                : (_fromCC(0xe0 | ((cc >>> 12) & 0x0f))\n                    + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                    + _fromCC(0x80 | (cc & 0x3f)));\n    }\n    else {\n        var cc = 0x10000\n            + (c.charCodeAt(0) - 0xD800) * 0x400\n            + (c.charCodeAt(1) - 0xDC00);\n        return (_fromCC(0xf0 | ((cc >>> 18) & 0x07))\n            + _fromCC(0x80 | ((cc >>> 12) & 0x3f))\n            + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n            + _fromCC(0x80 | (cc & 0x3f)));\n    }\n};\nconst re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-8 string\n * @returns {string} UTF-16 string\n */\nconst utob = (u) => u.replace(re_utob, cb_utob);\n//\nconst _encode = _hasBuffer\n    ? (s) => Buffer.from(s, 'utf8').toString('base64')\n    : _TE\n        ? (s) => _fromUint8Array(_TE.encode(s))\n        : (s) => _btoa(utob(s));\n/**\n * converts a UTF-8-encoded string to a Base64 string.\n * @param {boolean} [urlsafe] if `true` make the result URL-safe\n * @returns {string} Base64 string\n */\nconst encode = (src, urlsafe = false) => urlsafe\n    ? _mkUriSafe(_encode(src))\n    : _encode(src);\n/**\n * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 §5.\n * @returns {string} Base64 string\n */\nconst encodeURI = (src) => encode(src, true);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const btou = (src: string) => decodeURIComponent(escape(src));\n// reverting good old fationed regexp\nconst re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\nconst cb_btou = (cccc) => {\n    switch (cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                | ((0x3f & cccc.charCodeAt(1)) << 12)\n                | ((0x3f & cccc.charCodeAt(2)) << 6)\n                | (0x3f & cccc.charCodeAt(3)), offset = cp - 0x10000;\n            return (_fromCC((offset >>> 10) + 0xD800)\n                + _fromCC((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return _fromCC(((0x0f & cccc.charCodeAt(0)) << 12)\n                | ((0x3f & cccc.charCodeAt(1)) << 6)\n                | (0x3f & cccc.charCodeAt(2)));\n        default:\n            return _fromCC(((0x1f & cccc.charCodeAt(0)) << 6)\n                | (0x3f & cccc.charCodeAt(1)));\n    }\n};\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-16 string\n * @returns {string} UTF-8 string\n */\nconst btou = (b) => b.replace(re_btou, cb_btou);\n/**\n * polyfill version of `atob`\n */\nconst atobPolyfill = (asc) => {\n    // console.log('polyfilled');\n    asc = asc.replace(/\\s+/g, '');\n    if (!b64re.test(asc))\n        throw new TypeError('malformed base64.');\n    asc += '=='.slice(2 - (asc.length & 3));\n    let u24, bin = '', r1, r2;\n    for (let i = 0; i < asc.length;) {\n        u24 = b64tab[asc.charAt(i++)] << 18\n            | b64tab[asc.charAt(i++)] << 12\n            | (r1 = b64tab[asc.charAt(i++)]) << 6\n            | (r2 = b64tab[asc.charAt(i++)]);\n        bin += r1 === 64 ? _fromCC(u24 >> 16 & 255)\n            : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255)\n                : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);\n    }\n    return bin;\n};\n/**\n * does what `window.atob` of web browsers do.\n * @param {String} asc Base64-encoded string\n * @returns {string} binary string\n */\nconst _atob = _hasatob ? (asc) => atob(_tidyB64(asc))\n    : _hasBuffer ? (asc) => Buffer.from(asc, 'base64').toString('binary')\n        : atobPolyfill;\n//\nconst _toUint8Array = _hasBuffer\n    ? (a) => _U8Afrom(Buffer.from(a, 'base64'))\n    : (a) => _U8Afrom(_atob(a).split('').map(c => c.charCodeAt(0)));\n/**\n * converts a Base64 string to a Uint8Array.\n */\nconst toUint8Array = (a) => _toUint8Array(_unURI(a));\n//\nconst _decode = _hasBuffer\n    ? (a) => Buffer.from(a, 'base64').toString('utf8')\n    : _TD\n        ? (a) => _TD.decode(_toUint8Array(a))\n        : (a) => btou(_atob(a));\nconst _unURI = (a) => _tidyB64(a.replace(/[-_]/g, (m0) => m0 == '-' ? '+' : '/'));\n/**\n * converts a Base64 string to a UTF-8 string.\n * @param {String} src Base64 string.  Both normal and URL-safe are supported\n * @returns {string} UTF-8 string\n */\nconst decode = (src) => _decode(_unURI(src));\n/**\n * check if a value is a valid Base64 string\n * @param {String} src a value to check\n  */\nconst isValid = (src) => {\n    if (typeof src !== 'string')\n        return false;\n    const s = src.replace(/\\s+/g, '').replace(/={0,2}$/, '');\n    return !/[^\\s0-9a-zA-Z\\+/]/.test(s) || !/[^\\s0-9a-zA-Z\\-_]/.test(s);\n};\n//\nconst _noEnum = (v) => {\n    return {\n        value: v, enumerable: false, writable: true, configurable: true\n    };\n};\n/**\n * extend String.prototype with relevant methods\n */\nconst extendString = function () {\n    const _add = (name, body) => Object.defineProperty(String.prototype, name, _noEnum(body));\n    _add('fromBase64', function () { return decode(this); });\n    _add('toBase64', function (urlsafe) { return encode(this, urlsafe); });\n    _add('toBase64URI', function () { return encode(this, true); });\n    _add('toBase64URL', function () { return encode(this, true); });\n    _add('toUint8Array', function () { return toUint8Array(this); });\n};\n/**\n * extend Uint8Array.prototype with relevant methods\n */\nconst extendUint8Array = function () {\n    const _add = (name, body) => Object.defineProperty(Uint8Array.prototype, name, _noEnum(body));\n    _add('toBase64', function (urlsafe) { return fromUint8Array(this, urlsafe); });\n    _add('toBase64URI', function () { return fromUint8Array(this, true); });\n    _add('toBase64URL', function () { return fromUint8Array(this, true); });\n};\n/**\n * extend Builtin prototypes with relevant methods\n */\nconst extendBuiltins = () => {\n    extendString();\n    extendUint8Array();\n};\nconst gBase64 = {\n    version: version,\n    VERSION: VERSION,\n    atob: _atob,\n    atobPolyfill: atobPolyfill,\n    btoa: _btoa,\n    btoaPolyfill: btoaPolyfill,\n    fromBase64: decode,\n    toBase64: encode,\n    encode: encode,\n    encodeURI: encodeURI,\n    encodeURL: encodeURI,\n    utob: utob,\n    btou: btou,\n    decode: decode,\n    isValid: isValid,\n    fromUint8Array: fromUint8Array,\n    toUint8Array: toUint8Array,\n    extendString: extendString,\n    extendUint8Array: extendUint8Array,\n    extendBuiltins: extendBuiltins,\n};\n// makecjs:CUT //\nexport { version };\nexport { VERSION };\nexport { _atob as atob };\nexport { atobPolyfill };\nexport { _btoa as btoa };\nexport { btoaPolyfill };\nexport { decode as fromBase64 };\nexport { encode as toBase64 };\nexport { utob };\nexport { encode };\nexport { encodeURI };\nexport { encodeURI as encodeURL };\nexport { btou };\nexport { decode };\nexport { isValid };\nexport { fromUint8Array };\nexport { toUint8Array };\nexport { extendString };\nexport { extendUint8Array };\nexport { extendBuiltins };\n// and finally,\nexport { gBase64 as Base64 };\n","'use strict';\n\n/**\n * Check if we're required to add a port number.\n *\n * @see https://url.spec.whatwg.org/#default-port\n * @param {Number|String} port Port number we need to check\n * @param {String} protocol Protocol we need to check against.\n * @returns {Boolean} Is it a default port for the given protocol\n * @api private\n */\nmodule.exports = function required(port, protocol) {\n  protocol = protocol.split(':')[0];\n  port = +port;\n\n  if (!port) return false;\n\n  switch (protocol) {\n    case 'http':\n    case 'ws':\n    return port !== 80;\n\n    case 'https':\n    case 'wss':\n    return port !== 443;\n\n    case 'ftp':\n    return port !== 21;\n\n    case 'gopher':\n    return port !== 70;\n\n    case 'file':\n    return false;\n  }\n\n  return port !== 0;\n};\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , undef;\n\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String|Null} The decoded string.\n * @api private\n */\nfunction decode(input) {\n  try {\n    return decodeURIComponent(input.replace(/\\+/g, ' '));\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Attempts to encode a given input.\n *\n * @param {String} input The string that needs to be encoded.\n * @returns {String|Null} The encoded string.\n * @api private\n */\nfunction encode(input) {\n  try {\n    return encodeURIComponent(input);\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?#&]+)=?([^&]*)/g\n    , result = {}\n    , part;\n\n  while (part = parser.exec(query)) {\n    var key = decode(part[1])\n      , value = decode(part[2]);\n\n    //\n    // Prevent overriding of existing properties. This ensures that build-in\n    // methods like `toString` or __proto__ are not overriden by malicious\n    // querystrings.\n    //\n    // In the case if failed decoding, we want to omit the key/value pairs\n    // from the result.\n    //\n    if (key === null || value === null || key in result) continue;\n    result[key] = value;\n  }\n\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n\n  var pairs = []\n    , value\n    , key;\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (key in obj) {\n    if (has.call(obj, key)) {\n      value = obj[key];\n\n      //\n      // Edge cases where we actually want to encode the value to an empty\n      // string instead of the stringified value.\n      //\n      if (!value && (value === null || value === undef || isNaN(value))) {\n        value = '';\n      }\n\n      key = encode(key);\n      value = encode(value);\n\n      //\n      // If we failed to encode the strings, we should bail out as we don't\n      // want to add invalid strings to the query.\n      //\n      if (key === null || value === null) continue;\n      pairs.push(key +'='+ value);\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nexports.stringify = querystringify;\nexports.parse = querystring;\n","'use strict';\n\nvar required = require('requires-port')\n  , qs = require('querystringify')\n  , controlOrWhitespace = /^[\\x00-\\x20\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]+/\n  , CRHTLF = /[\\n\\r\\t]/g\n  , slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//\n  , port = /:\\d+$/\n  , protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\\\/]+)?([\\S\\s]*)/i\n  , windowsDriveLetter = /^[a-zA-Z]:/;\n\n/**\n * Remove control characters and whitespace from the beginning of a string.\n *\n * @param {Object|String} str String to trim.\n * @returns {String} A new string representing `str` stripped of control\n *     characters and whitespace from its beginning.\n * @public\n */\nfunction trimLeft(str) {\n  return (str ? str : '').toString().replace(controlOrWhitespace, '');\n}\n\n/**\n * These are the parse rules for the URL parser, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\nvar rules = [\n  ['#', 'hash'],                        // Extract from the back.\n  ['?', 'query'],                       // Extract from the back.\n  function sanitize(address, url) {     // Sanitize what is left of the address\n    return isSpecial(url.protocol) ? address.replace(/\\\\/g, '/') : address;\n  },\n  ['/', 'pathname'],                    // Extract from the back.\n  ['@', 'auth', 1],                     // Extract from the front.\n  [NaN, 'host', undefined, 1, 1],       // Set left over value.\n  [/:(\\d*)$/, 'port', undefined, 1],    // RegExp the back.\n  [NaN, 'hostname', undefined, 1, 1]    // Set left over.\n];\n\n/**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\nvar ignore = { hash: 1, query: 1 };\n\n/**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object|String} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @public\n */\nfunction lolcation(loc) {\n  var globalVar;\n\n  if (typeof window !== 'undefined') globalVar = window;\n  else if (typeof global !== 'undefined') globalVar = global;\n  else if (typeof self !== 'undefined') globalVar = self;\n  else globalVar = {};\n\n  var location = globalVar.location || {};\n  loc = loc || location;\n\n  var finaldestination = {}\n    , type = typeof loc\n    , key;\n\n  if ('blob:' === loc.protocol) {\n    finaldestination = new Url(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new Url(loc, {});\n    for (key in ignore) delete finaldestination[key];\n  } else if ('object' === type) {\n    for (key in loc) {\n      if (key in ignore) continue;\n      finaldestination[key] = loc[key];\n    }\n\n    if (finaldestination.slashes === undefined) {\n      finaldestination.slashes = slashes.test(loc.href);\n    }\n  }\n\n  return finaldestination;\n}\n\n/**\n * Check whether a protocol scheme is special.\n *\n * @param {String} The protocol scheme of the URL\n * @return {Boolean} `true` if the protocol scheme is special, else `false`\n * @private\n */\nfunction isSpecial(scheme) {\n  return (\n    scheme === 'file:' ||\n    scheme === 'ftp:' ||\n    scheme === 'http:' ||\n    scheme === 'https:' ||\n    scheme === 'ws:' ||\n    scheme === 'wss:'\n  );\n}\n\n/**\n * @typedef ProtocolExtract\n * @type Object\n * @property {String} protocol Protocol matched in the URL, in lowercase.\n * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n * @property {String} rest Rest of the URL that is not part of the protocol.\n */\n\n/**\n * Extract protocol information from a URL with/without double slash (\"//\").\n *\n * @param {String} address URL we want to extract from.\n * @param {Object} location\n * @return {ProtocolExtract} Extracted information.\n * @private\n */\nfunction extractProtocol(address, location) {\n  address = trimLeft(address);\n  address = address.replace(CRHTLF, '');\n  location = location || {};\n\n  var match = protocolre.exec(address);\n  var protocol = match[1] ? match[1].toLowerCase() : '';\n  var forwardSlashes = !!match[2];\n  var otherSlashes = !!match[3];\n  var slashesCount = 0;\n  var rest;\n\n  if (forwardSlashes) {\n    if (otherSlashes) {\n      rest = match[2] + match[3] + match[4];\n      slashesCount = match[2].length + match[3].length;\n    } else {\n      rest = match[2] + match[4];\n      slashesCount = match[2].length;\n    }\n  } else {\n    if (otherSlashes) {\n      rest = match[3] + match[4];\n      slashesCount = match[3].length;\n    } else {\n      rest = match[4]\n    }\n  }\n\n  if (protocol === 'file:') {\n    if (slashesCount >= 2) {\n      rest = rest.slice(2);\n    }\n  } else if (isSpecial(protocol)) {\n    rest = match[4];\n  } else if (protocol) {\n    if (forwardSlashes) {\n      rest = rest.slice(2);\n    }\n  } else if (slashesCount >= 2 && isSpecial(location.protocol)) {\n    rest = match[4];\n  }\n\n  return {\n    protocol: protocol,\n    slashes: forwardSlashes || isSpecial(protocol),\n    slashesCount: slashesCount,\n    rest: rest\n  };\n}\n\n/**\n * Resolve a relative URL pathname against a base URL pathname.\n *\n * @param {String} relative Pathname of the relative URL.\n * @param {String} base Pathname of the base URL.\n * @return {String} Resolved pathname.\n * @private\n */\nfunction resolve(relative, base) {\n  if (relative === '') return base;\n\n  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))\n    , i = path.length\n    , last = path[i - 1]\n    , unshift = false\n    , up = 0;\n\n  while (i--) {\n    if (path[i] === '.') {\n      path.splice(i, 1);\n    } else if (path[i] === '..') {\n      path.splice(i, 1);\n      up++;\n    } else if (up) {\n      if (i === 0) unshift = true;\n      path.splice(i, 1);\n      up--;\n    }\n  }\n\n  if (unshift) path.unshift('');\n  if (last === '.' || last === '..') path.push('');\n\n  return path.join('/');\n}\n\n/**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my OCD.\n *\n * It is worth noting that we should not use `URL` as class name to prevent\n * clashes with the global URL instance that got introduced in browsers.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Object|String} [location] Location defaults for relative paths.\n * @param {Boolean|Function} [parser] Parser for the query string.\n * @private\n */\nfunction Url(address, location, parser) {\n  address = trimLeft(address);\n  address = address.replace(CRHTLF, '');\n\n  if (!(this instanceof Url)) {\n    return new Url(address, location, parser);\n  }\n\n  var relative, extracted, parse, instruction, index, key\n    , instructions = rules.slice()\n    , type = typeof location\n    , url = this\n    , i = 0;\n\n  //\n  // The following if statements allows this module two have compatibility with\n  // 2 different API:\n  //\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n  //    where the boolean indicates that the query string should also be parsed.\n  //\n  // 2. The `URL` interface of the browser which accepts a URL, object as\n  //    arguments. The supplied object will be used as default values / fall-back\n  //    for relative paths.\n  //\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n\n  if (parser && 'function' !== typeof parser) parser = qs.parse;\n\n  location = lolcation(location);\n\n  //\n  // Extract protocol information before running the instructions.\n  //\n  extracted = extractProtocol(address || '', location);\n  relative = !extracted.protocol && !extracted.slashes;\n  url.slashes = extracted.slashes || relative && location.slashes;\n  url.protocol = extracted.protocol || location.protocol || '';\n  address = extracted.rest;\n\n  //\n  // When the authority component is absent the URL starts with a path\n  // component.\n  //\n  if (\n    extracted.protocol === 'file:' && (\n      extracted.slashesCount !== 2 || windowsDriveLetter.test(address)) ||\n    (!extracted.slashes &&\n      (extracted.protocol ||\n        extracted.slashesCount < 2 ||\n        !isSpecial(url.protocol)))\n  ) {\n    instructions[3] = [/(.*)/, 'pathname'];\n  }\n\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n\n    if (typeof instruction === 'function') {\n      address = instruction(address, url);\n      continue;\n    }\n\n    parse = instruction[0];\n    key = instruction[1];\n\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      index = parse === '@'\n        ? address.lastIndexOf(parse)\n        : address.indexOf(parse);\n\n      if (~index) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if ((index = parse.exec(address))) {\n      url[key] = index[1];\n      address = address.slice(0, index.index);\n    }\n\n    url[key] = url[key] || (\n      relative && instruction[3] ? location[key] || '' : ''\n    );\n\n    //\n    // Hostname, host and protocol should be lowercased so they can be used to\n    // create a proper `origin`.\n    //\n    if (instruction[4]) url[key] = url[key].toLowerCase();\n  }\n\n  //\n  // Also parse the supplied query string in to an object. If we're supplied\n  // with a custom parser as function use that instead of the default build-in\n  // parser.\n  //\n  if (parser) url.query = parser(url.query);\n\n  //\n  // If the URL is relative, resolve the pathname against the base URL.\n  //\n  if (\n      relative\n    && location.slashes\n    && url.pathname.charAt(0) !== '/'\n    && (url.pathname !== '' || location.pathname !== '')\n  ) {\n    url.pathname = resolve(url.pathname, location.pathname);\n  }\n\n  //\n  // Default to a / for pathname if none exists. This normalizes the URL\n  // to always have a /\n  //\n  if (url.pathname.charAt(0) !== '/' && isSpecial(url.protocol)) {\n    url.pathname = '/' + url.pathname;\n  }\n\n  //\n  // We should not add port numbers if they are already the default port number\n  // for a given protocol. As the host also contains the port number we're going\n  // override it with the hostname which contains no port number.\n  //\n  if (!required(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  }\n\n  //\n  // Parse down the `auth` for the username and password.\n  //\n  url.username = url.password = '';\n\n  if (url.auth) {\n    index = url.auth.indexOf(':');\n\n    if (~index) {\n      url.username = url.auth.slice(0, index);\n      url.username = encodeURIComponent(decodeURIComponent(url.username));\n\n      url.password = url.auth.slice(index + 1);\n      url.password = encodeURIComponent(decodeURIComponent(url.password))\n    } else {\n      url.username = encodeURIComponent(decodeURIComponent(url.auth));\n    }\n\n    url.auth = url.password ? url.username +':'+ url.password : url.username;\n  }\n\n  url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  //\n  // The href is just the compiled result.\n  //\n  url.href = url.toString();\n}\n\n/**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} part          Property we need to adjust.\n * @param {Mixed} value          The newly assigned value.\n * @param {Boolean|Function} fn  When setting the query, it will be the function\n *                               used to parse the query.\n *                               When setting the protocol, double slash will be\n *                               removed from the final url if it is true.\n * @returns {URL} URL instance for chaining.\n * @public\n */\nfunction set(part, value, fn) {\n  var url = this;\n\n  switch (part) {\n    case 'query':\n      if ('string' === typeof value && value.length) {\n        value = (fn || qs.parse)(value);\n      }\n\n      url[part] = value;\n      break;\n\n    case 'port':\n      url[part] = value;\n\n      if (!required(value, url.protocol)) {\n        url.host = url.hostname;\n        url[part] = '';\n      } else if (value) {\n        url.host = url.hostname +':'+ value;\n      }\n\n      break;\n\n    case 'hostname':\n      url[part] = value;\n\n      if (url.port) value += ':'+ url.port;\n      url.host = value;\n      break;\n\n    case 'host':\n      url[part] = value;\n\n      if (port.test(value)) {\n        value = value.split(':');\n        url.port = value.pop();\n        url.hostname = value.join(':');\n      } else {\n        url.hostname = value;\n        url.port = '';\n      }\n\n      break;\n\n    case 'protocol':\n      url.protocol = value.toLowerCase();\n      url.slashes = !fn;\n      break;\n\n    case 'pathname':\n    case 'hash':\n      if (value) {\n        var char = part === 'pathname' ? '/' : '#';\n        url[part] = value.charAt(0) !== char ? char + value : value;\n      } else {\n        url[part] = value;\n      }\n      break;\n\n    case 'username':\n    case 'password':\n      url[part] = encodeURIComponent(value);\n      break;\n\n    case 'auth':\n      var index = value.indexOf(':');\n\n      if (~index) {\n        url.username = value.slice(0, index);\n        url.username = encodeURIComponent(decodeURIComponent(url.username));\n\n        url.password = value.slice(index + 1);\n        url.password = encodeURIComponent(decodeURIComponent(url.password));\n      } else {\n        url.username = encodeURIComponent(decodeURIComponent(value));\n      }\n  }\n\n  for (var i = 0; i < rules.length; i++) {\n    var ins = rules[i];\n\n    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\n  }\n\n  url.auth = url.password ? url.username +':'+ url.password : url.username;\n\n  url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  url.href = url.toString();\n\n  return url;\n}\n\n/**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String} Compiled version of the URL.\n * @public\n */\nfunction toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;\n\n  var query\n    , url = this\n    , host = url.host\n    , protocol = url.protocol;\n\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\n\n  var result =\n    protocol +\n    ((url.protocol && url.slashes) || isSpecial(url.protocol) ? '//' : '');\n\n  if (url.username) {\n    result += url.username;\n    if (url.password) result += ':'+ url.password;\n    result += '@';\n  } else if (url.password) {\n    result += ':'+ url.password;\n    result += '@';\n  } else if (\n    url.protocol !== 'file:' &&\n    isSpecial(url.protocol) &&\n    !host &&\n    url.pathname !== '/'\n  ) {\n    //\n    // Add back the empty userinfo, otherwise the original invalid URL\n    // might be transformed into a valid one with `url.pathname` as host.\n    //\n    result += '@';\n  }\n\n  //\n  // Trailing colon is removed from `url.host` when it is parsed. If it still\n  // ends with a colon, then add back the trailing colon that was removed. This\n  // prevents an invalid URL from being transformed into a valid one.\n  //\n  if (host[host.length - 1] === ':' || (port.test(url.hostname) && !url.port)) {\n    host += ':';\n  }\n\n  result += host + url.pathname;\n\n  query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n  if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;\n\n  if (url.hash) result += url.hash;\n\n  return result;\n}\n\nUrl.prototype = { set: set, toString: toString };\n\n//\n// Expose the URL parser and some additional properties that might be useful for\n// others or testing.\n//\nUrl.extractProtocol = extractProtocol;\nUrl.location = lolcation;\nUrl.trimLeft = trimLeft;\nUrl.qs = qs;\n\nmodule.exports = Url;\n","class DetailedError extends Error {\n  constructor(message, causingErr = null, req = null, res = null) {\n    super(message)\n\n    this.originalRequest = req\n    this.originalResponse = res\n    this.causingError = causingErr\n\n    if (causingErr != null) {\n      message += `, caused by ${causingErr.toString()}`\n    }\n\n    if (req != null) {\n      const requestId = req.getHeader('X-Request-ID') || 'n/a'\n      const method = req.getMethod()\n      const url = req.getURL()\n      const status = res ? res.getStatus() : 'n/a'\n      const body = res ? res.getBody() || '' : 'n/a'\n      message += `, originated from request (method: ${method}, url: ${url}, response code: ${status}, response text: ${body}, request id: ${requestId})`\n    }\n    this.message = message\n  }\n}\n\nexport default DetailedError\n","import { Base64 } from 'js-base64'\nimport URL from 'url-parse'\nimport DetailedError from './error.js'\nimport { log } from './logger.js'\nimport uuid from './uuid.js'\n\nconst defaultOptions = {\n  endpoint: null,\n\n  uploadUrl: null,\n  metadata: {},\n  fingerprint: null,\n  uploadSize: null,\n\n  onProgress: null,\n  onChunkComplete: null,\n  onSuccess: null,\n  onError: null,\n  onUploadUrlAvailable: null,\n\n  overridePatchMethod: false,\n  headers: {},\n  addRequestId: false,\n  onBeforeRequest: null,\n  onAfterResponse: null,\n  onShouldRetry: null,\n\n  chunkSize: Infinity,\n  retryDelays: [0, 1000, 3000, 5000],\n  parallelUploads: 1,\n  parallelUploadBoundaries: null,\n  storeFingerprintForResuming: true,\n  removeFingerprintOnSuccess: false,\n  uploadLengthDeferred: false,\n  uploadDataDuringCreation: false,\n\n  urlStorage: null,\n  fileReader: null,\n  httpStack: null,\n}\n\nclass BaseUpload {\n  constructor(file, options) {\n    // Warn about removed options from previous versions\n    if ('resume' in options) {\n      console.log(\n        'tus: The `resume` option has been removed in tus-js-client v2. Please use the URL storage API instead.'\n      ) // eslint-disable-line no-console\n    }\n\n    // The default options will already be added from the wrapper classes.\n    this.options = options\n\n    // Cast chunkSize to integer\n    this.options.chunkSize = Number(this.options.chunkSize)\n\n    // The storage module used to store URLs\n    this._urlStorage = this.options.urlStorage\n\n    // The underlying File/Blob object\n    this.file = file\n\n    // The URL against which the file will be uploaded\n    this.url = null\n\n    // The underlying request object for the current PATCH request\n    this._req = null\n\n    // The fingerpinrt for the current file (set after start())\n    this._fingerprint = null\n\n    // The key that the URL storage returned when saving an URL with a fingerprint,\n    this._urlStorageKey = null\n\n    // The offset used in the current PATCH request\n    this._offset = null\n\n    // True if the current PATCH request has been aborted\n    this._aborted = false\n\n    // The file's size in bytes\n    this._size = null\n\n    // The Source object which will wrap around the given file and provides us\n    // with a unified interface for getting its size and slice chunks from its\n    // content allowing us to easily handle Files, Blobs, Buffers and Streams.\n    this._source = null\n\n    // The current count of attempts which have been made. Zero indicates none.\n    this._retryAttempt = 0\n\n    // The timeout's ID which is used to delay the next retry\n    this._retryTimeout = null\n\n    // The offset of the remote upload before the latest attempt was started.\n    this._offsetBeforeRetry = 0\n\n    // An array of BaseUpload instances which are used for uploading the different\n    // parts, if the parallelUploads option is used.\n    this._parallelUploads = null\n\n    // An array of upload URLs which are used for uploading the different\n    // parts, if the parallelUploads option is used.\n    this._parallelUploadUrls = null\n  }\n\n  /**\n   * Use the Termination extension to delete an upload from the server by sending a DELETE\n   * request to the specified upload URL. This is only possible if the server supports the\n   * Termination extension. If the `options.retryDelays` property is set, the method will\n   * also retry if an error ocurrs.\n   *\n   * @param {String} url The upload's URL which will be terminated.\n   * @param {object} options Optional options for influencing HTTP requests.\n   * @return {Promise} The Promise will be resolved/rejected when the requests finish.\n   */\n  static terminate(url, options = {}) {\n    const req = openRequest('DELETE', url, options)\n\n    return sendRequest(req, null, options)\n      .then((res) => {\n        // A 204 response indicates a successfull request\n        if (res.getStatus() === 204) {\n          return\n        }\n\n        throw new DetailedError('tus: unexpected response while terminating upload', null, req, res)\n      })\n      .catch((err) => {\n        if (!(err instanceof DetailedError)) {\n          err = new DetailedError('tus: failed to terminate upload', err, req, null)\n        }\n\n        if (!shouldRetry(err, 0, options)) {\n          throw err\n        }\n\n        // Instead of keeping track of the retry attempts, we remove the first element from the delays\n        // array. If the array is empty, all retry attempts are used up and we will bubble up the error.\n        // We recursively call the terminate function will removing elements from the retryDelays array.\n        const delay = options.retryDelays[0]\n        const remainingDelays = options.retryDelays.slice(1)\n        const newOptions = {\n          ...options,\n          retryDelays: remainingDelays,\n        }\n        return new Promise((resolve) => setTimeout(resolve, delay)).then(() =>\n          BaseUpload.terminate(url, newOptions)\n        )\n      })\n  }\n\n  findPreviousUploads() {\n    return this.options\n      .fingerprint(this.file, this.options)\n      .then((fingerprint) => this._urlStorage.findUploadsByFingerprint(fingerprint))\n  }\n\n  resumeFromPreviousUpload(previousUpload) {\n    this.url = previousUpload.uploadUrl || null\n    this._parallelUploadUrls = previousUpload.parallelUploadUrls || null\n    this._urlStorageKey = previousUpload.urlStorageKey\n  }\n\n  start() {\n    const { file } = this\n\n    if (!file) {\n      this._emitError(new Error('tus: no file or stream to upload provided'))\n      return\n    }\n\n    if (!this.options.endpoint && !this.options.uploadUrl && !this.url) {\n      this._emitError(new Error('tus: neither an endpoint or an upload URL is provided'))\n      return\n    }\n\n    const { retryDelays } = this.options\n    if (retryDelays != null && Object.prototype.toString.call(retryDelays) !== '[object Array]') {\n      this._emitError(new Error('tus: the `retryDelays` option must either be an array or null'))\n      return\n    }\n\n    if (this.options.parallelUploads > 1) {\n      // Test which options are incompatible with parallel uploads.\n      for (const optionName of ['uploadUrl', 'uploadSize', 'uploadLengthDeferred']) {\n        if (this.options[optionName]) {\n          this._emitError(\n            new Error(`tus: cannot use the ${optionName} option when parallelUploads is enabled`)\n          )\n          return\n        }\n      }\n    }\n\n    if (this.options.parallelUploadBoundaries) {\n      if (this.options.parallelUploads <= 1) {\n        this._emitError(\n          new Error(\n            'tus: cannot use the `parallelUploadBoundaries` option when `parallelUploads` is disabled'\n          )\n        )\n        return\n      }\n      if (this.options.parallelUploads !== this.options.parallelUploadBoundaries.length) {\n        this._emitError(\n          new Error(\n            'tus: the `parallelUploadBoundaries` must have the same length as the value of `parallelUploads`'\n          )\n        )\n        return\n      }\n    }\n\n    this.options\n      .fingerprint(file, this.options)\n      .then((fingerprint) => {\n        if (fingerprint == null) {\n          log(\n            'No fingerprint was calculated meaning that the upload cannot be stored in the URL storage.'\n          )\n        } else {\n          log(`Calculated fingerprint: ${fingerprint}`)\n        }\n\n        this._fingerprint = fingerprint\n\n        if (this._source) {\n          return this._source\n        }\n        return this.options.fileReader.openFile(file, this.options.chunkSize)\n      })\n      .then((source) => {\n        this._source = source\n\n        // First, we look at the uploadLengthDeferred option.\n        // Next, we check if the caller has supplied a manual upload size.\n        // Finally, we try to use the calculated size from the source object.\n        if (this.options.uploadLengthDeferred) {\n          this._size = null\n        } else if (this.options.uploadSize != null) {\n          this._size = Number(this.options.uploadSize)\n          if (Number.isNaN(this._size)) {\n            this._emitError(new Error('tus: cannot convert `uploadSize` option into a number'))\n            return\n          }\n        } else {\n          this._size = this._source.size\n          if (this._size == null) {\n            this._emitError(\n              new Error(\n                \"tus: cannot automatically derive upload's size from input. Specify it manually using the `uploadSize` option or use the `uploadLengthDeferred` option\"\n              )\n            )\n            return\n          }\n        }\n\n        // If the upload was configured to use multiple requests or if we resume from\n        // an upload which used multiple requests, we start a parallel upload.\n        if (this.options.parallelUploads > 1 || this._parallelUploadUrls != null) {\n          this._startParallelUpload()\n        } else {\n          this._startSingleUpload()\n        }\n      })\n      .catch((err) => {\n        this._emitError(err)\n      })\n  }\n\n  /**\n   * Initiate the uploading procedure for a parallelized upload, where one file is split into\n   * multiple request which are run in parallel.\n   *\n   * @api private\n   */\n  _startParallelUpload() {\n    const totalSize = this._size\n    let totalProgress = 0\n    this._parallelUploads = []\n\n    const partCount =\n      this._parallelUploadUrls != null\n        ? this._parallelUploadUrls.length\n        : this.options.parallelUploads\n\n    // The input file will be split into multiple slices which are uploaded in separate\n    // requests. Here we get the start and end position for the slices.\n    const parts =\n      this.options.parallelUploadBoundaries ?? splitSizeIntoParts(this._source.size, partCount)\n\n    // Attach URLs from previous uploads, if available.\n    if (this._parallelUploadUrls) {\n      parts.forEach((part, index) => {\n        part.uploadUrl = this._parallelUploadUrls[index] || null\n      })\n    }\n\n    // Create an empty list for storing the upload URLs\n    this._parallelUploadUrls = new Array(parts.length)\n\n    // Generate a promise for each slice that will be resolve if the respective\n    // upload is completed.\n    const uploads = parts.map((part, index) => {\n      let lastPartProgress = 0\n\n      return this._source.slice(part.start, part.end).then(\n        ({ value }) =>\n          new Promise((resolve, reject) => {\n            // Merge with the user supplied options but overwrite some values.\n            const options = {\n              ...this.options,\n              // If available, the partial upload should be resumed from a previous URL.\n              uploadUrl: part.uploadUrl || null,\n              // We take manually care of resuming for partial uploads, so they should\n              // not be stored in the URL storage.\n              storeFingerprintForResuming: false,\n              removeFingerprintOnSuccess: false,\n              // Reset the parallelUploads option to not cause recursion.\n              parallelUploads: 1,\n              // Reset this option as we are not doing a parallel upload.\n              parallelUploadBoundaries: null,\n              metadata: {},\n              // Add the header to indicate the this is a partial upload.\n              headers: {\n                ...this.options.headers,\n                'Upload-Concat': 'partial',\n              },\n              // Reject or resolve the promise if the upload errors or completes.\n              onSuccess: resolve,\n              onError: reject,\n              // Based in the progress for this partial upload, calculate the progress\n              // for the entire final upload.\n              onProgress: (newPartProgress) => {\n                totalProgress = totalProgress - lastPartProgress + newPartProgress\n                lastPartProgress = newPartProgress\n                this._emitProgress(totalProgress, totalSize)\n              },\n              // Wait until every partial upload has an upload URL, so we can add\n              // them to the URL storage.\n              onUploadUrlAvailable: () => {\n                this._parallelUploadUrls[index] = upload.url\n                // Test if all uploads have received an URL\n                if (this._parallelUploadUrls.filter((u) => Boolean(u)).length === parts.length) {\n                  this._saveUploadInUrlStorage()\n                }\n              },\n            }\n\n            const upload = new BaseUpload(value, options)\n            upload.start()\n\n            // Store the upload in an array, so we can later abort them if necessary.\n            this._parallelUploads.push(upload)\n          })\n      )\n    })\n\n    let req\n    // Wait until all partial uploads are finished and we can send the POST request for\n    // creating the final upload.\n    Promise.all(uploads)\n      .then(() => {\n        req = this._openRequest('POST', this.options.endpoint)\n        req.setHeader('Upload-Concat', `final;${this._parallelUploadUrls.join(' ')}`)\n\n        // Add metadata if values have been added\n        const metadata = encodeMetadata(this.options.metadata)\n        if (metadata !== '') {\n          req.setHeader('Upload-Metadata', metadata)\n        }\n\n        return this._sendRequest(req, null)\n      })\n      .then((res) => {\n        if (!inStatusCategory(res.getStatus(), 200)) {\n          this._emitHttpError(req, res, 'tus: unexpected response while creating upload')\n          return\n        }\n\n        const location = res.getHeader('Location')\n        if (location == null) {\n          this._emitHttpError(req, res, 'tus: invalid or missing Location header')\n          return\n        }\n\n        this.url = resolveUrl(this.options.endpoint, location)\n        log(`Created upload at ${this.url}`)\n\n        this._emitSuccess()\n      })\n      .catch((err) => {\n        this._emitError(err)\n      })\n  }\n\n  /**\n   * Initiate the uploading procedure for a non-parallel upload. Here the entire file is\n   * uploaded in a sequential matter.\n   *\n   * @api private\n   */\n  _startSingleUpload() {\n    // Reset the aborted flag when the upload is started or else the\n    // _performUpload will stop before sending a request if the upload has been\n    // aborted previously.\n    this._aborted = false\n\n    // The upload had been started previously and we should reuse this URL.\n    if (this.url != null) {\n      log(`Resuming upload from previous URL: ${this.url}`)\n      this._resumeUpload()\n      return\n    }\n\n    // A URL has manually been specified, so we try to resume\n    if (this.options.uploadUrl != null) {\n      log(`Resuming upload from provided URL: ${this.options.uploadUrl}`)\n      this.url = this.options.uploadUrl\n      this._resumeUpload()\n      return\n    }\n\n    // An upload has not started for the file yet, so we start a new one\n    log('Creating a new upload')\n    this._createUpload()\n  }\n\n  /**\n   * Abort any running request and stop the current upload. After abort is called, no event\n   * handler will be invoked anymore. You can use the `start` method to resume the upload\n   * again.\n   * If `shouldTerminate` is true, the `terminate` function will be called to remove the\n   * current upload from the server.\n   *\n   * @param {boolean} shouldTerminate True if the upload should be deleted from the server.\n   * @return {Promise} The Promise will be resolved/rejected when the requests finish.\n   */\n  abort(shouldTerminate) {\n    // Stop any parallel partial uploads, that have been started in _startParallelUploads.\n    if (this._parallelUploads != null) {\n      this._parallelUploads.forEach((upload) => {\n        upload.abort(shouldTerminate)\n      })\n    }\n\n    // Stop any current running request.\n    if (this._req !== null) {\n      this._req.abort()\n      // Note: We do not close the file source here, so the user can resume in the future.\n    }\n    this._aborted = true\n\n    // Stop any timeout used for initiating a retry.\n    if (this._retryTimeout != null) {\n      clearTimeout(this._retryTimeout)\n      this._retryTimeout = null\n    }\n\n    if (!shouldTerminate || this.url == null) {\n      return Promise.resolve()\n    }\n\n    return (\n      BaseUpload.terminate(this.url, this.options)\n        // Remove entry from the URL storage since the upload URL is no longer valid.\n        .then(() => this._removeFromUrlStorage())\n    )\n  }\n\n  _emitHttpError(req, res, message, causingErr) {\n    this._emitError(new DetailedError(message, causingErr, req, res))\n  }\n\n  _emitError(err) {\n    // Do not emit errors, e.g. from aborted HTTP requests, if the upload has been stopped.\n    if (this._aborted) return\n\n    // Check if we should retry, when enabled, before sending the error to the user.\n    if (this.options.retryDelays != null) {\n      // We will reset the attempt counter if\n      // - we were already able to connect to the server (offset != null) and\n      // - we were able to upload a small chunk of data to the server\n      const shouldResetDelays = this._offset != null && this._offset > this._offsetBeforeRetry\n      if (shouldResetDelays) {\n        this._retryAttempt = 0\n      }\n\n      if (shouldRetry(err, this._retryAttempt, this.options)) {\n        const delay = this.options.retryDelays[this._retryAttempt++]\n\n        this._offsetBeforeRetry = this._offset\n\n        this._retryTimeout = setTimeout(() => {\n          this.start()\n        }, delay)\n        return\n      }\n    }\n\n    if (typeof this.options.onError === 'function') {\n      this.options.onError(err)\n    } else {\n      throw err\n    }\n  }\n\n  /**\n   * Publishes notification if the upload has been successfully completed.\n   *\n   * @api private\n   */\n  _emitSuccess() {\n    if (this.options.removeFingerprintOnSuccess) {\n      // Remove stored fingerprint and corresponding endpoint. This causes\n      // new uploads of the same file to be treated as a different file.\n      this._removeFromUrlStorage()\n    }\n\n    if (typeof this.options.onSuccess === 'function') {\n      this.options.onSuccess()\n    }\n  }\n\n  /**\n   * Publishes notification when data has been sent to the server. This\n   * data may not have been accepted by the server yet.\n   *\n   * @param {number} bytesSent  Number of bytes sent to the server.\n   * @param {number} bytesTotal Total number of bytes to be sent to the server.\n   * @api private\n   */\n  _emitProgress(bytesSent, bytesTotal) {\n    if (typeof this.options.onProgress === 'function') {\n      this.options.onProgress(bytesSent, bytesTotal)\n    }\n  }\n\n  /**\n   * Publishes notification when a chunk of data has been sent to the server\n   * and accepted by the server.\n   * @param {number} chunkSize  Size of the chunk that was accepted by the server.\n   * @param {number} bytesAccepted Total number of bytes that have been\n   *                                accepted by the server.\n   * @param {number} bytesTotal Total number of bytes to be sent to the server.\n   * @api private\n   */\n  _emitChunkComplete(chunkSize, bytesAccepted, bytesTotal) {\n    if (typeof this.options.onChunkComplete === 'function') {\n      this.options.onChunkComplete(chunkSize, bytesAccepted, bytesTotal)\n    }\n  }\n\n  /**\n   * Create a new upload using the creation extension by sending a POST\n   * request to the endpoint. After successful creation the file will be\n   * uploaded\n   *\n   * @api private\n   */\n  _createUpload() {\n    if (!this.options.endpoint) {\n      this._emitError(new Error('tus: unable to create upload because no endpoint is provided'))\n      return\n    }\n\n    const req = this._openRequest('POST', this.options.endpoint)\n\n    if (this.options.uploadLengthDeferred) {\n      req.setHeader('Upload-Defer-Length', 1)\n    } else {\n      req.setHeader('Upload-Length', this._size)\n    }\n\n    // Add metadata if values have been added\n    const metadata = encodeMetadata(this.options.metadata)\n    if (metadata !== '') {\n      req.setHeader('Upload-Metadata', metadata)\n    }\n\n    let promise\n    if (this.options.uploadDataDuringCreation && !this.options.uploadLengthDeferred) {\n      this._offset = 0\n      promise = this._addChunkToRequest(req)\n    } else {\n      promise = this._sendRequest(req, null)\n    }\n\n    promise\n      .then((res) => {\n        if (!inStatusCategory(res.getStatus(), 200)) {\n          this._emitHttpError(req, res, 'tus: unexpected response while creating upload')\n          return\n        }\n\n        const location = res.getHeader('Location')\n        if (location == null) {\n          this._emitHttpError(req, res, 'tus: invalid or missing Location header')\n          return\n        }\n\n        this.url = resolveUrl(this.options.endpoint, location)\n        log(`Created upload at ${this.url}`)\n\n        if (typeof this.options.onUploadUrlAvailable === 'function') {\n          this.options.onUploadUrlAvailable()\n        }\n\n        if (this._size === 0) {\n          // Nothing to upload and file was successfully created\n          this._emitSuccess()\n          this._source.close()\n          return\n        }\n\n        this._saveUploadInUrlStorage().then(() => {\n          if (this.options.uploadDataDuringCreation) {\n            this._handleUploadResponse(req, res)\n          } else {\n            this._offset = 0\n            this._performUpload()\n          }\n        })\n      })\n      .catch((err) => {\n        this._emitHttpError(req, null, 'tus: failed to create upload', err)\n      })\n  }\n\n  /*\n   * Try to resume an existing upload. First a HEAD request will be sent\n   * to retrieve the offset. If the request fails a new upload will be\n   * created. In the case of a successful response the file will be uploaded.\n   *\n   * @api private\n   */\n  _resumeUpload() {\n    const req = this._openRequest('HEAD', this.url)\n    const promise = this._sendRequest(req, null)\n\n    promise\n      .then((res) => {\n        const status = res.getStatus()\n        if (!inStatusCategory(status, 200)) {\n          // If the upload is locked (indicated by the 423 Locked status code), we\n          // emit an error instead of directly starting a new upload. This way the\n          // retry logic can catch the error and will retry the upload. An upload\n          // is usually locked for a short period of time and will be available\n          // afterwards.\n          if (status === 423) {\n            this._emitHttpError(req, res, 'tus: upload is currently locked; retry later')\n            return\n          }\n\n          if (inStatusCategory(status, 400)) {\n            // Remove stored fingerprint and corresponding endpoint,\n            // on client errors since the file can not be found\n            this._removeFromUrlStorage()\n          }\n\n          if (!this.options.endpoint) {\n            // Don't attempt to create a new upload if no endpoint is provided.\n            this._emitHttpError(\n              req,\n              res,\n              'tus: unable to resume upload (new upload cannot be created without an endpoint)'\n            )\n            return\n          }\n\n          // Try to create a new upload\n          this.url = null\n          this._createUpload()\n          return\n        }\n\n        const offset = parseInt(res.getHeader('Upload-Offset'), 10)\n        if (Number.isNaN(offset)) {\n          this._emitHttpError(req, res, 'tus: invalid or missing offset value')\n          return\n        }\n\n        const length = parseInt(res.getHeader('Upload-Length'), 10)\n        if (Number.isNaN(length) && !this.options.uploadLengthDeferred) {\n          this._emitHttpError(req, res, 'tus: invalid or missing length value')\n          return\n        }\n\n        if (typeof this.options.onUploadUrlAvailable === 'function') {\n          this.options.onUploadUrlAvailable()\n        }\n\n        this._saveUploadInUrlStorage().then(() => {\n          // Upload has already been completed and we do not need to send additional\n          // data to the server\n          if (offset === length) {\n            this._emitProgress(length, length)\n            this._emitSuccess()\n            return\n          }\n\n          this._offset = offset\n          this._performUpload()\n        })\n      })\n      .catch((err) => {\n        this._emitHttpError(req, null, 'tus: failed to resume upload', err)\n      })\n  }\n\n  /**\n   * Start uploading the file using PATCH requests. The file will be divided\n   * into chunks as specified in the chunkSize option. During the upload\n   * the onProgress event handler may be invoked multiple times.\n   *\n   * @api private\n   */\n  _performUpload() {\n    // If the upload has been aborted, we will not send the next PATCH request.\n    // This is important if the abort method was called during a callback, such\n    // as onChunkComplete or onProgress.\n    if (this._aborted) {\n      return\n    }\n\n    let req\n\n    // Some browser and servers may not support the PATCH method. For those\n    // cases, you can tell tus-js-client to use a POST request with the\n    // X-HTTP-Method-Override header for simulating a PATCH request.\n    if (this.options.overridePatchMethod) {\n      req = this._openRequest('POST', this.url)\n      req.setHeader('X-HTTP-Method-Override', 'PATCH')\n    } else {\n      req = this._openRequest('PATCH', this.url)\n    }\n\n    req.setHeader('Upload-Offset', this._offset)\n    const promise = this._addChunkToRequest(req)\n\n    promise\n      .then((res) => {\n        if (!inStatusCategory(res.getStatus(), 200)) {\n          this._emitHttpError(req, res, 'tus: unexpected response while uploading chunk')\n          return\n        }\n\n        this._handleUploadResponse(req, res)\n      })\n      .catch((err) => {\n        // Don't emit an error if the upload was aborted manually\n        if (this._aborted) {\n          return\n        }\n\n        this._emitHttpError(req, null, `tus: failed to upload chunk at offset ${this._offset}`, err)\n      })\n  }\n\n  /**\n   * _addChunktoRequest reads a chunk from the source and sends it using the\n   * supplied request object. It will not handle the response.\n   *\n   * @api private\n   */\n  _addChunkToRequest(req) {\n    const start = this._offset\n    let end = this._offset + this.options.chunkSize\n\n    req.setProgressHandler((bytesSent) => {\n      this._emitProgress(start + bytesSent, this._size)\n    })\n\n    req.setHeader('Content-Type', 'application/offset+octet-stream')\n\n    // The specified chunkSize may be Infinity or the calcluated end position\n    // may exceed the file's size. In both cases, we limit the end position to\n    // the input's total size for simpler calculations and correctness.\n    if ((end === Infinity || end > this._size) && !this.options.uploadLengthDeferred) {\n      end = this._size\n    }\n\n    return this._source.slice(start, end).then(({ value, done }) => {\n      const valueSize = value && value.size ? value.size : 0\n\n      // If the upload length is deferred, the upload size was not specified during\n      // upload creation. So, if the file reader is done reading, we know the total\n      // upload size and can tell the tus server.\n      if (this.options.uploadLengthDeferred && done) {\n        this._size = this._offset + valueSize\n        req.setHeader('Upload-Length', this._size)\n      }\n\n      // The specified uploadSize might not match the actual amount of data that a source\n      // provides. In these cases, we cannot successfully complete the upload, so we\n      // rather error out and let the user know. If not, tus-js-client will be stuck\n      // in a loop of repeating empty PATCH requests.\n      // See https://community.transloadit.com/t/how-to-abort-hanging-companion-uploads/16488/13\n      const newSize = this._offset + valueSize\n      if (!this.options.uploadLengthDeferred && done && newSize !== this._size) {\n        return Promise.reject(\n          new Error(\n            `upload was configured with a size of ${this._size} bytes, but the source is done after ${newSize} bytes`\n          )\n        )\n      }\n\n      if (value === null) {\n        return this._sendRequest(req)\n      }\n      this._emitProgress(this._offset, this._size)\n      return this._sendRequest(req, value)\n    })\n  }\n\n  /**\n   * _handleUploadResponse is used by requests that haven been sent using _addChunkToRequest\n   * and already have received a response.\n   *\n   * @api private\n   */\n  _handleUploadResponse(req, res) {\n    const offset = parseInt(res.getHeader('Upload-Offset'), 10)\n    if (Number.isNaN(offset)) {\n      this._emitHttpError(req, res, 'tus: invalid or missing offset value')\n      return\n    }\n\n    this._emitProgress(offset, this._size)\n    this._emitChunkComplete(offset - this._offset, offset, this._size)\n\n    this._offset = offset\n\n    if (offset === this._size) {\n      // Yay, finally done :)\n      this._emitSuccess()\n      this._source.close()\n      return\n    }\n\n    this._performUpload()\n  }\n\n  /**\n   * Create a new HTTP request object with the given method and URL.\n   *\n   * @api private\n   */\n  _openRequest(method, url) {\n    const req = openRequest(method, url, this.options)\n    this._req = req\n    return req\n  }\n\n  /**\n   * Remove the entry in the URL storage, if it has been saved before.\n   *\n   * @api private\n   */\n  _removeFromUrlStorage() {\n    if (!this._urlStorageKey) return\n\n    this._urlStorage.removeUpload(this._urlStorageKey).catch((err) => {\n      this._emitError(err)\n    })\n    this._urlStorageKey = null\n  }\n\n  /**\n   * Add the upload URL to the URL storage, if possible.\n   *\n   * @api private\n   */\n  _saveUploadInUrlStorage() {\n    // We do not store the upload URL\n    // - if it was disabled in the option, or\n    // - if no fingerprint was calculated for the input (i.e. a stream), or\n    // - if the URL is already stored (i.e. key is set alread).\n    if (\n      !this.options.storeFingerprintForResuming ||\n      !this._fingerprint ||\n      this._urlStorageKey !== null\n    ) {\n      return Promise.resolve()\n    }\n\n    const storedUpload = {\n      size: this._size,\n      metadata: this.options.metadata,\n      creationTime: new Date().toString(),\n    }\n\n    if (this._parallelUploads) {\n      // Save multiple URLs if the parallelUploads option is used ...\n      storedUpload.parallelUploadUrls = this._parallelUploadUrls\n    } else {\n      // ... otherwise we just save the one available URL.\n      storedUpload.uploadUrl = this.url\n    }\n\n    return this._urlStorage.addUpload(this._fingerprint, storedUpload).then((urlStorageKey) => {\n      this._urlStorageKey = urlStorageKey\n    })\n  }\n\n  /**\n   * Send a request with the provided body.\n   *\n   * @api private\n   */\n  _sendRequest(req, body = null) {\n    return sendRequest(req, body, this.options)\n  }\n}\n\nfunction encodeMetadata(metadata) {\n  return Object.entries(metadata)\n    .map(([key, value]) => `${key} ${Base64.encode(String(value))}`)\n    .join(',')\n}\n\n/**\n * Checks whether a given status is in the range of the expected category.\n * For example, only a status between 200 and 299 will satisfy the category 200.\n *\n * @api private\n */\nfunction inStatusCategory(status, category) {\n  return status >= category && status < category + 100\n}\n\n/**\n * Create a new HTTP request with the specified method and URL.\n * The necessary headers that are included in every request\n * will be added, including the request ID.\n *\n * @api private\n */\nfunction openRequest(method, url, options) {\n  const req = options.httpStack.createRequest(method, url)\n\n  req.setHeader('Tus-Resumable', '1.0.0')\n  const headers = options.headers || {}\n\n  Object.entries(headers).forEach(([name, value]) => {\n    req.setHeader(name, value)\n  })\n\n  if (options.addRequestId) {\n    const requestId = uuid()\n    req.setHeader('X-Request-ID', requestId)\n  }\n\n  return req\n}\n\n/**\n * Send a request with the provided body while invoking the onBeforeRequest\n * and onAfterResponse callbacks.\n *\n * @api private\n */\nasync function sendRequest(req, body, options) {\n  if (typeof options.onBeforeRequest === 'function') {\n    await options.onBeforeRequest(req)\n  }\n\n  const res = await req.send(body)\n\n  if (typeof options.onAfterResponse === 'function') {\n    await options.onAfterResponse(req, res)\n  }\n\n  return res\n}\n\n/**\n * Checks whether the browser running this code has internet access.\n * This function will always return true in the node.js environment\n *\n * @api private\n */\nfunction isOnline() {\n  let online = true\n  if (\n    typeof window !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    'navigator' in window &&\n    // eslint-disable-next-line no-undef\n    window.navigator.onLine === false\n  ) {\n    // eslint-disable-line no-undef\n    online = false\n  }\n\n  return online\n}\n\n/**\n * Checks whether or not it is ok to retry a request.\n * @param {Error} err the error returned from the last request\n * @param {number} retryAttempt the number of times the request has already been retried\n * @param {object} options tus Upload options\n *\n * @api private\n */\nfunction shouldRetry(err, retryAttempt, options) {\n  // We only attempt a retry if\n  // - retryDelays option is set\n  // - we didn't exceed the maxium number of retries, yet, and\n  // - this error was caused by a request or it's response and\n  // - the error is server error (i.e. not a status 4xx except a 409 or 423) or\n  // a onShouldRetry is specified and returns true\n  // - the browser does not indicate that we are offline\n  if (\n    options.retryDelays == null ||\n    retryAttempt >= options.retryDelays.length ||\n    err.originalRequest == null\n  ) {\n    return false\n  }\n\n  if (options && typeof options.onShouldRetry === 'function') {\n    return options.onShouldRetry(err, retryAttempt, options)\n  }\n\n  const status = err.originalResponse ? err.originalResponse.getStatus() : 0\n  return (!inStatusCategory(status, 400) || status === 409 || status === 423) && isOnline()\n}\n\n/**\n * Resolve a relative link given the origin as source. For example,\n * if a HTTP request to http://example.com/files/ returns a Location\n * header with the value /upload/abc, the resolved URL will be:\n * http://example.com/upload/abc\n */\nfunction resolveUrl(origin, link) {\n  return new URL(link, origin).toString()\n}\n\n/**\n * Calculate the start and end positions for the parts if an upload\n * is split into multiple parallel requests.\n *\n * @param {number} totalSize The byte size of the upload, which will be split.\n * @param {number} partCount The number in how many parts the upload will be split.\n * @return {object[]}\n * @api private\n */\nfunction splitSizeIntoParts(totalSize, partCount) {\n  const partSize = Math.floor(totalSize / partCount)\n  const parts = []\n\n  for (let i = 0; i < partCount; i++) {\n    parts.push({\n      start: partSize * i,\n      end: partSize * (i + 1),\n    })\n  }\n\n  parts[partCount - 1].end = totalSize\n\n  return parts\n}\n\nBaseUpload.defaultOptions = defaultOptions\n\nexport default BaseUpload\n","/**\n * Generate a UUID v4 based on random numbers. We intentioanlly use the less\n * secure Math.random function here since the more secure crypto.getRandomNumbers\n * is not available on all platforms.\n * This is not a problem for us since we use the UUID only for generating a\n * request ID, so we can correlate server logs to client errors.\n *\n * This function is taken from following site:\n * https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n *\n * @return {string} The generate UUID\n */\nexport default function uuid() {\n  /* eslint-disable no-bitwise */\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16) | 0\n    const v = c === 'x' ? r : (r & 0x3) | 0x8\n    return v.toString(16)\n  })\n}\n","let hasStorage = false\ntry {\n  hasStorage = 'localStorage' in window\n\n  // Attempt to store and read entries from the local storage to detect Private\n  // Mode on Safari on iOS (see #49)\n  // If the key was not used before, we remove it from local storage again to\n  // not cause confusion where the entry came from.\n  const key = 'tusSupport'\n  const originalValue = localStorage.getItem(key)\n  localStorage.setItem(key, originalValue)\n  if (originalValue === null) localStorage.removeItem(key)\n} catch (e) {\n  // If we try to access localStorage inside a sandboxed iframe, a SecurityError\n  // is thrown. When in private mode on iOS Safari, a QuotaExceededError is\n  // thrown (see #49)\n  if (e.code === e.SECURITY_ERR || e.code === e.QUOTA_EXCEEDED_ERR) {\n    hasStorage = false\n  } else {\n    throw e\n  }\n}\n\nexport const canStoreURLs = hasStorage\n\nexport class WebStorageUrlStorage {\n  findAllUploads() {\n    const results = this._findEntries('tus::')\n    return Promise.resolve(results)\n  }\n\n  findUploadsByFingerprint(fingerprint) {\n    const results = this._findEntries(`tus::${fingerprint}::`)\n    return Promise.resolve(results)\n  }\n\n  removeUpload(urlStorageKey) {\n    localStorage.removeItem(urlStorageKey)\n    return Promise.resolve()\n  }\n\n  addUpload(fingerprint, upload) {\n    const id = Math.round(Math.random() * 1e12)\n    const key = `tus::${fingerprint}::${id}`\n\n    localStorage.setItem(key, JSON.stringify(upload))\n    return Promise.resolve(key)\n  }\n\n  _findEntries(prefix) {\n    const results = []\n\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i)\n      if (key.indexOf(prefix) !== 0) continue\n\n      try {\n        const upload = JSON.parse(localStorage.getItem(key))\n        upload.urlStorageKey = key\n\n        results.push(upload)\n      } catch (e) {\n        // The JSON parse error is intentionally ignored here, so a malformed\n        // entry in the storage cannot prevent an upload.\n      }\n    }\n\n    return results\n  }\n}\n","/* eslint-disable max-classes-per-file */\nexport default class XHRHttpStack {\n  createRequest(method, url) {\n    return new Request(method, url)\n  }\n\n  getName() {\n    return 'XHRHttpStack'\n  }\n}\n\nclass Request {\n  constructor(method, url) {\n    this._xhr = new XMLHttpRequest()\n    this._xhr.open(method, url, true)\n\n    this._method = method\n    this._url = url\n    this._headers = {}\n  }\n\n  getMethod() {\n    return this._method\n  }\n\n  getURL() {\n    return this._url\n  }\n\n  setHeader(header, value) {\n    this._xhr.setRequestHeader(header, value)\n    this._headers[header] = value\n  }\n\n  getHeader(header) {\n    return this._headers[header]\n  }\n\n  setProgressHandler(progressHandler) {\n    // Test support for progress events before attaching an event listener\n    if (!('upload' in this._xhr)) {\n      return\n    }\n\n    this._xhr.upload.onprogress = (e) => {\n      if (!e.lengthComputable) {\n        return\n      }\n\n      progressHandler(e.loaded)\n    }\n  }\n\n  send(body = null) {\n    return new Promise((resolve, reject) => {\n      this._xhr.onload = () => {\n        resolve(new Response(this._xhr))\n      }\n\n      this._xhr.onerror = (err) => {\n        reject(err)\n      }\n\n      this._xhr.send(body)\n    })\n  }\n\n  abort() {\n    this._xhr.abort()\n    return Promise.resolve()\n  }\n\n  getUnderlyingObject() {\n    return this._xhr\n  }\n}\n\nclass Response {\n  constructor(xhr) {\n    this._xhr = xhr\n  }\n\n  getStatus() {\n    return this._xhr.status\n  }\n\n  getHeader(header) {\n    return this._xhr.getResponseHeader(header)\n  }\n\n  getBody() {\n    return this._xhr.responseText\n  }\n\n  getUnderlyingObject() {\n    return this._xhr\n  }\n}\n","const isReactNative = () =>\n  typeof navigator !== 'undefined' &&\n  typeof navigator.product === 'string' &&\n  navigator.product.toLowerCase() === 'reactnative'\n\nexport default isReactNative\n","import isCordova from './isCordova.js'\nimport readAsByteArray from './readAsByteArray.js'\n\nexport default class FileSource {\n  // Make this.size a method\n  constructor(file) {\n    this._file = file\n    this.size = file.size\n  }\n\n  slice(start, end) {\n    // In Apache Cordova applications, a File must be resolved using\n    // FileReader instances, see\n    // https://cordova.apache.org/docs/en/8.x/reference/cordova-plugin-file/index.html#read-a-file\n    if (isCordova()) {\n      return readAsByteArray(this._file.slice(start, end))\n    }\n\n    const value = this._file.slice(start, end)\n    const done = end >= this.size\n    return Promise.resolve({ value, done })\n  }\n\n  close() {\n    // Nothing to do here since we don't need to release any resources.\n  }\n}\n","const isCordova = () =>\n  typeof window !== 'undefined' &&\n  (typeof window.PhoneGap !== 'undefined' ||\n    typeof window.Cordova !== 'undefined' ||\n    typeof window.cordova !== 'undefined')\n\nexport default isCordova\n","/**\n * readAsByteArray converts a File object to a Uint8Array.\n * This function is only used on the Apache Cordova platform.\n * See https://cordova.apache.org/docs/en/latest/reference/cordova-plugin-file/index.html#read-a-file\n */\nexport default function readAsByteArray(chunk) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader()\n    reader.onload = () => {\n      const value = new Uint8Array(reader.result)\n      resolve({ value })\n    }\n    reader.onerror = (err) => {\n      reject(err)\n    }\n    reader.readAsArrayBuffer(chunk)\n  })\n}\n","function len(blobOrArray) {\n  if (blobOrArray === undefined) return 0\n  if (blobOrArray.size !== undefined) return blobOrArray.size\n  return blobOrArray.length\n}\n\n/*\n  Typed arrays and blobs don't have a concat method.\n  This function helps StreamSource accumulate data to reach chunkSize.\n*/\nfunction concat(a, b) {\n  if (a.concat) {\n    // Is `a` an Array?\n    return a.concat(b)\n  }\n  if (a instanceof Blob) {\n    return new Blob([a, b], { type: a.type })\n  }\n  if (a.set) {\n    // Is `a` a typed array?\n    const c = new a.constructor(a.length + b.length)\n    c.set(a)\n    c.set(b, a.length)\n    return c\n  }\n  throw new Error('Unknown data type')\n}\n\nexport default class StreamSource {\n  constructor(reader) {\n    this._buffer = undefined\n    this._bufferOffset = 0\n    this._reader = reader\n    this._done = false\n  }\n\n  slice(start, end) {\n    if (start < this._bufferOffset) {\n      return Promise.reject(new Error(\"Requested data is before the reader's current offset\"))\n    }\n\n    return this._readUntilEnoughDataOrDone(start, end)\n  }\n\n  _readUntilEnoughDataOrDone(start, end) {\n    const hasEnoughData = end <= this._bufferOffset + len(this._buffer)\n    if (this._done || hasEnoughData) {\n      const value = this._getDataFromBuffer(start, end)\n      const done = value == null ? this._done : false\n      return Promise.resolve({ value, done })\n    }\n\n    return this._reader.read().then(({ value, done }) => {\n      if (done) {\n        this._done = true\n      } else if (this._buffer === undefined) {\n        this._buffer = value\n      } else {\n        this._buffer = concat(this._buffer, value)\n      }\n\n      return this._readUntilEnoughDataOrDone(start, end)\n    })\n  }\n\n  _getDataFromBuffer(start, end) {\n    // Remove data from buffer before `start`.\n    // Data might be reread from the buffer if an upload fails, so we can only\n    // safely delete data when it comes *before* what is currently being read.\n    if (start > this._bufferOffset) {\n      this._buffer = this._buffer.slice(start - this._bufferOffset)\n      this._bufferOffset = start\n    }\n    // If the buffer is empty after removing old data, all data has been read.\n    const hasAllDataBeenRead = len(this._buffer) === 0\n    if (this._done && hasAllDataBeenRead) {\n      return null\n    }\n    // We already removed data before `start`, so we just return the first\n    // chunk from the buffer.\n    return this._buffer.slice(0, end - start)\n  }\n\n  close() {\n    if (this._reader.cancel) {\n      this._reader.cancel()\n    }\n  }\n}\n","import BaseUpload from '../upload.js'\nimport NoopUrlStorage from '../noopUrlStorage.js'\nimport { enableDebugLog } from '../logger.js'\nimport DetailedError from '../error.js'\n\nimport { canStoreURLs, WebStorageUrlStorage } from './urlStorage.js'\nimport DefaultHttpStack from './httpStack.js'\nimport FileReader from './fileReader.js'\nimport fingerprint from './fileSignature.js'\n\nconst defaultOptions = {\n  ...BaseUpload.defaultOptions,\n  httpStack: new DefaultHttpStack(),\n  fileReader: new FileReader(),\n  urlStorage: canStoreURLs ? new WebStorageUrlStorage() : new NoopUrlStorage(),\n  fingerprint,\n}\n\nclass Upload extends BaseUpload {\n  constructor(file = null, options = {}) {\n    options = { ...defaultOptions, ...options }\n    super(file, options)\n  }\n\n  static terminate(url, options = {}) {\n    options = { ...defaultOptions, ...options }\n    return BaseUpload.terminate(url, options)\n  }\n}\n\nconst { XMLHttpRequest, Blob } = window\n\nconst isSupported = XMLHttpRequest && Blob && typeof Blob.prototype.slice === 'function'\n\nexport {\n  Upload,\n  canStoreURLs,\n  defaultOptions,\n  isSupported,\n  enableDebugLog,\n  DefaultHttpStack,\n  DetailedError,\n}\n","import isReactNative from './isReactNative.js'\nimport uriToBlob from './uriToBlob.js'\n\nimport FileSource from './sources/FileSource.js'\nimport StreamSource from './sources/StreamSource.js'\n\nexport default class FileReader {\n  async openFile(input, chunkSize) {\n    // In React Native, when user selects a file, instead of a File or Blob,\n    // you usually get a file object {} with a uri property that contains\n    // a local path to the file. We use XMLHttpRequest to fetch\n    // the file blob, before uploading with tus.\n    if (isReactNative() && input && typeof input.uri !== 'undefined') {\n      try {\n        const blob = await uriToBlob(input.uri)\n        return new FileSource(blob)\n      } catch (err) {\n        throw new Error(\n          `tus: cannot fetch \\`file.uri\\` as Blob, make sure the uri is correct and accessible. ${err}`\n        )\n      }\n    }\n\n    // Since we emulate the Blob type in our tests (not all target browsers\n    // support it), we cannot use `instanceof` for testing whether the input value\n    // can be handled. Instead, we simply check is the slice() function and the\n    // size property are available.\n    if (typeof input.slice === 'function' && typeof input.size !== 'undefined') {\n      return Promise.resolve(new FileSource(input))\n    }\n\n    if (typeof input.read === 'function') {\n      chunkSize = Number(chunkSize)\n      if (!Number.isFinite(chunkSize)) {\n        return Promise.reject(\n          new Error(\n            'cannot create source for stream without a finite value for the `chunkSize` option'\n          )\n        )\n      }\n\n      return Promise.resolve(new StreamSource(input, chunkSize))\n    }\n\n    return Promise.reject(\n      new Error(\n        'source object may only be an instance of File, Blob, or Reader in this environment'\n      )\n    )\n  }\n}\n","/**\n * uriToBlob resolves a URI to a Blob object. This is used for\n * React Native to retrieve a file (identified by a file://\n * URI) as a blob.\n */\nexport default function uriToBlob(uri) {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest()\n    xhr.responseType = 'blob'\n    xhr.onload = () => {\n      const blob = xhr.response\n      resolve(blob)\n    }\n    xhr.onerror = (err) => {\n      reject(err)\n    }\n    xhr.open('GET', uri)\n    xhr.send()\n  })\n}\n","/* eslint no-unused-vars: \"off\" */\n\nexport default class NoopUrlStorage {\n  listAllUploads() {\n    return Promise.resolve([])\n  }\n\n  findUploadsByFingerprint(fingerprint) {\n    return Promise.resolve([])\n  }\n\n  removeUpload(urlStorageKey) {\n    return Promise.resolve()\n  }\n\n  addUpload(fingerprint, upload) {\n    return Promise.resolve(null)\n  }\n}\n","import isReactNative from './isReactNative.js'\n\n// TODO: Differenciate between input types\n\n/**\n * Generate a fingerprint for a file which will be used the store the endpoint\n *\n * @param {File} file\n * @param {Object} options\n * @param {Function} callback\n */\nexport default function fingerprint(file, options) {\n  if (isReactNative()) {\n    return Promise.resolve(reactNativeFingerprint(file, options))\n  }\n\n  return Promise.resolve(\n    ['tus-br', file.name, file.type, file.size, file.lastModified, options.endpoint].join('-')\n  )\n}\n\nfunction reactNativeFingerprint(file, options) {\n  const exifHash = file.exif ? hashCode(JSON.stringify(file.exif)) : 'noexif'\n  return ['tus-rn', file.name || 'noname', file.size || 'nosize', exifHash, options.endpoint].join(\n    '/'\n  )\n}\n\nfunction hashCode(str) {\n  /* eslint-disable no-bitwise */\n  // from https://stackoverflow.com/a/8831937/151666\n  let hash = 0\n  if (str.length === 0) {\n    return hash\n  }\n  for (let i = 0; i < str.length; i++) {\n    const char = str.charCodeAt(i)\n    hash = (hash << 5) - hash + char\n    hash &= hash // Convert to 32bit integer\n  }\n  return hash\n}\n","import {\n  HttpRequest,\n  HttpResponse,\n  Upload\n} from \"tus-js-client/lib/browser/index.js\";\nimport BaseUpload, { InitialFile } from \"./base_upload\";\nimport { deleteUpload } from \"./tus_utils\";\n\ninterface Parameters {\n  chunkSize: number;\n  csrfToken: string;\n  fieldName: string;\n  file: File;\n  formId: string;\n  retryDelays: number[] | null;\n  uploadIndex: number;\n  uploadUrl: string;\n}\n\nexport default class TusUpload extends BaseUpload {\n  public onError?: (error: Error) => void;\n  public onProgress?: (bytesUploaded: number, bytesTotal: number) => void;\n  public onSuccess?: () => void;\n  private id: string;\n  private upload: Upload;\n  private csrfToken: string;\n\n  constructor({\n    chunkSize,\n    csrfToken,\n    fieldName,\n    file,\n    formId,\n    retryDelays,\n    uploadIndex,\n    uploadUrl\n  }: Parameters) {\n    super({ name: file.name, status: \"uploading\", type: \"tus\", uploadIndex });\n\n    this.csrfToken = csrfToken;\n\n    this.upload = new Upload(file, {\n      chunkSize,\n      endpoint: uploadUrl,\n      metadata: {\n        fieldName: fieldName,\n        filename: file.name,\n        formId: formId\n      },\n      onAfterResponse: this.handleAfterReponse,\n      onBeforeRequest: this.addCsrTokenToRequest,\n      onError: this.handleError,\n      onProgress: this.handleProgress,\n      onSuccess: this.handleSucces,\n      retryDelays: retryDelays || [0, 1000, 3000, 5000]\n    });\n\n    this.onError = undefined;\n    this.onProgress = undefined;\n    this.onSuccess = undefined;\n  }\n\n  public async abort(): Promise<void> {\n    await this.upload.abort(true);\n  }\n\n  public async delete(): Promise<void> {\n    if (!this.upload.url) {\n      return Promise.resolve();\n    }\n\n    await deleteUpload(this.upload.url, this.csrfToken);\n  }\n\n  public getId(): string | undefined {\n    return this.id;\n  }\n\n  public getSize(): number {\n    return (this.upload.file as File).size;\n  }\n\n  public start(): void {\n    this.upload.start();\n  }\n\n  private handleError = (error: Error) => {\n    if (this.onError) {\n      this.onError(error);\n    } else {\n      throw error;\n    }\n  };\n\n  private handleProgress = (bytesUploaded: number, bytesTotal: number) => {\n    if (this.onProgress) {\n      this.onProgress(bytesUploaded, bytesTotal);\n    }\n  };\n\n  private handleSucces = () => {\n    if (this.onSuccess) {\n      this.onSuccess();\n    }\n  };\n\n  private addCsrTokenToRequest = (request: HttpRequest) => {\n    request.setHeader(\"X-CSRFToken\", this.csrfToken);\n  };\n\n  private handleAfterReponse = (\n    _request: HttpRequest,\n    response: HttpResponse\n  ) => {\n    const resourceId = response.getHeader(\"ResourceId\");\n\n    if (resourceId) {\n      this.id = resourceId;\n    }\n  };\n\n  getInitialFile(): InitialFile {\n    return {\n      id: this.id,\n      name: this.name,\n      size: this.getSize(),\n      type: \"tus\",\n      url: \"\"\n    };\n  }\n}\n","import { findInput, getMetadataFieldName, getUploadsFieldName } from \"./util\";\nimport RenderUploadFile from \"./render_upload_file\";\nimport DropArea from \"./drop_area\";\n\nimport S3Upload from \"./uploads/s3_upload\";\nimport EventEmitter from \"eventemitter3\";\nimport { createUploadedFile } from \"./uploads/uploaded_file\";\nimport TusUpload from \"./uploads/tus_upload\";\nimport BaseUpload, { InitialFile, UploadType } from \"./uploads/base_upload\";\nimport AcceptedFileTypes from \"./accepted_file_types\";\n\nexport type Translations = { [key: string]: string };\n\ninterface ClickEvent {\n  fileName: string;\n  fieldName: string;\n  id?: string;\n  type: UploadType;\n}\n\nexport interface Callbacks {\n  onClick?: ({ fileName, fieldName, type }: ClickEvent) => void;\n  onDelete?: (upload: BaseUpload) => void;\n  onError?: (error: Error, upload: BaseUpload) => void;\n  onProgress?: (\n    bytesUploaded: number,\n    bytesTotal: number,\n    upload: BaseUpload\n  ) => void;\n  onSuccess?: (upload: BaseUpload) => void;\n}\n\ninterface ConstructorParams {\n  callbacks: Callbacks;\n  chunkSize: number;\n  csrfToken: string;\n  eventEmitter?: EventEmitter;\n  fieldName: string;\n  form: Element;\n  formId: string;\n  initial: InitialFile[];\n  input: HTMLInputElement;\n  multiple: boolean;\n  parent: Element;\n  prefix: string | null;\n  retryDelays: number[] | null;\n  s3UploadDir: string | null;\n  skipRequired: boolean;\n  supportDropArea: boolean;\n  translations: Translations;\n  uploadUrl: string;\n}\n\nclass FileField {\n  acceptedFileTypes: AcceptedFileTypes;\n  callbacks: Callbacks;\n  chunkSize: number;\n  csrfToken: string;\n  eventEmitter?: EventEmitter;\n  fieldName: string;\n  form: Element;\n  formId: string;\n  multiple: boolean;\n  nextUploadIndex: number;\n  prefix: string | null;\n  renderer: RenderUploadFile;\n  retryDelays: number[] | null;\n  s3UploadDir: string | null;\n  supportDropArea: boolean;\n  uploads: BaseUpload[];\n  uploadUrl: string;\n\n  constructor({\n    callbacks,\n    chunkSize,\n    csrfToken,\n    eventEmitter,\n    fieldName,\n    form,\n    formId,\n    initial,\n    input,\n    multiple,\n    parent,\n    prefix,\n    retryDelays,\n    s3UploadDir,\n    skipRequired,\n    supportDropArea,\n    translations,\n    uploadUrl\n  }: ConstructorParams) {\n    this.callbacks = callbacks;\n    this.chunkSize = chunkSize;\n    this.csrfToken = csrfToken;\n    this.eventEmitter = eventEmitter;\n    this.fieldName = fieldName;\n    this.form = form;\n    this.formId = formId;\n    this.multiple = multiple;\n    this.prefix = prefix;\n    this.retryDelays = retryDelays;\n    this.s3UploadDir = s3UploadDir;\n    this.supportDropArea = supportDropArea && !input.disabled;\n    this.uploadUrl = uploadUrl;\n    this.acceptedFileTypes = new AcceptedFileTypes(input.accept);\n\n    this.uploads = [];\n    this.nextUploadIndex = 0;\n\n    this.renderer = new RenderUploadFile({\n      parent,\n      input,\n      skipRequired,\n      translations\n    });\n    const filesContainer = this.renderer.container;\n\n    if (supportDropArea) {\n      this.initDropArea(filesContainer, input.accept);\n    }\n\n    if (initial) {\n      this.addInitialFiles(initial);\n    }\n\n    this.checkDropHint();\n\n    input.addEventListener(\"change\", this.onChange);\n    filesContainer.addEventListener(\"click\", this.handleClick);\n  }\n\n  addInitialFiles(initialFiles: InitialFile[]): void {\n    if (initialFiles.length === 0) {\n      return;\n    }\n\n    const { multiple, renderer } = this;\n\n    const addInitialFile = (initialFile: InitialFile): void => {\n      const { size } = initialFile;\n      const name =\n        initialFile.type === \"s3\" && initialFile.original_name\n          ? initialFile.original_name\n          : initialFile.name;\n\n      const element = renderer.addUploadedFile(\n        name,\n        this.nextUploadIndex,\n        size\n      );\n\n      const upload = createUploadedFile({\n        csrfToken: this.csrfToken,\n        initialFile,\n        uploadIndex: this.nextUploadIndex,\n        uploadUrl: this.uploadUrl\n      });\n      this.uploads.push(upload);\n\n      this.emitEvent(\"addUpload\", element, upload);\n    };\n\n    if (multiple) {\n      initialFiles.forEach((file: InitialFile): void => {\n        addInitialFile(file);\n        this.nextUploadIndex += 1;\n      });\n    } else {\n      const initialFile = initialFiles[0];\n\n      if (initialFile) {\n        addInitialFile(initialFile);\n      }\n    }\n  }\n\n  uploadFiles = async (files: File[]): Promise<void> => {\n    if (files.length === 0) {\n      return;\n    }\n\n    if (!this.multiple) {\n      for (const upload of this.uploads) {\n        this.renderer.deleteFile(upload.uploadIndex);\n      }\n\n      this.uploads = [];\n      const file = files[0];\n\n      if (file) {\n        await this.uploadFile(file);\n      }\n    } else {\n      for await (const file of files) {\n        await this.uploadFile(file);\n      }\n    }\n\n    this.checkDropHint();\n  };\n\n  async uploadFile(file: File): Promise<void> {\n    const createUpload = (): S3Upload | TusUpload => {\n      const { csrfToken, s3UploadDir } = this;\n\n      if (s3UploadDir != null) {\n        return new S3Upload({\n          csrfToken,\n          endpoint: uploadUrl,\n          file,\n          s3UploadDir,\n          uploadIndex: newUploadIndex\n        });\n      } else {\n        return new TusUpload({\n          chunkSize: this.chunkSize,\n          csrfToken: this.csrfToken,\n          fieldName,\n          file,\n          formId,\n          retryDelays: this.retryDelays,\n          uploadIndex: newUploadIndex,\n          uploadUrl\n        });\n      }\n    };\n\n    const { fieldName, formId, renderer, uploadUrl } = this;\n    const fileName = file.name;\n    const existingUpload = this.findUploadByName(fileName);\n    const newUploadIndex = existingUpload\n      ? existingUpload.uploadIndex\n      : this.nextUploadIndex;\n\n    if (!existingUpload) {\n      this.nextUploadIndex += 1;\n    }\n\n    if (existingUpload) {\n      await this.removeExistingUpload(existingUpload);\n    }\n\n    const upload = createUpload();\n\n    upload.onError = error => this.handleError(upload, error);\n    upload.onProgress = (bytesUploaded, bytesTotal) =>\n      this.handleProgress(upload, bytesUploaded, bytesTotal);\n    upload.onSuccess = () => this.handleSuccess(upload);\n    upload.start();\n\n    this.uploads.push(upload);\n\n    const element = renderer.addNewUpload(fileName, newUploadIndex);\n    this.emitEvent(\"addUpload\", element, upload);\n  }\n\n  getUploadByIndex(uploadIndex: number): BaseUpload | undefined {\n    return this.uploads.find(upload => upload.uploadIndex === uploadIndex);\n  }\n\n  findUploadByName(fileName: string): BaseUpload | undefined {\n    return this.uploads.find(upload => upload.name === fileName);\n  }\n\n  async removeExistingUpload(upload: BaseUpload): Promise<void> {\n    const element = this.renderer.findFileDiv(upload.uploadIndex);\n\n    if (element) {\n      this.emitEvent(\"removeUpload\", element, upload);\n    }\n\n    if (upload.status === \"uploading\") {\n      this.renderer.disableCancel(upload.uploadIndex);\n      await upload.abort();\n    } else if (upload.status === \"done\") {\n      this.renderer.disableDelete(upload.uploadIndex);\n\n      try {\n        await upload.delete();\n      } catch {\n        this.renderer.setDeleteFailed(upload.uploadIndex);\n        return;\n      }\n    }\n\n    this.removeUploadFromList(upload);\n    this.updatePlaceholderInput();\n  }\n\n  onChange = (e: Event): void => {\n    const files = (e.target as HTMLInputElement).files || ([] as File[]);\n    const acceptedFiles: File[] = [];\n    const invalidFiles: File[] = [];\n\n    for (const file of files) {\n      if (this.acceptedFileTypes.isAccepted(file.name)) {\n        acceptedFiles.push(file);\n      } else {\n        invalidFiles.push(file);\n      }\n    }\n\n    if (invalidFiles) {\n      this.handleInvalidFiles([...invalidFiles]);\n    }\n\n    if (acceptedFiles) {\n      void this.uploadFiles([...acceptedFiles]);\n    }\n\n    this.renderer.clearInput();\n  };\n\n  handleInvalidFiles = (files: File[]): void => {\n    this.renderer.setErrorInvalidFiles(files);\n  };\n\n  handleClick = (e: Event): void => {\n    const target = e.target as HTMLElement;\n\n    const getUpload = (): BaseUpload | undefined => {\n      const dataIndex = target.getAttribute(\"data-index\");\n\n      if (!dataIndex) {\n        return undefined;\n      }\n\n      const uploadIndex = parseInt(dataIndex, 10);\n      return this.getUploadByIndex(uploadIndex);\n    };\n\n    if (\n      target.classList.contains(\"dff-delete\") &&\n      !target.classList.contains(\"dff-disabled\")\n    ) {\n      e.preventDefault();\n\n      const upload = getUpload();\n\n      if (upload) {\n        void this.removeExistingUpload(upload);\n      }\n    } else if (target.classList.contains(\"dff-cancel\")) {\n      e.preventDefault();\n\n      const upload = getUpload();\n\n      if (upload) {\n        void this.handleCancel(upload);\n      }\n    } else if (target.classList.contains(\"dff-filename\")) {\n      e.preventDefault();\n\n      const upload = getUpload();\n\n      if (upload?.status === \"done\" && this.callbacks.onClick) {\n        this.callbacks.onClick({\n          fileName: upload.name,\n          fieldName: this.fieldName,\n          id: upload.getId(),\n          type: upload.type\n        });\n      }\n    }\n  };\n\n  handleProgress = (\n    upload: BaseUpload,\n    bytesUploaded: number,\n    bytesTotal: number\n  ): void => {\n    const percentage = ((bytesUploaded / bytesTotal) * 100).toFixed(2);\n\n    this.renderer.updateProgress(upload.uploadIndex, percentage);\n\n    const { onProgress } = this.callbacks;\n\n    if (onProgress) {\n      if (upload instanceof TusUpload) {\n        onProgress(bytesUploaded, bytesTotal, upload);\n      }\n    }\n  };\n\n  handleError = (upload: BaseUpload, error: Error): void => {\n    this.renderer.setError(upload.uploadIndex);\n    upload.status = \"error\";\n\n    const { onError } = this.callbacks;\n\n    if (onError) {\n      if (upload instanceof TusUpload) {\n        onError(error, upload);\n      }\n    }\n  };\n\n  handleSuccess = (upload: BaseUpload): void => {\n    const { renderer } = this;\n\n    this.updatePlaceholderInput();\n\n    renderer.clearInput();\n    renderer.setSuccess(upload.uploadIndex, upload.getSize());\n    upload.status = \"done\";\n\n    const { onSuccess } = this.callbacks;\n\n    const element = this.renderer.findFileDiv(\n      upload.uploadIndex\n    ) as HTMLElement;\n    this.emitEvent(\"uploadComplete\", element, upload);\n\n    if (onSuccess && upload.type === \"tus\") {\n      onSuccess(upload);\n    }\n  };\n\n  removeUploadFromList(upload: BaseUpload): void {\n    this.renderer.deleteFile(upload.uploadIndex);\n\n    const index = this.uploads.indexOf(upload);\n\n    if (index >= 0) {\n      this.uploads.splice(index, 1);\n    }\n\n    this.checkDropHint();\n\n    const { onDelete } = this.callbacks;\n\n    if (onDelete) {\n      onDelete(upload);\n    }\n  }\n\n  async handleCancel(upload: BaseUpload): Promise<void> {\n    this.renderer.disableCancel(upload.uploadIndex);\n    await upload.abort();\n    this.removeUploadFromList(upload);\n  }\n\n  initDropArea(container: Element, inputAccept: string): void {\n    new DropArea({\n      container,\n      inputAccept,\n      onUploadFiles: this.uploadFiles,\n      renderer: this.renderer\n    });\n  }\n\n  checkDropHint(): void {\n    if (!this.supportDropArea) {\n      return;\n    }\n\n    const nonEmptyUploads = this.uploads.filter(e => e);\n\n    if (nonEmptyUploads.length === 0) {\n      this.renderer.renderDropHint();\n    } else {\n      this.renderer.removeDropHint();\n    }\n  }\n\n  updatePlaceholderInput(): void {\n    const input = findInput(\n      this.form,\n      getUploadsFieldName(this.fieldName, this.prefix),\n      this.prefix\n    );\n    if (!input) {\n      return;\n    }\n\n    const placeholdersInfo: InitialFile[] = this.uploads.map(upload =>\n      upload.getInitialFile()\n    );\n\n    input.value = JSON.stringify(placeholdersInfo);\n  }\n\n  getMetaDataField(): HTMLElement | null {\n    return findInput(\n      this.form,\n      getMetadataFieldName(this.fieldName, this.prefix),\n      this.prefix\n    );\n  }\n\n  emitEvent(eventName: string, element: HTMLElement, upload: BaseUpload): void {\n    if (this.eventEmitter) {\n      this.eventEmitter.emit(eventName, {\n        element,\n        fieldName: this.fieldName,\n        fileName: upload.name,\n        metaDataField: this.getMetaDataField(),\n        upload\n      });\n    }\n  }\n}\n\nexport default FileField;\n","import EventEmitter from \"eventemitter3\";\nimport FileField, { Callbacks, Translations } from \"./file_field\";\nimport { InitialFile } from \"./uploads/base_upload\";\nimport {\n  findInput,\n  getInputValueForFormAndPrefix,\n  getUploadsFieldName\n} from \"./util\";\n\nexport interface Options {\n  callbacks?: Callbacks;\n  chunkSize?: number;\n  eventEmitter?: EventEmitter;\n  prefix?: string;\n  retryDelays?: number[];\n  skipRequired?: boolean;\n  supportDropArea?: boolean;\n}\n\nconst initUploadFields = (form: Element, options: Options = {}): void => {\n  const matchesPrefix = (fieldName: string): boolean => {\n    if (!(options && options.prefix)) {\n      return true;\n    }\n\n    return fieldName.startsWith(`${options.prefix}-`);\n  };\n\n  const getPrefix = (): string | null =>\n    options && options.prefix ? options.prefix : null;\n\n  const getInputValue = (fieldName: string): string | undefined =>\n    getInputValueForFormAndPrefix(form, fieldName, getPrefix());\n\n  const getInitialFiles = (fieldName: string): InitialFile[] => {\n    const data = getInputValue(getUploadsFieldName(fieldName, getPrefix()));\n\n    if (!data) {\n      return [];\n    }\n\n    return JSON.parse(data) as InitialFile[];\n  };\n\n  const uploadUrl = getInputValue(\"upload_url\");\n  const formId = getInputValue(\"form_id\");\n  const s3UploadDir = getInputValue(\"s3_upload_dir\");\n  const skipRequired = options.skipRequired || false;\n  const prefix = getPrefix();\n  const csrfToken = findInput(form, \"csrfmiddlewaretoken\", null)?.value;\n\n  if (!csrfToken) {\n    throw Error(\"Csrf token not found\");\n  }\n\n  if (!formId || !uploadUrl) {\n    return;\n  }\n\n  form.querySelectorAll(\".dff-uploader\").forEach(uploaderDiv => {\n    const container = uploaderDiv.querySelector(\n      \".dff-container\"\n    ) as HTMLElement;\n\n    if (!container) {\n      return;\n    }\n\n    const input = container.querySelector(\n      \"input[type=file]\"\n    ) as HTMLInputElement;\n\n    if (!(input && matchesPrefix(input.name))) {\n      return;\n    }\n\n    const fieldName = input.name;\n    const { multiple } = input;\n    const initial = getInitialFiles(fieldName);\n    const dataTranslations = container.getAttribute(\"data-translations\");\n    const translations: Translations = dataTranslations\n      ? (JSON.parse(dataTranslations) as Translations)\n      : {};\n    const supportDropArea = !(options.supportDropArea === false);\n\n    new FileField({\n      callbacks: options.callbacks || {},\n      chunkSize: options.chunkSize || 2621440,\n      csrfToken,\n      eventEmitter: options.eventEmitter,\n      fieldName,\n      form,\n      formId,\n      s3UploadDir: s3UploadDir || null,\n      initial,\n      input,\n      multiple,\n      parent: container,\n      prefix,\n      retryDelays: options.retryDelays || null,\n      skipRequired,\n      supportDropArea,\n      translations,\n      uploadUrl\n    });\n  });\n};\n\nexport default initUploadFields;\n","import autoInitFileForms from \"./auto_init_file_forms\";\nimport initFormSet from \"./init_form_set\";\nimport initUploadFields from \"./init_upload_fields\";\n\ndeclare const window: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n\nwindow.autoInitFileForms = autoInitFileForms; // eslint-disable-line  @typescript-eslint/no-unsafe-member-access\nwindow.initFormSet = initFormSet; // eslint-disable-line  @typescript-eslint/no-unsafe-member-access\nwindow.initUploadFields = initUploadFields; // eslint-disable-line  @typescript-eslint/no-unsafe-member-access\n","import initUploadFields, { Options } from \"./init_upload_fields\";\nimport { getInputNameWithPrefix, getInputValueForFormAndPrefix } from \"./util\";\n\nconst initFormSet = (form: Element, optionsParam: Options | string): void => {\n  let options: Options;\n\n  if (typeof optionsParam === \"string\") {\n    options = { prefix: optionsParam };\n  } else {\n    options = optionsParam;\n  }\n\n  const prefix = options.prefix || \"form\";\n\n  const totalFormsValue = getInputValueForFormAndPrefix(\n    form,\n    \"TOTAL_FORMS\",\n    prefix\n  );\n\n  if (!totalFormsValue) {\n    return;\n  }\n\n  const formCount = parseInt(totalFormsValue, 10);\n\n  for (let i = 0; i < formCount; i += 1) {\n    const subFormPrefix = getInputNameWithPrefix(`${i}`, null);\n    initUploadFields(form, {\n      ...options,\n      prefix: `${prefix}-${subFormPrefix}`\n    });\n  }\n};\n\nexport default initFormSet;\n"],"names":["findForm","element","parent","parentElement","tagName","_typeof","o","Symbol","iterator","constructor","prototype","_toPropertyKey","arg","key","input","hint","prim","toPrimitive","undefined","res","call","TypeError","String","Number","_defineProperty","obj","value","toPropertyKey","Object","defineProperty","enumerable","configurable","writable","getInputNameWithPrefix","fieldName","prefix","getInputNameWithoutPrefix","slice","length","findInput","form","inputNameWithPrefix","querySelector","getUploadsFieldName","getInputValueForFormAndPrefix","matchHtmlRegExp","escapeHtml_1","string","escape","str","match","exec","html","index","lastIndex","charCodeAt","substring","RenderUploadFile","_ref","skipRequired","translations","this","div","document","createElement","className","appendChild","container","createFilesContainer","errors","createErrorContainer","required","addNewUpload","filename","uploadIndex","addFile","progressSpan","innerSpan","cancelLink","innerHTML","Cancel","setAttribute","href","addUploadedFile","filesize","setSuccess","clearInput","deleteFile","findFileDiv","remove","disableCancel","cancelSpan","findCancelSpan","classList","add","disableDelete","deleteLink","findDeleteLink","removeDropHint","dropHint","renderDropHint","setDeleteFailed","setErrorMessage","enableDelete","setError","el","removeProgress","removeCancel","setErrorInvalidFiles","files","errorsMessages","file","msg","innerText","name","replaceChildren","size","fileSizeInfo","formatBytes","bytes","decimals","dm","i","Math","floor","log","parseFloat","toFixed","Delete","updateProgress","percentage","innerProgressSpan","style","width","nameSpan","message","originalMessageSpan","span","Mime","_types","create","_extensions","arguments","define","bind","getType","getExtension","Mime$1","typeMap","force","type","extensions","map","t","toLowerCase","ext","Error","substr","path","last","replace","hasPath","test","RegExp","$1","basename","start","end","matchedSlash","WIN_SLASH","WIN_NO_SLASH","DOT_LITERAL","SLASH_LITERAL","QMARK","END_ANCHOR","START_ANCHOR","DOTS_SLASH","POSIX_CHARS","PLUS_LITERAL","QMARK_LITERAL","ONE_CHAR","NO_DOT","NO_DOTS","NO_DOT_SLASH","NO_DOTS_SLASH","QMARK_NO_DOT","STAR","WINDOWS_CHARS","constants","MAX_LENGTH","POSIX_REGEX_SOURCE","alnum","alpha","ascii","blank","cntrl","digit","graph","lower","print","punct","space","upper","word","xdigit","REGEX_BACKSLASH","REGEX_NON_SPECIAL_CHARS","REGEX_SPECIAL_CHARS","REGEX_SPECIAL_CHARS_BACKREF","REGEX_SPECIAL_CHARS_GLOBAL","REGEX_REMOVE_BACKSLASH","REPLACEMENTS","CHAR_0","CHAR_9","CHAR_UPPERCASE_A","CHAR_LOWERCASE_A","CHAR_UPPERCASE_Z","CHAR_LOWERCASE_Z","CHAR_LEFT_PARENTHESES","CHAR_RIGHT_PARENTHESES","CHAR_ASTERISK","CHAR_AMPERSAND","CHAR_AT","CHAR_BACKWARD_SLASH","CHAR_CARRIAGE_RETURN","CHAR_CIRCUMFLEX_ACCENT","CHAR_COLON","CHAR_COMMA","CHAR_DOT","CHAR_DOUBLE_QUOTE","CHAR_EQUAL","CHAR_EXCLAMATION_MARK","CHAR_FORM_FEED","CHAR_FORWARD_SLASH","CHAR_GRAVE_ACCENT","CHAR_HASH","CHAR_HYPHEN_MINUS","CHAR_LEFT_ANGLE_BRACKET","CHAR_LEFT_CURLY_BRACE","CHAR_LEFT_SQUARE_BRACKET","CHAR_LINE_FEED","CHAR_NO_BREAK_SPACE","CHAR_PERCENT","CHAR_PLUS","CHAR_QUESTION_MARK","CHAR_RIGHT_ANGLE_BRACKET","CHAR_RIGHT_CURLY_BRACE","CHAR_RIGHT_SQUARE_BRACKET","CHAR_SEMICOLON","CHAR_SINGLE_QUOTE","CHAR_SPACE","CHAR_TAB","CHAR_UNDERSCORE","CHAR_VERTICAL_LINE","CHAR_ZERO_WIDTH_NOBREAK_SPACE","SEP","extglobChars","chars","open","close","globChars","win32","require$$0","exports","isObject","val","Array","isArray","hasRegexChars","isRegexChar","escapeRegex","toPosixSlashes","removeBackslashes","isWindows","options","windows","escapeLast","char","lastIdx","idx","lastIndexOf","removePrefix","state","output","startsWith","wrapOutput","contains","negated","utils","require$$1","isPathSeparator","code","depth","token","isPrefix","isGlobstar","Infinity","scan_1","opts","scanToEnd","parts","slashes","tokens","prev","isBrace","isBracket","isGlob","isExtglob","braceEscaped","backslashes","negatedExtglob","finished","braces","eos","advance","next","noext","nonegate","noparen","push","base","glob","unescape","maxDepth","prevIndex","n","expandRange","args","sort","join","ex","v","syntaxError","parse","max","maxLength","min","len","SyntaxError","bos","prepend","capture","PLATFORM_CHARS","EXTGLOB_CHARS","globstar","dot","nodot","qmarkNoDot","star","bash","noextglob","consumed","backtrack","brackets","parens","quotes","extglobs","stack","peek","remaining","consume","num","append","negate","count","increment","decrement","pop","tok","extglob","inner","extglobOpen","conditions","extglobClose","rest","extglobStar","includes","expression","fastpaths","m","esc","first","repeat","posix","pre","indexOf","keepQuotes","strictBrackets","nobracket","prevValue","literalBrackets","escaped","nobrace","outputIndex","tokensIndex","brace","dots","arr","range","unshift","comma","out","toks","regex","noglobstar","prior","before","isStart","afterStar","after","strictSlashes","suffix","slashDot","source","scan","require$$3","require$$4","picomatch","returnState","fns","arrayMatcher","isMatch","isState","compileRe","makeRe","isIgnored","ignore","ignoreOpts","onMatch","onResult","matcher","returnObject","result","onIgnore","format","matchBase","Boolean","patterns","pattern","p","returnOutput","toRegex","parsed","flags","nocase","err","debug","AcceptedFileTypes","inputAccept","mimeTypes","split","mimeType","trim","filter","forEach","fileType","parseInputAccept","isAccepted","fileName","isMimeTypeAccepted","mime","isExtensionAccepted","getEntriesFromDirectory","async","Promise","resolve","reject","directoryEntry","createReader","readEntries","getFileFromFileEntry","fileEntry","getFilesFromFileSystemEntries","entry","entries","isFile","isDirectory","entriesFromDirectory","DropArea","onUploadFiles","renderer","e","dragEvent","preventDefault","stopPropagation","dataTransfer","items","item","webkitGetAsEntry","getFilesFromDataTransfer","acceptedFiles","invalidFiles","acceptedFileTypes","error","console","uploadFiles","addEventListener","onDrop","BaseUpload$1","status","abort","delete","urlJoin","strArray","resultArray","shift","component","normalize","splice","S3Upload","BaseUpload","csrfToken","endpoint","s3UploadDir","super","uploadId","createdPromise","chunks","chunkState","uploading","onError","onProgress","onSuccess","initChunks","catch","xhr","encodeURIComponent","uploadIdEnc","headers","Headers","url","urljoin","fetch","method","then","response","json","abortMultipartUpload","getId","getInitialFile","id","original_name","getSize","createUpload","desiredChunkSize","ceil","minChunkSize","chunkSize","uploaded","busy","done","_ref3","accept","body","JSON","stringify","contentType","data","createMultipartUpload","uploadParts","handleError","need","every","completeUpload","candidates","uploadPart","_ref4","number","prepareUploadPart","_ref2","uploadPartBytes","onPartProgress","sent","totalUploaded","reduce","c","onPartComplete","etag","part","PartNumber","ETag","XMLHttpRequest","responseType","upload","ev","lengthComputable","loaded","target","getResponseHeader","send","a","b","completeMultipartUpload","deleteUpload","onload","setRequestHeader","BaseUploadedFile","PlaceholderFile","initialFile","UploadedS3File","ExistingFile","UploadedTusFile","uploadUrl","_hasbtoa","btoa","_hasBuffer","Buffer","_TE","TextDecoder","TextEncoder","b64chs","_fromCC","tab","fromCharCode","_mkUriSafe","Uint8Array","from","src","m0","btoaPolyfill","bin","u32","c0","c1","c2","asc","pad","_btoa","toString","_fromUint8Array","u8a","strs","l","apply","subarray","cb_utob","cc","re_utob","utob","u","_encode","s","encode","urlsafe","gBase64","has","hasOwnProperty","decode","decodeURIComponent","querystringify$1","pairs","isNaN","query","parser","port","protocol","qs","controlOrWhitespace","CRHTLF","protocolre","windowsDriveLetter","trimLeft","rules","address","isSpecial","NaN","hash","lolcation","loc","location","window","global","self","finaldestination","Url","pathname","scheme","extractProtocol","forwardSlashes","otherSlashes","slashesCount","relative","extracted","instruction","instructions","charAt","concat","up","host","hostname","username","password","auth","origin","set","fn","ins","DetailedError","causingErr","req","originalRequest","originalResponse","causingError","requestId","getHeader","getMethod","getURL","getStatus","getBody","defaultOptions","metadata","fingerprint","uploadSize","onChunkComplete","onUploadUrlAvailable","overridePatchMethod","addRequestId","onBeforeRequest","onAfterResponse","onShouldRetry","retryDelays","parallelUploads","parallelUploadBoundaries","storeFingerprintForResuming","removeFingerprintOnSuccess","uploadLengthDeferred","uploadDataDuringCreation","urlStorage","fileReader","httpStack","_urlStorage","_req","_fingerprint","_urlStorageKey","_offset","_aborted","_size","_source","_retryAttempt","_retryTimeout","_offsetBeforeRetry","_parallelUploads","_parallelUploadUrls","terminate","openRequest","sendRequest","shouldRetry","delay","remainingDelays","newOptions","setTimeout","findPreviousUploads","findUploadsByFingerprint","resumeFromPreviousUpload","previousUpload","parallelUploadUrls","urlStorageKey","_emitError","optionName","openFile","_startParallelUpload","_startSingleUpload","totalSize","totalProgress","partCount","partSize","splitSizeIntoParts","uploads","lastPartProgress","newPartProgress","_emitProgress","_saveUploadInUrlStorage","all","_openRequest","setHeader","encodeMetadata","_sendRequest","inStatusCategory","_emitHttpError","resolveUrl","_emitSuccess","_resumeUpload","_createUpload","shouldTerminate","clearTimeout","_removeFromUrlStorage","bytesSent","bytesTotal","_emitChunkComplete","bytesAccepted","promise","_addChunkToRequest","_handleUploadResponse","_performUpload","offset","parseInt","setProgressHandler","valueSize","newSize","removeUpload","storedUpload","creationTime","Date","addUpload","Base64","category","createRequest","r","random","retryAttempt","online","navigator","onLine","isOnline","link","URL","hasStorage","originalValue","localStorage","getItem","setItem","removeItem","SECURITY_ERR","QUOTA_EXCEEDED_ERR","canStoreURLs","Request","_xhr","_method","_url","_headers","header","progressHandler","onprogress","Response","onerror","getUnderlyingObject","responseText","isReactNative","product","FileSource","_file","PhoneGap","Cordova","cordova","chunk","reader","FileReader","readAsArrayBuffer","blobOrArray","StreamSource","_buffer","_bufferOffset","_reader","_done","_readUntilEnoughDataOrDone","hasEnoughData","_getDataFromBuffer","read","Blob","hasAllDataBeenRead","cancel","getName","uri","blob","isFinite","findAllUploads","results","_findEntries","round","listAllUploads","exifHash","exif","hashCode","reactNativeFingerprint","lastModified","Upload","XMLHttpRequest$1","TusUpload","formId","bytesUploaded","request","_request","resourceId","handleAfterReponse","addCsrTokenToRequest","handleProgress","handleSucces","FileField","callbacks","eventEmitter","initial","multiple","supportDropArea","uploadFile","checkDropHint","handleInvalidFiles","getUpload","dataIndex","getAttribute","getUploadByIndex","removeExistingUpload","handleCancel","onClick","updatePlaceholderInput","emitEvent","disabled","nextUploadIndex","filesContainer","initDropArea","addInitialFiles","onChange","handleClick","initialFiles","addInitialFile","createUploadedFile","existingUpload","findUploadByName","newUploadIndex","handleSuccess","find","removeUploadFromList","onDelete","placeholdersInfo","getMetaDataField","getMetadataFieldName","eventName","emit","metaDataField","initUploadFields","getPrefix","getInputValue","querySelectorAll","uploaderDiv","matchesPrefix","getInitialFiles","dataTranslations","autoInitFileForms","values","Set","initFormSet","optionsParam","totalFormsValue","formCount","subFormPrefix"],"mappings":"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","x_google_ignoreList":[1,2,3,4,6,8,9,10,11,12,13,14,15,16,20,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43]}